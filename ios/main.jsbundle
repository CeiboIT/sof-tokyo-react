__DEV__=
true;


__BUNDLE_START_TIME__=Date.now();
(
function(global){
var modules=Object.create(null);
var inGuard=false;

function define(id,factory){
modules[id]={
factory:factory,
module:{exports:{}},
isInitialized:false,
hasError:false};}



function require(id){
var mod=modules[id];
if(mod&&mod.isInitialized){
return mod.module.exports;}


return requireImpl(id);}


function requireImpl(id){
if(global.ErrorUtils&&!inGuard){
inGuard=true;
var returnValue;
try{
returnValue=requireImpl.apply(this,arguments);}
catch(e){
global.ErrorUtils.reportFatalError(e);}

inGuard=false;
return returnValue;}


var mod=modules[id];
if(!mod){
var msg='Requiring unknown module "'+id+'"';
if(__DEV__){
msg+='. If you are sure the module is there, try restarting the packager.';}

throw new Error(msg);}


if(mod.hasError){
throw new Error(
'Requiring module "'+id+'" which threw an exception');}



try{


mod.isInitialized=true;

__DEV__&&BridgeProfiling().profile('JS_require_'+id);



mod.factory.call(global,global,require,mod.module,mod.module.exports);

__DEV__&&BridgeProfiling().profileEnd();}
catch(e){
mod.hasError=true;
mod.isInitialized=false;
throw e;}


return mod.module.exports;}


var BridgeProfiling=__DEV__&&function(){
var _BridgeProfiling;
try{
_BridgeProfiling=require('BridgeProfiling');}
catch(e){}

return _BridgeProfiling&&_BridgeProfiling.profile?
_BridgeProfiling:{profile:function(){},profileEnd:function(){}};};


global.__d=define;
global.require=require;})(
this);
Object.

















assign=function(target,sources){
if(__DEV__){
if(target==null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target!=='object'&&typeof target!=='function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.'+
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex<arguments.length;nextIndex++){
var nextSource=arguments[nextIndex];
if(nextSource==null){
continue;}


if(__DEV__){
if(typeof nextSource!=='object'&&
typeof nextSource!=='function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.'+
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource){
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the '+
'prototype chain. This is an edge case that we do not support. '+
'This error is a performance optimization and not spec compliant.');}}



target[key]=nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val]=true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value)&&(
keys.indexOf('message')>=0||keys.indexOf('description')>=0)){
return formatError(value);}



if(keys.length===0){
if(isFunction(value)){
var name=value.name?': '+value.name:'';
return ctx.stylize('[Function'+name+']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array=true;
braces=['[',']'];}



if(isFunction(value)){
var n=value.name?': '+value.name:'';
base=' [Function'+n+']';}



if(isRegExp(value)){
base=' '+RegExp.prototype.toString.call(value);}



if(isDate(value)){
base=' '+Date.prototype.toUTCString.call(value);}



if(isError(value)){
base=' '+formatError(value);}


if(keys.length===0&&(!array||value.length==0)){
return braces[0]+base+braces[1];}


if(recurseTimes<0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output=formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output=keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\''+JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"')+'\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize(''+value,'number');
if(isBoolean(value))
return ctx.stylize(''+value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '['+Error.prototype.toString.call(value)+']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i<l;++i){
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};
if(desc.get){
if(desc.set){
str=ctx.stylize('[Getter/Setter]','special');}else 
{
str=ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str=ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name='['+key+']';}

if(!str){
if(ctx.seen.indexOf(desc.value)<0){
if(isNull(recurseTimes)){
str=formatValue(ctx,desc.value,null);}else 
{
str=formatValue(ctx,desc.value,recurseTimes-1);}

if(str.indexOf('\n')>-1){
if(array){
str=str.split('\n').map(function(line){
return '  '+line;}).
join('\n').substr(2);}else 
{
str='\n'+str.split('\n').map(function(line){
return '   '+line;}).
join('\n');}}}else 


{
str=ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array&&key.match(/^\d+$/)){
return str;}

name=JSON.stringify(''+key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name=name.substr(1,name.length-2);
name=ctx.stylize(name,'name');}else 
{
name=name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name=ctx.stylize(name,'string');}}



return name+': '+str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n')>=0)numLinesEst++;
return prev+cur.replace(/\u001b\[\d\d?m/g,'').length+1;},
0);

if(length>60){
return braces[0]+(
base===''?'':base+'\n ')+
' '+
output.join(',\n  ')+
' '+
braces[1];}


return braces[0]+base+' '+output.join(', ')+' '+braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg==='boolean';}


function isNull(arg){
return arg===null;}


function isNullOrUndefined(arg){
return arg==null;}


function isNumber(arg){
return typeof arg==='number';}


function isString(arg){
return typeof arg==='string';}


function isSymbol(arg){
return typeof arg==='symbol';}


function isUndefined(arg){
return arg===void 0;}


function isRegExp(re){
return isObject(re)&&objectToString(re)==='[object RegExp]';}


function isObject(arg){
return typeof arg==='object'&&arg!==null;}


function isDate(d){
return isObject(d)&&objectToString(d)==='[object Date]';}


function isError(e){
return isObject(e)&&(
objectToString(e)==='[object Error]'||e instanceof Error);}


function isFunction(arg){
return typeof arg==='function';}


function isPrimitive(arg){
return arg===null||
typeof arg==='boolean'||
typeof arg==='number'||
typeof arg==='string'||
typeof arg==='symbol'||
typeof arg==='undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;}();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
info:1,
warn:2,
error:3};


function setupConsole(global){
var originalConsole=global.console;

if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str;
if(arguments.length===1&&typeof arguments[0]==='string'){
str=arguments[0];}else 
{
str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');}


var logLevel=level;
if(str.slice(0,9)==='Warning: '&&logLevel>=LOG_LEVELS.error){



logLevel=LOG_LEVELS.warn;}

global.nativeLoggingHook(str,logLevel);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows=[];
for(var key in data){
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME]=key;
rows.push(row);}}}



if(rows.length===0){
global.nativeLoggingHook('',LOG_LEVELS.info);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i]=k.length;
for(var j=0;j<rows.length;j++){
var cellStr=rows[j][k].toString();
stringRows[j]=stringRows[j]||[];
stringRows[j][i]=cellStr;
columnWidths[i]=Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i]-cell.length).join('');
return cell+extraSpaces;});

space=space||' ';
return cells.join(space+'|'+space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i<rows.length;i++){
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n'+table.join('\n'),LOG_LEVELS.info);}


global.console={
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.info),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};





if(__DEV__&&originalConsole){
Object.keys(global.console).forEach(function(methodName){
var reactNativeMethod=global.console[methodName];
if(originalConsole[methodName]){
global.console[methodName]=function(){
originalConsole[methodName].apply(originalConsole,arguments);
reactNativeMethod.apply(global.console,arguments);};}});}}






if(typeof module!=='undefined'){
module.exports=setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler=fun;},

reportError:function(error){
ErrorUtils._globalHandler&&ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler&&ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e){
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun!=='function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name=name||fun.name||'<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context||this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils=ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: '+
'\n stack: '+e.stack+
'\n line: '+e.line+
'\n message: '+e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith=function(search){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
var pos=arguments.length>1?
Number(arguments[1])||0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos)===start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith=function(search){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length>1?
Number(arguments[1])||0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end-searchString.length;
if(start<0){
return false;}

return string.lastIndexOf(searchString,start)===start;};}



if(!String.prototype.contains){
String.prototype.contains=function(search){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
var pos=arguments.length>1?
Number(arguments[1])||0:0;
return string.indexOf(String(search),pos)!==-1;};}



if(!String.prototype.repeat){
String.prototype.repeat=function(count){
'use strict';
if(this==null){
throw TypeError();}

var string=String(this);
count=Number(count)||0;
if(count<0||count===Infinity){
throw RangeError();}

if(count===1){
return string;}

var result='';
while(count){
if(count&1){
result+=string;}

if(count>>=1){
string+=string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this==null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate!=='function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length>>>0;
for(var i=0;i<length;i++){
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this==null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index===-1?undefined:this[index];}});}})();
if(












!Array.from){
Array.from=function(arrayLike){
if(arrayLike==null){
throw new TypeError('Object is null or undefined');}



var mapFn=arguments[1];
var thisArg=arguments[2];

var C=this;
var items=Object(arrayLike);
var symbolIterator=typeof Symbol==='function'?
Symbol.iterator:
'@@iterator';
var mapping=typeof mapFn==='function';
var usingIterator=typeof items[symbolIterator]==='function';
var key=0;
var ret;
var value;

if(usingIterator){
ret=typeof C==='function'?
new C():
[];
var it=items[symbolIterator]();
var next;

while(!(next=it.next()).done){
value=next.value;

if(mapping){
value=mapFn.call(thisArg,value,key);}


ret[key]=value;
key+=1;}


ret.length=key;
return ret;}


var len=items.length;
if(isNaN(len)||len<0){
len=0;}


ret=typeof C==='function'?
new C(len):
new Array(len);

while(key<len){
value=items[key];

if(mapping){
value=mapFn.call(thisArg,value,key);}


ret[key]=value;

key+=1;}


ret.length=key;
return ret;};}
(

















function(global){
var babelHelpers=global.babelHelpers={};

babelHelpers.createRawReactElement=function(){
var REACT_ELEMENT_TYPE=typeof Symbol==="function"&&Symbol.for&&Symbol.for("react.element")||0xeac7;
return function createRawReactElement(type,key,props){
return {
$$typeof:REACT_ELEMENT_TYPE,
type:type,
key:key,
ref:null,
props:props,
_owner:null};};}();




babelHelpers.classCallCheck=function(instance,Constructor){
if(!(instance instanceof Constructor)){
throw new TypeError("Cannot call a class as a function");}};



babelHelpers.createClass=function(){
function defineProperties(target,props){
for(var i=0;i<props.length;i++){
var descriptor=props[i];
descriptor.enumerable=descriptor.enumerable||false;
descriptor.configurable=true;
if("value" in descriptor)descriptor.writable=true;
Object.defineProperty(target,descriptor.key,descriptor);}}



return function(Constructor,protoProps,staticProps){
if(protoProps)defineProperties(Constructor.prototype,protoProps);
if(staticProps)defineProperties(Constructor,staticProps);
return Constructor;};}();



babelHelpers.defineProperty=function(obj,key,value){
if(key in obj){
Object.defineProperty(obj,key,{
value:value,
enumerable:true,
configurable:true,
writable:true});}else 

{
obj[key]=value;}


return obj;};


babelHelpers._extends=babelHelpers.extends=Object.assign||function(target){
for(var i=1;i<arguments.length;i++){
var source=arguments[i];

for(var key in source){
if(Object.prototype.hasOwnProperty.call(source,key)){
target[key]=source[key];}}}




return target;};


babelHelpers.get=function get(object,property,receiver){
if(object===null)object=Function.prototype;
var desc=Object.getOwnPropertyDescriptor(object,property);

if(desc===undefined){
var parent=Object.getPrototypeOf(object);

if(parent===null){
return undefined;}else 
{
return get(parent,property,receiver);}}else 

if("value" in desc){
return desc.value;}else 
{
var getter=desc.get;

if(getter===undefined){
return undefined;}


return getter.call(receiver);}};



babelHelpers.inherits=function(subClass,superClass){
if(typeof superClass!=="function"&&superClass!==null){
throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}


subClass.prototype=Object.create(superClass&&superClass.prototype,{
constructor:{
value:subClass,
enumerable:false,
writable:true,
configurable:true}});


if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;};


babelHelpers.interopRequireDefault=function(obj){
return obj&&obj.__esModule?obj:{
default:obj};};



babelHelpers.interopRequireWildcard=function(obj){
if(obj&&obj.__esModule){
return obj;}else 
{
var newObj={};

if(obj!=null){
for(var key in obj){
if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}



newObj.default=obj;
return newObj;}};



babelHelpers.objectWithoutProperties=function(obj,keys){
var target={};

for(var i in obj){
if(keys.indexOf(i)>=0)continue;
if(!Object.prototype.hasOwnProperty.call(obj,i))continue;
target[i]=obj[i];}


return target;};


babelHelpers.possibleConstructorReturn=function(self,call){
if(!self){
throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}


return call&&(typeof call==="object"||typeof call==="function")?call:self;};


babelHelpers.slicedToArray=function(){
function sliceIterator(arr,i){
var _arr=[];
var _n=true;
var _d=false;
var _e=undefined;

try{
for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){
_arr.push(_s.value);

if(i&&_arr.length===i)break;}}

catch(err){
_d=true;
_e=err;}finally 
{
try{
if(!_n&&_i["return"])_i["return"]();}finally 
{
if(_d)throw _e;}}



return _arr;}


return function(arr,i){
if(Array.isArray(arr)){
return arr;}else 
if(Symbol.iterator in Object(arr)){
return sliceIterator(arr,i);}else 
{
throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();




babelHelpers.taggedTemplateLiteral=function(strings,raw){
return Object.freeze(Object.defineProperties(strings,{
raw:{
value:Object.freeze(raw)}}));};




babelHelpers.toConsumableArray=function(arr){
if(Array.isArray(arr)){
for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}

return arr2;}else 
{
return Array.from(arr);}};})(


typeof global!=='undefined'?global:typeof self!=='undefined'?self:this);
__d('sofTokyo/index.ios.js',function(global, require, module, exports) {  'use strict';





var React=require('react-native/Libraries/react-native/react-native.js');

var SitePanel=require("sofTokyo/app/components/navigation/SitePanel.js");
var FooterNav=require("sofTokyo/app/components/navigation/FooterNav.js");

var SidebarSubject=require("sofTokyo/app/services/Streams.js").getStream("Sidebar");
var firstRoute=require("sofTokyo/app/services/NavigationManager.js").getFirstRoute();

var Drawer=require('react-native-drawer/index.js');
var Router=require('gb-native-router/index.js');var 


AppRegistry=

React.AppRegistry;var StyleSheet=React.StyleSheet;

var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#111111'},

header:{
backgroundColor:'#FFF'}});var 




sofTokyo=function(_React$Component){babelHelpers.inherits(sofTokyo,_React$Component);

function sofTokyo(props){babelHelpers.classCallCheck(this,sofTokyo);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(sofTokyo).call(this,
props));}babelHelpers.createClass(sofTokyo,[{key:'subscribe',value:function subscribe()


{var _this2=this;
var _closed=true;
SidebarSubject.subscribe(function(type){
switch(type){
case 'open':
_this2.refs.drawer.open();
break;
case 'close':
_this2.refs.drawer.close();
break;}});}},{key:'render',value:function render()




{
this.subscribe();
return (
React.createElement(Drawer,{ref:'drawer',content:React.createElement(SitePanel,null)},
React.createElement(Router,{ref:'router',firstRoute:firstRoute,headerStyle:styles.header}),

React.createElement(FooterNav,null)));}}]);return sofTokyo;}(React.Component);




AppRegistry.registerComponent('sofTokyo',function(){return sofTokyo;});
});
__d('react-native/Libraries/react-native/react-native.js',function(global, require, module, exports) {  'use strict';












var ReactNative=babelHelpers.extends({

get ActivityIndicatorIOS(){return require('ActivityIndicatorIOS');},
get ART(){return require('ReactNativeART');},
get DatePickerIOS(){return require('DatePickerIOS');},
get DrawerLayoutAndroid(){return require('DrawerLayoutAndroid');},
get Image(){return require('Image');},
get ListView(){return require('ListView');},
get MapView(){return require('MapView');},
get Modal(){return require('Modal');},
get Navigator(){return require('Navigator');},
get NavigatorIOS(){return require('NavigatorIOS');},
get PickerIOS(){return require('PickerIOS');},
get ProgressBarAndroid(){return require('ProgressBarAndroid');},
get ProgressViewIOS(){return require('ProgressViewIOS');},
get ScrollView(){return require('ScrollView');},
get SegmentedControlIOS(){return require('SegmentedControlIOS');},
get SliderIOS(){return require('SliderIOS');},
get SnapshotViewIOS(){return require('SnapshotViewIOS');},
get Switch(){return require('Switch');},
get PullToRefreshViewAndroid(){return require('PullToRefreshViewAndroid');},
get SwitchAndroid(){return require('SwitchAndroid');},
get SwitchIOS(){return require('SwitchIOS');},
get TabBarIOS(){return require('TabBarIOS');},
get Text(){return require('Text');},
get TextInput(){return require('TextInput');},
get ToastAndroid(){return require('ToastAndroid');},
get ToolbarAndroid(){return require('ToolbarAndroid');},
get Touchable(){return require('Touchable');},
get TouchableHighlight(){return require('TouchableHighlight');},
get TouchableNativeFeedback(){return require('TouchableNativeFeedback');},
get TouchableOpacity(){return require('TouchableOpacity');},
get TouchableWithoutFeedback(){return require('TouchableWithoutFeedback');},
get View(){return require('View');},
get ViewPagerAndroid(){return require('ViewPagerAndroid');},
get WebView(){return require('WebView');},


get ActionSheetIOS(){return require('ActionSheetIOS');},
get AdSupportIOS(){return require('AdSupportIOS');},
get Alert(){return require('Alert');},
get AlertIOS(){return require('AlertIOS');},
get Animated(){return require('Animated');},
get AppRegistry(){return require('AppRegistry');},
get AppStateIOS(){return require('AppStateIOS');},
get AsyncStorage(){return require('AsyncStorage');},
get BackAndroid(){return require('BackAndroid');},
get CameraRoll(){return require('CameraRoll');},
get Clipboard(){return require('Clipboard');},
get Dimensions(){return require('Dimensions');},
get Easing(){return require('Easing');},
get ImagePickerIOS(){return require('ImagePickerIOS');},
get IntentAndroid(){return require('IntentAndroid');},
get InteractionManager(){return require('InteractionManager');},
get LayoutAnimation(){return require('LayoutAnimation');},
get LinkingIOS(){return require('LinkingIOS');},
get NetInfo(){return require('NetInfo');},
get PanResponder(){return require('PanResponder');},
get PixelRatio(){return require('PixelRatio');},
get PushNotificationIOS(){return require('PushNotificationIOS');},
get Settings(){return require('Settings');},
get StatusBarIOS(){return require('StatusBarIOS');},
get StyleSheet(){return require('StyleSheet');},
get UIManager(){return require('UIManager');},
get VibrationIOS(){return require('VibrationIOS');},


get DeviceEventEmitter(){return require('RCTDeviceEventEmitter');},
get NativeAppEventEmitter(){return require('RCTNativeAppEventEmitter');},
get NativeModules(){return require('NativeModules');},
get Platform(){return require('Platform');},
get processColor(){return require('processColor');},
get requireNativeComponent(){return require('requireNativeComponent');},


get EdgeInsetsPropType(){return require('EdgeInsetsPropType');},
get PointPropType(){return require('PointPropType');},


addons:{
get LinkedStateMixin(){return require('LinkedStateMixin');},
Perf:undefined,
get PureRenderMixin(){return require('ReactComponentWithPureRenderMixin');},
get TestModule(){return require('NativeModules').TestModule;},
TestUtils:undefined,
get batchedUpdates(){return require('ReactUpdates').batchedUpdates;},
get cloneWithProps(){return require('cloneWithProps');},
get createFragment(){return require('ReactFragment').create;},
get update(){return require('update');}}},




require('React'));


if(__DEV__){
Object.defineProperty(ReactNative.addons,'Perf',{
enumerable:true,
get:function(){return require('ReactDefaultPerf');}});

Object.defineProperty(ReactNative.addons,'TestUtils',{
enumerable:true,
get:function(){return require('ReactTestUtils');}});}



module.exports=ReactNative;
});
__d('ActivityIndicatorIOS',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large']),






onLayout:PropTypes.func}),


getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=babelHelpers.objectWithoutProperties(_props,['onLayout','style']);
var sizeStyle=this.props.size==='large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{
onLayout:onLayout,
style:[styles.container,style]},
React.createElement(RCTActivityIndicatorView,babelHelpers.extends({},props,{style:sizeStyle}))));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
width:20,
height:20},

sizeLarge:{
width:36,
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
ActivityIndicatorIOS,
{nativeOnly:{activityIndicatorViewStyle:true}});


module.exports=ActivityIndicatorIOS;
});
__d('NativeMethodsMixin',function(global, require, module, exports) {  'use strict';












var ReactNativeAttributePayload=require('ReactNativeAttributePayload');
var TextInputState=require('TextInputState');
var UIManager=require('UIManager');

var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');

















function warnForStyleProps(props,validAttributes){
for(var key in validAttributes.style){
if(!(validAttributes[key]||props[key]===undefined)){
console.error(
'You are setting the style `{ '+key+': ... }` as a prop. You '+
'should nest it in a style object. '+
'E.g. `{ style: { '+key+': ... } }`');}}}

















var NativeMethodsMixin={

















measure:function(callback){
UIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},











measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
UIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},









setNativeProps:function(nativeProps){
if(__DEV__){
warnForStyleProps(nativeProps,this.viewConfig.validAttributes);}


var updatePayload=ReactNativeAttributePayload.create(
nativeProps,
this.viewConfig.validAttributes);


UIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
updatePayload);},







focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},





blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles!==undefined){
var owner=component._owner||null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `'+name+'`, did '+
'you mean `style` (singular)?';
if(owner&&owner.constructor&&owner.constructor.displayName){
msg+='\n\nCheck the `'+owner.constructor.displayName+'` parent '+
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount&&
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount=function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps=function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback||context.isMounted&&!context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports=NativeMethodsMixin;
});
__d('ReactNativeAttributePayload',function(global, require, module, exports) {  'use strict';












var Platform=require('Platform');

var deepDiffer=require('deepDiffer');
var styleDiffer=require('styleDiffer');
var flattenStyle=require('flattenStyle');














function translateKey(propKey){
if(propKey==='transform'){




if(Platform.OS==='android'){
return 'decomposedMatrix';}else 
{
return 'transformMatrix';}}


return propKey;}


function defaultDiffer(prevProp,nextProp){
if(typeof nextProp!=='object'||nextProp===null){

return true;}else 
{

return deepDiffer(prevProp,nextProp);}}



function diffNestedProperty(
updatePayload,
prevProp,
nextProp,
validAttributes)
{





if(!styleDiffer(prevProp,nextProp)){
return updatePayload;}




var previousFlattenedStyle=flattenStyle(prevProp);
var nextFlattenedStyle=flattenStyle(nextProp);

if(!previousFlattenedStyle||!nextFlattenedStyle){
if(nextFlattenedStyle){
return addProperties(
updatePayload,
nextFlattenedStyle,
validAttributes);}


if(previousFlattenedStyle){
return clearProperties(
updatePayload,
previousFlattenedStyle,
validAttributes);}


return updatePayload;}



return diffProperties(
updatePayload,
previousFlattenedStyle,
nextFlattenedStyle,
validAttributes);}























function clearNestedProperty(
updatePayload,
prevProp,
validAttributes)
{

return diffNestedProperty(updatePayload,prevProp,{},validAttributes);}








function diffProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var attributeConfig;
var nextProp;
var prevProp;

for(var propKey in nextProps){
attributeConfig=validAttributes[propKey];
if(!attributeConfig){
continue;}


var altKey=translateKey(propKey);
if(!validAttributes[altKey]){

altKey=propKey;}


if(updatePayload&&updatePayload[altKey]!==undefined){


continue;}

prevProp=prevProps[propKey];
nextProp=nextProps[propKey];



if(typeof nextProp==='function'){
nextProp=true;


if(typeof prevProp==='function'){
prevProp=true;}}



if(prevProp===nextProp){
continue;}



if(typeof attributeConfig!=='object'){

if(defaultDiffer(prevProp,nextProp)){

(updatePayload||(updatePayload={}))[altKey]=nextProp;}}else 

if(typeof attributeConfig.diff==='function'||
typeof attributeConfig.process==='function'){

var shouldUpdate=prevProp===undefined||(
typeof attributeConfig.diff==='function'?
attributeConfig.diff(prevProp,nextProp):
defaultDiffer(prevProp,nextProp));

if(shouldUpdate){
var nextValue=typeof attributeConfig.process==='function'?
attributeConfig.process(nextProp):
nextProp;
(updatePayload||(updatePayload={}))[altKey]=nextValue;}}else 

{

updatePayload=diffNestedProperty(
updatePayload,
prevProp,
nextProp,
attributeConfig);}}







for(var propKey in prevProps){
if(nextProps[propKey]!==undefined){
continue;}

attributeConfig=validAttributes[propKey];
if(!attributeConfig){
continue;}


prevProp=prevProps[propKey];
if(prevProp===undefined){
continue;}


if(typeof attributeConfig!=='object'||
typeof attributeConfig.diff==='function'||
typeof attributeConfig.process==='function'){



(updatePayload||(updatePayload={}))[translateKey(propKey)]=null;}else 
{



updatePayload=clearNestedProperty(
updatePayload,
prevProp,
attributeConfig);}}



return updatePayload;}





function addProperties(
updatePayload,
props,
validAttributes)
{
return diffProperties(updatePayload,{},props,validAttributes);}






function clearProperties(
updatePayload,
prevProps,
validAttributes)
{
return diffProperties(updatePayload,prevProps,{},validAttributes);}


var ReactNativeAttributePayload={

create:function(
props,
validAttributes)
{
return addProperties(
null,
props,
validAttributes);},



diff:function(
prevProps,
nextProps,
validAttributes)
{
return diffProperties(
null,
prevProps,
nextProps,
validAttributes);}};





module.exports=ReactNativeAttributePayload;
});
__d('Platform',function(global, require, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports=Platform;
});
__d('deepDiffer',function(global, require, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one===two){

return false;}

if(typeof one==='function'&&typeof two==='function'){

return false;}

if(typeof one!=='object'||one===null){

return one!==two;}

if(typeof two!=='object'||two===null){


return true;}

if(one.constructor!==two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length!==len){
return true;}

for(var ii=0;ii<len;ii++){
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one){
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two){


if(one[twoKey]===undefined&&two[twoKey]!==undefined){
return true;}}}



return false;};


module.exports=deepDiffer;
});
__d('styleDiffer',function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a!==typeof b){
return false;}

if(typeof a==='number'){
return a===b;}


if(Array.isArray(a)){
if(!Array.isArray(b)||a.length!==b.length){
return false;}

for(var i=0;i<a.length;++i){
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a){
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b){
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports=styleDiffer;
});
__d('flattenStyle',function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');



function getStyle(style){
if(typeof style==='number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style!==true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i<style.length;++i){
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle){
result[key]=computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports=flattenStyle;
});
__d('StyleSheetTypes',function(global, require, module, exports) {  'use strict';
});
__d('StyleSheetRegistry',function(global, require, module, exports) {  'use strict';












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=function(){function StyleSheetRegistry(){babelHelpers.classCallCheck(this,StyleSheetRegistry);}babelHelpers.createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:function registerStyle(
style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id]=style;
return id;}},{key:'getStyleByID',value:function getStyleByID(


id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `'+id+'`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;}();



module.exports=StyleSheetRegistry;
});
__d('invariant',function(global, require, module, exports) {  'use strict';























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format===undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format===undefined){
error=new Error(
'Minified exception occurred; use the non-minified dev environment '+
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error=new Error(
'Invariant Violation: '+
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop=1;
throw error;}};



module.exports=invariant;
});
__d('TextInputState',function(global, require, module, exports) {  'use strict';
















var Platform=require('Platform');
var UIManager=require('UIManager');

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID!==textFieldID&&textFieldID!==null){
this._currentlyFocusedID=textFieldID;
if(Platform.OS==='ios'){
UIManager.focus(textFieldID);}else 
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
textFieldID,
UIManager.AndroidTextInput.Commands.focusTextInput,
null);}}},










blurTextInput:function(textFieldID){
if(this._currentlyFocusedID===textFieldID&&textFieldID!==null){
this._currentlyFocusedID=null;
if(Platform.OS==='ios'){
UIManager.blur(textFieldID);}else 
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
textFieldID,
UIManager.AndroidTextInput.Commands.blurTextInput,
null);}}}};






module.exports=TextInputState;
});
__d('UIManager',function(global, require, module, exports) {  'use strict';












var UIManager=require('NativeModules').UIManager;

module.exports=UIManager;
});
__d('NativeModules',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var RemoteModules=BatchedBridge.RemoteModules;

function normalizePrefix(moduleName){
return moduleName.replace(/^(RCT|RK)/,'');}





Object.keys(RemoteModules).forEach(function(moduleName){
var strippedName=normalizePrefix(moduleName);
if(RemoteModules['RCT'+strippedName]&&RemoteModules['RK'+strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: '+moduleName);}


if(strippedName!==moduleName){
RemoteModules[strippedName]=RemoteModules[moduleName];
delete RemoteModules[moduleName];}});







var NativeModules={};
Object.keys(RemoteModules).forEach(function(moduleName){
Object.defineProperty(NativeModules,moduleName,{
enumerable:true,
get:function(){
var module=RemoteModules[moduleName];
if(module&&typeof module.moduleID==='number'&&global.nativeRequireModuleConfig){
var json=global.nativeRequireModuleConfig(moduleName);
var config=json&&JSON.parse(json);
module=config&&BatchedBridge.processModuleConfig(config,module.moduleID);
RemoteModules[moduleName]=module;}

return module;}});});













var UIManager=NativeModules.UIManager;
UIManager&&Object.keys(UIManager).forEach(function(viewName){
var viewConfig=UIManager[viewName];
var constants={};
if(viewConfig.Manager){
Object.defineProperty(viewConfig,'Constants',{
enumerable:true,
get:function(){
var viewManager=NativeModules[normalizePrefix(viewConfig.Manager)];
viewManager&&Object.keys(viewManager).forEach(function(key){
var value=viewManager[key];
if(typeof value!=='function'){
constants[key]=value;}});


return constants;}});}});





module.exports=NativeModules;
});
__d('BatchedBridge',function(global, require, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig,
__fbBatchedBridgeConfig.localModulesConfig);




var BridgeProfiling=require('BridgeProfiling');
var JSTimersExecution=require('JSTimersExecution');

BatchedBridge.registerCallableModule('BridgeProfiling',BridgeProfiling);
BatchedBridge.registerCallableModule('JSTimersExecution',JSTimersExecution);







Object.defineProperty(global,'__fbBatchedBridge',{value:BatchedBridge});

module.exports=BatchedBridge;
});
__d('MessageQueue',function(global, require, module, exports) {  'use strict';














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;
var MIN_TIME_BETWEEN_FLUSHES_MS=5;

var SPY_MODE=false;

var MethodTypes=keyMirror({
remote:null,
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error){
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=function(){

function MessageQueue(remoteModules,localModules){var _this=this;babelHelpers.classCallCheck(this,MessageQueue);
this.RemoteModules={};

this._callableModules={};
this._queue=[[],[],[]];
this._moduleTable={};
this._methodTable={};
this._callbacks=[];
this._callbackID=0;
this._lastFlush=0;

[
'invokeCallbackAndReturnFlushedQueue',
'callFunctionReturnFlushedQueue',
'flushedQueue'].
forEach(function(fn){return _this[fn]=_this[fn].bind(_this);});

var modulesConfig=this._genModulesConfig(remoteModules);
this._genModules(modulesConfig);
localModules&&this._genLookupTables(
this._genModulesConfig(localModules),this._moduleTable,this._methodTable);


this._debugInfo={};
this._remoteModuleTable={};
this._remoteMethodTable={};
this._genLookupTables(
modulesConfig,this._remoteModuleTable,this._remoteMethodTable);}babelHelpers.createClass(MessageQueue,[{key:'callFunctionReturnFlushedQueue',value:function callFunctionReturnFlushedQueue(






module,method,args){var _this2=this;
guard(function(){
_this2.__callFunction(module,method,args);
_this2.__callImmediates();});


return this.flushedQueue();}},{key:'invokeCallbackAndReturnFlushedQueue',value:function invokeCallbackAndReturnFlushedQueue(


cbID,args){var _this3=this;
guard(function(){
_this3.__invokeCallback(cbID,args);
_this3.__callImmediates();});


return this.flushedQueue();}},{key:'flushedQueue',value:function flushedQueue()


{
this.__callImmediates();

var queue=this._queue;
this._queue=[[],[],[]];
return queue[0].length?queue:null;}},{key:'processModuleConfig',value:function processModuleConfig(


config,moduleID){
var module=this._genModule(config,moduleID);
this._genLookup(config,moduleID,this._remoteModuleTable,this._remoteMethodTable);
return module;}},{key:'__callImmediates',value:function __callImmediates()






{
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();}},{key:'__nativeCall',value:function __nativeCall(


module,method,params,onFail,onSucc){
if(onFail||onSucc){

this._callbackID>1<<5&&(
this._debugInfo[this._callbackID>>5]=null);

this._debugInfo[this._callbackID>>1]=[module,method];
onFail&&params.push(this._callbackID);
this._callbacks[this._callbackID++]=onFail;
onSucc&&params.push(this._callbackID);
this._callbacks[this._callbackID++]=onSucc;}

this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);

var now=new Date().getTime();
if(global.nativeFlushQueueImmediate&&
now-this._lastFlush>=MIN_TIME_BETWEEN_FLUSHES_MS){
global.nativeFlushQueueImmediate(this._queue);
this._queue=[[],[],[]];
this._lastFlush=now;}

if(__DEV__&&SPY_MODE&&isFinite(module)){
console.log('JS->N : '+this._remoteModuleTable[module]+'.'+
this._remoteMethodTable[module][method]+'('+JSON.stringify(params)+')');}}},{key:'__callFunction',value:function __callFunction(



module,method,args){
this._lastFlush=new Date().getTime();
if(isFinite(module)){
method=this._methodTable[module][method];
module=this._moduleTable[module];}

BridgeProfiling.profile(function(){return module+'.'+method+'('+stringifySafe(args)+')';});
if(__DEV__&&SPY_MODE){
console.log('N->JS : '+module+'.'+method+'('+JSON.stringify(args)+')');}

var moduleMethods=this._callableModules[module];
if(!moduleMethods){



console.warn('Module is not registered:',module);
moduleMethods=require(module);}








moduleMethods[method].apply(moduleMethods,args);
BridgeProfiling.profileEnd();}},{key:'__invokeCallback',value:function __invokeCallback(


cbID,args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback('+cbID+', '+stringifySafe(args)+')';});
this._lastFlush=new Date().getTime();
var callback=this._callbacks[cbID];
if(!callback||__DEV__){
var debug=this._debugInfo[cbID>>1];
var _module=debug&&this._remoteModuleTable[debug[0]];
var method=debug&&this._remoteMethodTable[debug[0]][debug[1]];
invariant(
callback,'Callback with id '+
cbID+': '+_module+'.'+method+'() not found');

if(callback&&SPY_MODE){
console.log('N->JS : <callback for '+_module+'.'+method+'>('+JSON.stringify(args)+')');}}


this._callbacks[cbID&~1]=null;
this._callbacks[cbID|1]=null;
callback.apply(null,args);
BridgeProfiling.profileEnd();}},{key:'_genModulesConfig',value:function _genModulesConfig(











modules){
if(Array.isArray(modules)){
return modules;}else 
{
var moduleArray=[];
var moduleNames=Object.keys(modules);
for(var i=0,l=moduleNames.length;i<l;i++){
var moduleName=moduleNames[i];
var moduleConfig=modules[moduleName];
var _module2=[moduleName];
if(moduleConfig.constants){
_module2.push(moduleConfig.constants);}

var methodsConfig=moduleConfig.methods;
if(methodsConfig){
var methods=[];
var asyncMethods=[];
var methodNames=Object.keys(methodsConfig);
for(var j=0,ll=methodNames.length;j<ll;j++){
var methodName=methodNames[j];
var methodConfig=methodsConfig[methodName];
methods[methodConfig.methodID]=methodName;
if(methodConfig.type===MethodTypes.remoteAsync){
asyncMethods.push(methodConfig.methodID);}}


if(methods.length){
_module2.push(methods);
if(asyncMethods.length){
_module2.push(asyncMethods);}}}



moduleArray[moduleConfig.moduleID]=_module2;}

return moduleArray;}}},{key:'_genLookupTables',value:function _genLookupTables(



modulesConfig,moduleTable,methodTable){var _this4=this;
modulesConfig.forEach(function(config,moduleID){
_this4._genLookup(config,moduleID,moduleTable,methodTable);});}},{key:'_genLookup',value:function _genLookup(



config,moduleID,moduleTable,methodTable){
if(!config){
return;}


var moduleName=undefined,methods=undefined;
if(moduleHasConstants(config)){var _config=babelHelpers.slicedToArray(
config,3);moduleName=_config[0];methods=_config[2];}else 
{var _config2=babelHelpers.slicedToArray(
config,2);moduleName=_config2[0];methods=_config2[1];}


moduleTable[moduleID]=moduleName;
methodTable[moduleID]=babelHelpers.extends({},methods);}},{key:'_genModules',value:function _genModules(


remoteModules){var _this5=this;
remoteModules.forEach(function(config,moduleID){
_this5._genModule(config,moduleID);});}},{key:'_genModule',value:function _genModule(



config,moduleID){var _this6=this;
if(!config){
return;}


var moduleName=undefined,constants=undefined,methods=undefined,asyncMethods=undefined;
if(moduleHasConstants(config)){var _config3=babelHelpers.slicedToArray(
config,4);moduleName=_config3[0];constants=_config3[1];methods=_config3[2];asyncMethods=_config3[3];}else 
{var _config4=babelHelpers.slicedToArray(
config,3);moduleName=_config4[0];methods=_config4[1];asyncMethods=_config4[2];}


var module={};
methods&&methods.forEach(function(methodName,methodID){
var methodType=
asyncMethods&&arrayContains(asyncMethods,methodID)?
MethodTypes.remoteAsync:MethodTypes.remote;
module[methodName]=_this6._genMethod(moduleID,methodID,methodType);});

babelHelpers.extends(module,constants);

if(!constants&&!methods&&!asyncMethods){
module.moduleID=moduleID;}


this.RemoteModules[moduleName]=module;
return module;}},{key:'_genMethod',value:function _genMethod(


module,method,type){
var fn=null;
var self=this;
if(type===MethodTypes.remoteAsync){
fn=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
return new Promise(function(resolve,reject){
self.__nativeCall(module,method,args,resolve,function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
fn=function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}
var lastArg=args.length>0?args[args.length-1]:null;
var secondLastArg=args.length>1?args[args.length-2]:null;
var hasSuccCB=typeof lastArg==='function';
var hasErrorCB=typeof secondLastArg==='function';
hasErrorCB&&invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB+hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args=args.slice(0,args.length-numCBs);
return self.__nativeCall(module,method,args,onFail,onSucc);};}


fn.type=type;
return fn;}},{key:'registerCallableModule',value:function registerCallableModule(


name,methods){
this._callableModules[name]=methods;}}]);return MessageQueue;}();




function moduleHasConstants(moduleArray){
return !Array.isArray(moduleArray[1]);}


function arrayContains(array,value){
return array.indexOf(value)!==-1;}


function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=babelHelpers.objectWithoutProperties(errorData,['message']);
var error=new Error(message);
error.framesToPop=1;
return babelHelpers.extends(error,extraErrorInfo);}


module.exports=MessageQueue;
});
__d('BridgeProfiling',function(global, require, module, exports) {  'use strict';



















var GLOBAL=GLOBAL||this;
var TRACE_TAG_REACT_APPS=1<<17;
var TRACE_TAG_JSC_CALLS=1<<27;

var _enabled=false;
var _asyncCookie=0;
var _ReactPerf=null;
function ReactPerf(){
if(!_ReactPerf){
_ReactPerf=require('ReactPerf');}

return _ReactPerf;}


var BridgeProfiling={
setEnabled:function(enabled){
if(_enabled!==enabled){
if(enabled){
global.nativeTraceBeginLegacy&&global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);}else 
{
global.nativeTraceEndLegacy&&global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);}}


_enabled=enabled;

ReactPerf().enableMeasure=enabled;},





profile:function(profileName){
if(_enabled){
profileName=typeof profileName==='function'?
profileName():profileName;
global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS,profileName);}},



profileEnd:function(){
if(_enabled){
global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);}},








profileAsync:function(profileName){
var cookie=_asyncCookie;
if(_enabled){
_asyncCookie++;
profileName=typeof profileName==='function'?
profileName():profileName;
global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS,profileName,cookie,0);}

return cookie;},


profileAsyncEnd:function(profileName,cookie){
if(_enabled){
profileName=typeof profileName==='function'?
profileName():profileName;
global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS,profileName,cookie,0);}},



reactPerfMeasure:function(objName,fnName,func){
return function(component){
if(!_enabled){
return func.apply(this,arguments);}


var name=objName==='ReactCompositeComponent'&&this.getName()||'';
BridgeProfiling.profile(objName+'.'+fnName+'('+name+')');
var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};},



swizzleReactPerf:function(){
ReactPerf().injection.injectMeasure(BridgeProfiling.reactPerfMeasure);},






attachToRelayProfiler:function(relayProfiler){
relayProfiler.attachProfileHandler('*',function(name){
var cookie=BridgeProfiling.profileAsync(name);
return function(){
BridgeProfiling.profileAsyncEnd(name,cookie);};});},






swizzleJSON:function(){
BridgeProfiling.measureMethods(JSON,'JSON',[
'parse',
'stringify']);},











measureMethods:function(object,objectName,methodNames){
if(!__DEV__){
return;}


methodNames.forEach(function(methodName){
object[methodName]=BridgeProfiling.measure(
objectName,
methodName,
object[methodName]);});},













measure:function(objName,fnName,func){
if(!__DEV__){
return func;}


var profileName=objName+'.'+fnName;
return function(){
if(!_enabled){
return func.apply(this,arguments);}


BridgeProfiling.profile(profileName);
var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};}};




BridgeProfiling.setEnabled(global.__RCTProfileIsProfiling||false);

module.exports=BridgeProfiling;
});
__d('ReactPerf',function(global, require, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames){
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key]=ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc=ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName=objName+'_'+fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure=measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports=ReactPerf;
});
__d('ErrorUtils',function(global, require, module, exports) {  var 











GLOBAL=this;













module.exports=GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',function(global, require, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');
var BridgeProfiling=require('BridgeProfiling');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID<=JSTimersExecution.GUID,'Tried to call timer with ID '+timerID+' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex===-1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type===JSTimersExecution.Type.setTimeout||
type===JSTimersExecution.Type.setImmediate||
type===JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type===JSTimersExecution.Type.setTimeout||
type===JSTimersExecution.Type.setInterval||
type===JSTimersExecution.Type.setImmediate){
callback();}else 
if(type===JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: '+type);
return;}}

catch(e){

JSTimersExecution.errors=JSTimersExecution.errors||[];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length!==0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors=null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount>1){


for(var ii=1;ii<errorCount;ii++){
require('JSTimers').setTimeout(
function(error){throw error;}.bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediatesPass:function(){
BridgeProfiling.profile('JSTimersExecution.callImmediatesPass()');



if(JSTimersExecution.immediates.length>0){
var passImmediates=JSTimersExecution.immediates.slice();
JSTimersExecution.immediates=[];



for(var i=0;i<passImmediates.length;++i){
JSTimersExecution.callTimer(passImmediates[i]);}}



BridgeProfiling.profileEnd();

return JSTimersExecution.immediates.length>0;},






callImmediates:function(){
JSTimersExecution.errors=null;
while(JSTimersExecution.callImmediatesPass()){}
if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i]=null;
JSTimersExecution.callbacks[i]=null;
JSTimersExecution.types[i]=null;}};



module.exports=JSTimersExecution;
});
__d('keyMirror',function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object&&!Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj){
if(!obj.hasOwnProperty(key)){
continue;}

ret[key]=key;}

return ret;};


module.exports=keyMirror;
});
__d('performanceNow',function(global, require, module, exports) {  var 











performance=require('performance');
var curPerformance=performance;






if(!curPerformance||!curPerformance.now){
curPerformance=Date;}


var performanceNow=curPerformance.now.bind(curPerformance);

module.exports=performanceNow;
});
__d('performance',function(global, require, module, exports) {  'use strict';













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance=
window.performance||
window.msPerformance||
window.webkitPerformance;}


module.exports=performance||{};
});
__d('ExecutionEnvironment',function(global, require, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker!=='undefined',

canUseEventListeners:
canUseDOM&&!!(window.addEventListener||window.attachEvent),

canUseViewport:canUseDOM&&!!window.screen,

isInWorker:!canUseDOM};



module.exports=ExecutionEnvironment;
});
__d('warning',function(global, require, module, exports) {  'use strict';












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning=function(condition,format){for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}
if(format===undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning '+
'message argument');}



if(format.indexOf('Failed Composite propType: ')===0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: '+format.replace(/%s/g,function(){return args[argIndex++];});
if(typeof console!=='undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x){}}};}




module.exports=warning;
});
__d('emptyFunction',function(global, require, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns=makeEmptyFunction;
emptyFunction.thatReturnsFalse=makeEmptyFunction(false);
emptyFunction.thatReturnsTrue=makeEmptyFunction(true);
emptyFunction.thatReturnsNull=makeEmptyFunction(null);
emptyFunction.thatReturnsThis=function(){return this;};
emptyFunction.thatReturnsArgument=function(arg){return arg;};

module.exports=emptyFunction;
});
__d('JSTimers',function(global, require, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex===-1){
freeIndex=JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration||0,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2>2?_len2-2:0),_key2=2;_key2<_len2;_key2++){args[_key2-2]=arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration||0,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){args[_key3-1]=arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex]=newID;
JSTimersExecution.callbacks[freeIndex]=func;
JSTimersExecution.types[freeIndex]=JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID==null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index!==-1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index]!==JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports=JSTimers;
});
__d('stringifySafe',function(global, require, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg===undefined){
ret='undefined';}else 
if(arg===null){
ret='null';}else 
if(type==='string'){
ret='"'+arg+'"';}else 
if(type==='function'){
try{
ret=arg.toString();}
catch(e){
ret='[function unknown]';}}else 

{


try{
ret=JSON.stringify(arg);}
catch(e){
if(typeof arg.toString==='function'){
try{
ret=arg.toString();}
catch(E){}}}}



return ret||'["'+type+'" failed to stringify]';}


module.exports=stringifySafe;
});
__d('findNodeHandle',function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner!==null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). '+
'render() should be a pure function of props and state. It should '+
'never access something that requires stale data from the previous '+
'render, such as refs. Move this logic to componentDidMount and '+
'componentDidUpdate instead.',
owner.getName()||'A component');

owner._warnedAboutRefsInRender=true;}}


if(componentOrHandle==null){
return null;}

if(typeof componentOrHandle==='number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component==='object'&&
'_rootNodeID' in component||


component.render!=null&&
typeof component.render==='function',

'findNodeHandle(...): Argument is not a component '+
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted '+
'component.');}}}





module.exports=findNodeHandle;
});
__d('ReactCurrentOwner',function(global, require, module, exports) {  'use strict';


















var ReactCurrentOwner={





current:null};



module.exports=ReactCurrentOwner;
});
__d('ReactInstanceMap',function(global, require, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance=undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance!==undefined;},


set:function(key,value){
key._reactInternalInstance=value;}};




module.exports=ReactInstanceMap;
});
__d('ReactNativeTagHandles',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)){
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID&&tag,'Root node or tag is null when associating');
if(rootNodeID&&tag){
ReactNativeTagHandles.tagToRootNodeID[tag]=rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID]=tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r['+tag+']'+NATIVE_TOP_ROOT_ID_SEPARATOR;},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag%10===1;},


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index===-1){
return null;}

return nodeID.substr(0,index+NATIVE_TOP_ROOT_ID_SEPARATOR.length);},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports=ReactNativeTagHandles;
});
__d('ReactPropTypes',function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
var getIteratorFn=require('getIteratorFn');
















































var ANONYMOUS='<<anonymous>>';

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:createElementTypeChecker(),
instanceOf:createInstanceTypeChecker,
node:createNodeChecker(),
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(
isRequired,
props,
propName,
componentName,
location,
propFullName)
{
componentName=componentName||ANONYMOUS;
propFullName=propFullName||propName;
if(props[propName]==null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required '+locationName+' `'+propFullName+'` was not specified in '+('`'+
componentName+'`.'));}


return null;}else 
{
return validate(props,propName,componentName,location,propFullName);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired=checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType!==expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
preciseType+'` supplied to `'+componentName+'`, expected ')+('`'+
expectedType+'`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
propType+'` supplied to `'+componentName+'`, expected an array.'));}


for(var i=0;i<propValue.length;i++){
var error=typeChecker(
propValue,
i,
componentName,
location,
propFullName+'['+i+']');

if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` supplied to '+('`'+
componentName+'`, expected a single ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location,propFullName){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name||ANONYMOUS;
var actualClassName=getClassName(props[propName]);
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
actualClassName+'` supplied to `'+componentName+'`, expected ')+('instance of `'+
expectedClassName+'`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
if(!Array.isArray(expectedValues)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOf, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
for(var i=0;i<expectedValues.length;i++){
if(propValue===expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of value `'+propValue+'` '+('supplied to `'+
componentName+'`, expected one of '+valuesString+'.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType!=='object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type '+('`'+
propType+'` supplied to `'+componentName+'`, expected an object.'));}


for(var key in propValue){
if(propValue.hasOwnProperty(key)){
var error=typeChecker(
propValue,
key,
componentName,
location,
propFullName+'.'+key);

if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
if(!Array.isArray(arrayOfTypeCheckers)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
for(var i=0;i<arrayOfTypeCheckers.length;i++){
var checker=arrayOfTypeCheckers[i];
if(
checker(props,propName,componentName,location,propFullName)==null)
{
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` supplied to '+('`'+
componentName+'`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` supplied to '+('`'+
componentName+'`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType!=='object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid '+locationName+' `'+propFullName+'` of type `'+propType+'` '+('supplied to `'+
componentName+'`, expected `object`.'));}


for(var key in shapeTypes){
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(
propValue,
key,
componentName,
location,
propFullName+'.'+key);

if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue===null||ReactElement.isValidElement(propValue)){
return true;}


var iteratorFn=getIteratorFn(propValue);
if(iteratorFn){
var iterator=iteratorFn.call(propValue);
var step;
if(iteratorFn!==propValue.entries){
while(!(step=iterator.next()).done){
if(!isNode(step.value)){
return false;}}}else 


{

while(!(step=iterator.next()).done){
var entry=step.value;
if(entry){
if(!isNode(entry[1])){
return false;}}}}}else 




{
return false;}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType==='object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}



function getClassName(propValue){
if(!propValue.constructor||!propValue.constructor.name){
return '<<anonymous>>';}

return propValue.constructor.name;}


module.exports=ReactPropTypes;
});
__d('ReactElement',function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');
var canDefineProperty=require('canDefineProperty');



var REACT_ELEMENT_TYPE=
typeof Symbol==='function'&&Symbol.for&&Symbol.for('react.element')||
0xeac7;

var RESERVED_PROPS={
key:true,
ref:true,
__self:true,
__source:true};




















var ReactElement=function(type,key,ref,self,source,owner,props){
var element={

$$typeof:REACT_ELEMENT_TYPE,


type:type,
key:key,
ref:ref,
props:props,


_owner:owner};


if(__DEV__){




element._store={};





if(canDefineProperty){
Object.defineProperty(element._store,'validated',{
configurable:false,
enumerable:false,
writable:true,
value:false});


Object.defineProperty(element,'_self',{
configurable:false,
enumerable:false,
writable:false,
value:self});



Object.defineProperty(element,'_source',{
configurable:false,
enumerable:false,
writable:false,
value:source});}else 

{
element._store.validated=false;
element._self=self;
element._source=source;}

Object.freeze(element.props);
Object.freeze(element);}


return element;};


ReactElement.createElement=function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;
var self=null;
var source=null;

if(config!=null){
ref=config.ref===undefined?null:config.ref;
key=config.key===undefined?null:''+config.key;
self=config.__self===undefined?null:config.__self;
source=config.__source===undefined?null:config.__source;

for(propName in config){
if(config.hasOwnProperty(propName)&&
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName]=config[propName];}}}






var childrenLength=arguments.length-2;
if(childrenLength===1){
props.children=children;}else 
if(childrenLength>1){
var childArray=Array(childrenLength);
for(var i=0;i<childrenLength;i++){
childArray[i]=arguments[i+2];}

props.children=childArray;}



if(type&&type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps){
if(typeof props[propName]==='undefined'){
props[propName]=defaultProps[propName];}}}




return ReactElement(
type,
key,
ref,
self,
source,
ReactCurrentOwner.current,
props);};



ReactElement.createFactory=function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type=type;
return factory;};


ReactElement.cloneAndReplaceKey=function(oldElement,newKey){
var newElement=ReactElement(
oldElement.type,
newKey,
oldElement.ref,
oldElement._self,
oldElement._source,
oldElement._owner,
oldElement.props);


return newElement;};


ReactElement.cloneAndReplaceProps=function(oldElement,newProps){
var newElement=ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._self,
oldElement._source,
oldElement._owner,
newProps);


if(__DEV__){

newElement._store.validated=oldElement._store.validated;}


return newElement;};


ReactElement.cloneElement=function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;

var self=element._self;



var source=element._source;


var owner=element._owner;

if(config!=null){
if(config.ref!==undefined){

ref=config.ref;
owner=ReactCurrentOwner.current;}

if(config.key!==undefined){
key=''+config.key;}


for(propName in config){
if(config.hasOwnProperty(propName)&&
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName]=config[propName];}}}






var childrenLength=arguments.length-2;
if(childrenLength===1){
props.children=children;}else 
if(childrenLength>1){
var childArray=Array(childrenLength);
for(var i=0;i<childrenLength;i++){
childArray[i]=arguments[i+2];}

props.children=childArray;}


return ReactElement(
element.type,
key,
ref,
self,
source,
owner,
props);};








ReactElement.isValidElement=function(object){
return (
typeof object==='object'&&
object!==null&&
object.$$typeof===REACT_ELEMENT_TYPE);};



module.exports=ReactElement;
});
__d('Object.assign',function(global, require, module, exports) {  'use strict';














function assign(target,sources){
if(target==null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex<arguments.length;nextIndex++){
var nextSource=arguments[nextIndex];
if(nextSource==null){
continue;}


var from=Object(nextSource);






for(var key in from){
if(hasOwnProperty.call(from,key)){
to[key]=from[key];}}}




return to;}


module.exports=assign;
});
__d('canDefineProperty',function(global, require, module, exports) {  'use strict';












var canDefineProperty=false;
if(__DEV__){
try{
Object.defineProperty({},'x',{get:function(){}});
canDefineProperty=true;}
catch(x){}}




module.exports=canDefineProperty;
});
__d('ReactPropTypeLocationNames',function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames={
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports=ReactPropTypeLocationNames;
});
__d('getIteratorFn',function(global, require, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol==='function'&&Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable&&(
ITERATOR_SYMBOL&&maybeIterable[ITERATOR_SYMBOL]||
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn==='function'){
return iteratorFn;}}



module.exports=getIteratorFn;
});
__d('React',function(global, require, module, exports) {  'use strict';












module.exports=require('ReactNative');
});
__d('ReactNative',function(global, require, module, exports) {  'use strict';














var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');

var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');
var ReactUpdates=require('ReactUpdates');

var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');
var warning=require('warning');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement=ReactElementValidator.createElement;
createFactory=ReactElementValidator.createFactory;
cloneElement=ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps){
if(props[propName]===undefined){
props[propName]=defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because '+
'it does not provide validation. Check your JSX transform.');}


element._owner=ReactCurrentOwner.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


unstable_batchedUpdates:ReactUpdates.batchedUpdates,



__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:function(
element,
mountInto,
callback)
{
warning('Use React.render instead of React.renderComponent');
return ReactNative.render(element,mountInto,callback);}};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined'&&
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject==='function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports=ReactNative;
});
__d('ReactNativeDefaultInjection',function(global, require, module, exports) {  'use strict';

















require('InitializeJavaScriptAppEngine');

var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactElement=require('ReactElement');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);


var EmptyComponent=function(){

var View=require('View');
return ReactElement.createElement(View,{
collapsable:true,
style:{position:'absolute'}});};


ReactEmptyComponent.injection.injectEmptyComponent(EmptyComponent);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectGenericComponentClass(function(tag){

var info='';
if(typeof tag==='string'&&/^[a-z]/.test(tag)){
info+=' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports={
inject:inject};
});
__d('InitializeJavaScriptAppEngine',function(global, require, module, exports) {  require(























'regenerator/runtime.js');

if(typeof GLOBAL==='undefined'){
GLOBAL=this;}


if(typeof window==='undefined'){
window=GLOBAL;}


function setUpConsole(){

var ExceptionsManager=require('ExceptionsManager');
ExceptionsManager.installConsoleErrorReporter();}

















function polyfillGlobal(name,newValue){var scope=arguments.length<=2||arguments[2]===undefined?GLOBAL:arguments[2];
var descriptor=Object.getOwnPropertyDescriptor(scope,name)||{




writable:true};


if(scope[name]!==undefined){
var backupName='original'+name[0].toUpperCase()+name.substr(1);
Object.defineProperty(scope,backupName,babelHelpers.extends({},descriptor,{value:scope[name]}));}


Object.defineProperty(scope,name,babelHelpers.extends({},descriptor,{value:newValue}));}


function setUpErrorHandler(){
if(global.__fbDisableExceptionsManager){
return;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee){
console.log('Failed to print error: ',ee.message);}}



var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpFlowChecker(){
if(__DEV__){
var checkFlowAtRuntime=require('checkFlowAtRuntime');
checkFlowAtRuntime();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout=JSTimers.setTimeout;
GLOBAL.setInterval=JSTimers.setInterval;
GLOBAL.setImmediate=JSTimers.setImmediate;
GLOBAL.clearTimeout=JSTimers.clearTimeout;
GLOBAL.clearInterval=JSTimers.clearInterval;
GLOBAL.clearImmediate=JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame=JSTimers.clearInterval;
GLOBAL.requestAnimationFrame=function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert=function(text){
var alertOpts={
title:'Alert',
message:''+text,
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts,function(){});};}}




function setUpPromise(){


GLOBAL.Promise=require('Promise');}


function setUpXHR(){


polyfillGlobal('XMLHttpRequest',require('XMLHttpRequest'));
polyfillGlobal('FormData',require('FormData'));

var fetchPolyfill=require('fetch');
polyfillGlobal('fetch',fetchPolyfill.fetch);
polyfillGlobal('Headers',fetchPolyfill.Headers);
polyfillGlobal('Request',fetchPolyfill.Request);
polyfillGlobal('Response',fetchPolyfill.Response);}


function setUpGeolocation(){
GLOBAL.navigator=GLOBAL.navigator||{};
polyfillGlobal('geolocation',require('Geolocation'),GLOBAL.navigator);}


function setUpProduct(){
Object.defineProperty(GLOBAL.navigator,'product',{value:'ReactNative'});}



function setUpWebSockets(){
polyfillGlobal('WebSocket',require('WebSocket'));}


function setUpProfile(){
if(__DEV__){
var BridgeProfiling=require('BridgeProfiling');
BridgeProfiling.swizzleReactPerf();}}



function setUpProcessEnv(){
GLOBAL.process=GLOBAL.process||{};
GLOBAL.process.env=GLOBAL.process.env||{};
if(!GLOBAL.process.env.NODE_ENV){
GLOBAL.process.env.NODE_ENV=__DEV__?'development':'production';}}



function setUpNumber(){
Number.EPSILON=Number.EPSILON||Math.pow(2,-52);
Number.MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||Math.pow(2,53)-1;
Number.MIN_SAFE_INTEGER=Number.MIN_SAFE_INTEGER||-(Math.pow(2,53)-1);}


function setUpDevTools(){

if(__DEV__){
if(!window.document&&require('Platform').OS==='ios'){
var setupDevtools=require('setupDevtools');
setupDevtools();}}}




setUpProcessEnv();
setUpConsole();
setUpTimers();
setUpAlert();
setUpPromise();
setUpErrorHandler();
setUpXHR();
setUpGeolocation();
setUpProduct();
setUpWebSockets();
setUpProfile();
setUpFlowChecker();
setUpNumber();
setUpDevTools();



if(__DEV__){
require('RCTDebugComponentOwnership');}

require('RCTDeviceEventEmitter');
require('PerformanceLogger');
});
__d('regenerator/runtime.js',function(global, require, module, exports) {  !









function(global){
"use strict";

var hasOwn=Object.prototype.hasOwnProperty;
var undefined;
var $Symbol=typeof Symbol==="function"?Symbol:{};
var iteratorSymbol=$Symbol.iterator||"@@iterator";
var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";

var inModule=typeof module==="object";
var runtime=global.regeneratorRuntime;
if(runtime){
if(inModule){


module.exports=runtime;}



return;}




runtime=global.regeneratorRuntime=inModule?module.exports:{};

function wrap(innerFn,outerFn,self,tryLocsList){

var generator=Object.create((outerFn||Generator).prototype);
var context=new Context(tryLocsList||[]);



generator._invoke=makeInvokeMethod(innerFn,self,context);

return generator;}

runtime.wrap=wrap;











function tryCatch(fn,obj,arg){
try{
return {type:"normal",arg:fn.call(obj,arg)};}
catch(err){
return {type:"throw",arg:err};}}



var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";



var ContinueSentinel={};





function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype;
GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor=GeneratorFunction;
GeneratorFunctionPrototype[toStringTagSymbol]=GeneratorFunction.displayName="GeneratorFunction";



function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
prototype[method]=function(arg){
return this._invoke(method,arg);};});}




runtime.isGeneratorFunction=function(genFun){
var ctor=typeof genFun==="function"&&genFun.constructor;
return ctor?
ctor===GeneratorFunction||


(ctor.displayName||ctor.name)==="GeneratorFunction":
false;};


runtime.mark=function(genFun){
if(Object.setPrototypeOf){
Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);}else 
{
genFun.__proto__=GeneratorFunctionPrototype;
if(!(toStringTagSymbol in genFun)){
genFun[toStringTagSymbol]="GeneratorFunction";}}


genFun.prototype=Object.create(Gp);
return genFun;};







runtime.awrap=function(arg){
return new AwaitArgument(arg);};


function AwaitArgument(arg){
this.arg=arg;}


function AsyncIterator(generator){
function invoke(method,arg,resolve,reject){
var record=tryCatch(generator[method],generator,arg);
if(record.type==="throw"){
reject(record.arg);}else 
{
var result=record.arg;
var value=result.value;
if(value instanceof AwaitArgument){
return Promise.resolve(value.arg).then(function(value){
invoke("next",value,resolve,reject);},
function(err){
invoke("throw",err,resolve,reject);});}



return Promise.resolve(value).then(function(unwrapped){















result.value=unwrapped;
resolve(result);},
reject);}}



if(typeof process==="object"&&process.domain){
invoke=process.domain.bind(invoke);}


var previousPromise;

function enqueue(method,arg){
function callInvokeWithMethodAndArg(){
return new Promise(function(resolve,reject){
invoke(method,arg,resolve,reject);});}



return previousPromise=












previousPromise?previousPromise.then(
callInvokeWithMethodAndArg,


callInvokeWithMethodAndArg):
callInvokeWithMethodAndArg();}




this._invoke=enqueue;}


defineIteratorMethods(AsyncIterator.prototype);




runtime.async=function(innerFn,outerFn,self,tryLocsList){
var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList));


return runtime.isGeneratorFunction(outerFn)?
iter:
iter.next().then(function(result){
return result.done?result.value:iter.next();});};



function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state===GenStateExecuting){
throw new Error("Generator is already running");}


if(state===GenStateCompleted){
if(method==="throw"){
throw arg;}




return doneResult();}


while(true){
var delegate=context.delegate;
if(delegate){
if(method==="return"||
method==="throw"&&delegate.iterator[method]===undefined){


context.delegate=null;



var returnMethod=delegate.iterator["return"];
if(returnMethod){
var record=tryCatch(returnMethod,delegate.iterator,arg);
if(record.type==="throw"){


method="throw";
arg=record.arg;
continue;}}



if(method==="return"){


continue;}}



var record=tryCatch(
delegate.iterator[method],
delegate.iterator,
arg);


if(record.type==="throw"){
context.delegate=null;



method="throw";
arg=record.arg;
continue;}





method="next";
arg=undefined;

var info=record.arg;
if(info.done){
context[delegate.resultName]=info.value;
context.next=delegate.nextLoc;}else 
{
state=GenStateSuspendedYield;
return info;}


context.delegate=null;}


if(method==="next"){
if(state===GenStateSuspendedYield){
context.sent=arg;}else 
{
context.sent=undefined;}}else 


if(method==="throw"){
if(state===GenStateSuspendedStart){
state=GenStateCompleted;
throw arg;}


if(context.dispatchException(arg)){


method="next";
arg=undefined;}}else 


if(method==="return"){
context.abrupt("return",arg);}


state=GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type==="normal"){


state=context.done?
GenStateCompleted:
GenStateSuspendedYield;

var info={
value:record.arg,
done:context.done};


if(record.arg===ContinueSentinel){
if(context.delegate&&method==="next"){


arg=undefined;}}else 

{
return info;}}else 


if(record.type==="throw"){
state=GenStateCompleted;


method="throw";
arg=record.arg;}}};}







defineIteratorMethods(Gp);

Gp[iteratorSymbol]=function(){
return this;};


Gp[toStringTagSymbol]="Generator";

Gp.toString=function(){
return "[object Generator]";};


function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc=locs[1];}


if(2 in locs){
entry.finallyLoc=locs[2];
entry.afterLoc=locs[3];}


this.tryEntries.push(entry);}


function resetTryEntry(entry){
var record=entry.completion||{};
record.type="normal";
delete record.arg;
entry.completion=record;}


function Context(tryLocsList){



this.tryEntries=[{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);}


runtime.keys=function(object){
var keys=[];
for(var key in object){
keys.push(key);}

keys.reverse();



return function next(){
while(keys.length){
var key=keys.pop();
if(key in object){
next.value=key;
next.done=false;
return next;}}






next.done=true;
return next;};};



function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);}


if(typeof iterable.next==="function"){
return iterable;}


if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i<iterable.length){
if(hasOwn.call(iterable,i)){
next.value=iterable[i];
next.done=false;
return next;}}



next.value=undefined;
next.done=true;

return next;};


return next.next=next;}}




return {next:doneResult};}

runtime.values=values;

function doneResult(){
return {value:undefined,done:true};}


Context.prototype={
constructor:Context,

reset:function(skipTempReset){
this.prev=0;
this.next=0;
this.sent=undefined;
this.done=false;
this.delegate=null;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this){

if(name.charAt(0)==="t"&&
hasOwn.call(this,name)&&
!isNaN(+name.slice(1))){
this[name]=undefined;}}}},





stop:function(){
this.done=true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type==="throw"){
throw rootRecord.arg;}


return this.rval;},


dispatchException:function(exception){
if(this.done){
throw exception;}


var context=this;
function handle(loc,caught){
record.type="throw";
record.arg=exception;
context.next=loc;
return !!caught;}


for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc==="root"){



return handle("end");}


if(entry.tryLoc<=this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch&&hasFinally){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);}else 
if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


if(hasCatch){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);}}else 


if(hasFinally){
if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


{
throw new Error("try statement without catch or finally");}}}},





abrupt:function(type,arg){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc<=this.prev&&
hasOwn.call(entry,"finallyLoc")&&
this.prev<entry.finallyLoc){
var finallyEntry=entry;
break;}}



if(finallyEntry&&(
type==="break"||
type==="continue")&&
finallyEntry.tryLoc<=arg&&
arg<=finallyEntry.finallyLoc){


finallyEntry=null;}


var record=finallyEntry?finallyEntry.completion:{};
record.type=type;
record.arg=arg;

if(finallyEntry){
this.next=finallyEntry.finallyLoc;}else 
{
this.complete(record);}


return ContinueSentinel;},


complete:function(record,afterLoc){
if(record.type==="throw"){
throw record.arg;}


if(record.type==="break"||
record.type==="continue"){
this.next=record.arg;}else 
if(record.type==="return"){
this.rval=record.arg;
this.next="end";}else 
if(record.type==="normal"&&afterLoc){
this.next=afterLoc;}},



finish:function(finallyLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.finallyLoc===finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;}}},




"catch":function(tryLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc===tryLoc){
var record=entry.completion;
if(record.type==="throw"){
var thrown=record.arg;
resetTryEntry(entry);}

return thrown;}}





throw new Error("illegal catch attempt");},


delegateYield:function(iterable,resultName,nextLoc){
this.delegate={
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


return ContinueSentinel;}};}(






typeof global==="object"?global:
typeof window==="object"?window:
typeof self==="object"?self:this);
});
__d('ExceptionsManager',function(global, require, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;

var exceptionID=0;




function reportException(e,isFatal){
var currentExceptionID=++exceptionID;
if(RCTExceptionsManager){
var stack=parseErrorStack(e);
if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack,currentExceptionID);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack,currentExceptionID);}

if(__DEV__){
(sourceMapPromise=sourceMapPromise||loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack,currentExceptionID);}).

catch(function(error){


console.warn('Unable to load source map: '+error.message);});}}}








function handleException(e,isFatal){




if(!e.message){
e=new Error(e);}


(console._errorOriginal||console.error)(e.message);
reportException(e,isFatal);}






function installConsoleErrorReporter(){

if(console._errorOriginal){
return;}

console._errorOriginal=console.error.bind(console);
console.error=function reactConsoleError(){
console._errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}


if(arguments[0]&&arguments[0].stack){
reportException(arguments[0],false);}else 
{
var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
if(str.slice(0,10)==='"Warning: '){



return;}

var error=new Error('console.error: '+str);
error.framesToPop=1;
reportException(error,false);}};


if(console.reportErrorsAsExceptions===undefined){
console.reportErrorsAsExceptions=true;}}



module.exports={handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('loadSourceMap',function(global, require, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url===null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL+mapURL;}


module.exports=loadSourceMap;
});
__d('Promise',function(global, require, module, exports) {  'use strict';























global.setImmediate=require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally=function(onSettled){
return this.then(onSettled,onSettled);};



module.exports=Promise;
});
__d('setImmediate',function(global, require, module, exports) {  module.
















exports=global.setImmediate||
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',function(global, require, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args=Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle]=function(){
handler.apply(undefined,args);};

queueTail=queueTail.next={handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask&&(next=queueHead.next)){
queueHead=next;
if(task=tasksByHandle[next.handle]){
currentlyRunningATask=true;
try{
task();
currentlyRunningATask=false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask=false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage&&!global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous=false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$"+Math.random()+"$";
var onGlobalMessage=function(event){
if(event.source===global&&
typeof event.data==="string"&&
event.data.indexOf(messagePrefix)===0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate=function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix+handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage=flushQueue;
setImmediate=function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate=function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange=function(){
script.onreadystatechange=null;
html.removeChild(script);
script=null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate=function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc&&"onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate=setImmediate;
exports.clearImmediate=clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',function(global, require, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');

module.exports=Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._61);
p._81=1;
p._65=value;
return p;}

Promise.resolve=function(value){
if(value instanceof Promise)return value;

if(value===null)return NULL;
if(value===undefined)return UNDEFINED;
if(value===true)return TRUE;
if(value===false)return FALSE;
if(value===0)return ZERO;
if(value==='')return EMPTYSTRING;

if(typeof value==='object'||typeof value==='function'){
try{
var then=value.then;
if(typeof then==='function'){
return new Promise(then.bind(value));}}

catch(ex){
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all=function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length===0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val&&(typeof val==='object'||typeof val==='function')){
if(val instanceof Promise&&val.then===Promise.prototype.then){
while(val._81===3){
val=val._65;}

if(val._81===1)return res(i,val._65);
if(val._81===2)reject(val._65);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then==='function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i]=val;
if(--remaining===0){
resolve(args);}}


for(var i=0;i<args.length;i++){
res(i,args[i]);}});};




Promise.reject=function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race=function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch']=function(onRejected){
return this.then(null,onRejected);};
});
__d('promise/setimmediate/core.js',function(global, require, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex){
LAST_ERROR=ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex){
LAST_ERROR=ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex){
LAST_ERROR=ex;
return IS_ERROR;}}



module.exports=Promise;

function Promise(fn){
if(typeof this!=='object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn!=='function'){
throw new TypeError('not a function');}

this._45=0;
this._81=0;
this._65=null;
this._54=null;
if(fn===noop)return;
doResolve(fn,this);}

Promise._10=null;
Promise._97=null;
Promise._61=noop;

Promise.prototype.then=function(onFulfilled,onRejected){
if(this.constructor!==Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._81===3){
self=self._65;}

if(Promise._10){
Promise._10(self);}

if(self._81===0){
if(self._45===0){
self._45=1;
self._54=deferred;
return;}

if(self._45===1){
self._45=2;
self._54=[self._54,deferred];
return;}

self._54.push(deferred);
return;}

handleResolved(self,deferred);}


function handleResolved(self,deferred){
setImmediate(function(){
var cb=self._81===1?deferred.onFulfilled:deferred.onRejected;
if(cb===null){
if(self._81===1){
resolve(deferred.promise,self._65);}else 
{
reject(deferred.promise,self._65);}

return;}

var ret=tryCallOne(cb,self._65);
if(ret===IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue===self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue&&(
typeof newValue==='object'||typeof newValue==='function'))
{
var then=getThen(newValue);
if(then===IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then===self.then&&
newValue instanceof Promise)
{
self._81=3;
self._65=newValue;
finale(self);
return;}else 
if(typeof then==='function'){
doResolve(then.bind(newValue),self);
return;}}


self._81=1;
self._65=newValue;
finale(self);}


function reject(self,newValue){
self._81=2;
self._65=newValue;
if(Promise._97){
Promise._97(self,newValue);}

finale(self);}

function finale(self){
if(self._45===1){
handle(self,self._54);
self._54=null;}

if(self._45===2){
for(var i=0;i<self._54.length;i++){
handle(self,self._54[i]);}

self._54=null;}}



function Handler(onFulfilled,onRejected,promise){
this.onFulfilled=typeof onFulfilled==='function'?onFulfilled:null;
this.onRejected=typeof onRejected==='function'?onRejected:null;
this.promise=promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done=true;
resolve(promise,value);},
function(reason){
if(done)return;
done=true;
reject(promise,reason);});

if(!done&&res===IS_ERROR){
done=true;
reject(promise,LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',function(global, require, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports=Promise;
Promise.prototype.done=function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};
});
__d('SourceMap',function(global, require, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports=scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName!="string"){
throw new TypeError('Expected string, got: '+moduleName);}


if(arguments.length==2){
payload=deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: "+moduleName);}

define.modules[moduleName]=payload;}
;




define.modules={};










function Domain(){
this.modules={};
this._currentModule=null;}


(function(){
















Domain.prototype.require=function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split('/');
var i=1;
while(i<bits.length){
if(bits[i]==='..'){
bits.splice(i-1,1);}else 
if(bits[i]==='.'){
bits.splice(i,1);}else 
{
i++;}}


return bits.join('/');}


function join(a,b){
a=a.trim();
b=b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,'/')+b;}}



function dirname(path){
var bits=path.split('/');
bits.pop();
return bits.join('/');}








Domain.prototype.lookup=function(moduleName){
if(/^\./.test(moduleName)){
moduleName=normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: "+moduleName);}


var module=define.modules[moduleName];

if(typeof module=="function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule=moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule=previousModule;
module=exports;}



this.modules[moduleName]=module;

return module;};})();




define.Domain=Domain;
define.globalDomain=new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define('source-map/source-map-generator',['require','exports','module','source-map/base64-vlq','source-map/util','source-map/array-set'],function(require,exports,module){

var base64VLQ=require('./base64-vlq');
var util=require('./util');
var ArraySet=require('./array-set').ArraySet;









function SourceMapGenerator(aArgs){
this._file=util.getArg(aArgs,'file');
this._sourceRoot=util.getArg(aArgs,'sourceRoot',null);
this._sources=new ArraySet();
this._names=new ArraySet();
this._mappings=[];
this._sourcesContents=null;}


SourceMapGenerator.prototype._version=3;






SourceMapGenerator.fromSourceMap=
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source=mapping.source;
if(sourceRoot){
newMapping.source=util.relative(sourceRoot,newMapping.source);}


newMapping.original={
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name=mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping=
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,'generated');
var original=util.getArg(aArgs,'original',null);
var source=util.getArg(aArgs,'source',null);
var name=util.getArg(aArgs,'name',null);

this._validateMapping(generated,original,source,name);

if(source&&!this._sources.has(source)){
this._sources.add(source);}


if(name&&!this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original!=null&&original.line,
originalColumn:original!=null&&original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent=
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source=util.relative(this._sourceRoot,source);}


if(aSourceContent!==null){


if(!this._sourcesContents){
this._sourcesContents={};}

this._sourcesContents[util.toSetString(source)]=aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length===0){
this._sourcesContents=null;}}};














SourceMapGenerator.prototype.applySourceMap=
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile=aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile=util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source===aSourceFile&&mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source!==null){

if(sourceRoot){
mapping.source=util.relative(sourceRoot,original.source);}else 
{
mapping.source=original.source;}

mapping.originalLine=original.line;
mapping.originalColumn=original.column;
if(original.name!==null&&mapping.name!==null){


mapping.name=original.name;}}}




var source=mapping.source;
if(source&&!newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name&&!newNames.has(name)){
newNames.add(name);}},


this);
this._sources=newSources;
this._names=newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile=util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping=
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated&&'line' in aGenerated&&'column' in aGenerated&&
aGenerated.line>0&&aGenerated.column>=0&&
!aOriginal&&!aSource&&!aName){

return;}else 

if(aGenerated&&'line' in aGenerated&&'column' in aGenerated&&
aOriginal&&'line' in aOriginal&&'column' in aOriginal&&
aGenerated.line>0&&aGenerated.column>=0&&
aOriginal.line>0&&aOriginal.column>=0&&
aSource){

return;}else 

{
throw new Error('Invalid mapping: '+JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings=
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result='';
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i<len;i++){
mapping=this._mappings[i];

if(mapping.generatedLine!==previousGeneratedLine){
previousGeneratedColumn=0;
while(mapping.generatedLine!==previousGeneratedLine){
result+=';';
previousGeneratedLine++;}}else 


{
if(i>0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i-1])){
continue;}

result+=',';}}



result+=base64VLQ.encode(mapping.generatedColumn-
previousGeneratedColumn);
previousGeneratedColumn=mapping.generatedColumn;

if(mapping.source){
result+=base64VLQ.encode(this._sources.indexOf(mapping.source)-
previousSource);
previousSource=this._sources.indexOf(mapping.source);


result+=base64VLQ.encode(mapping.originalLine-1-
previousOriginalLine);
previousOriginalLine=mapping.originalLine-1;

result+=base64VLQ.encode(mapping.originalColumn-
previousOriginalColumn);
previousOriginalColumn=mapping.originalColumn;

if(mapping.name){
result+=base64VLQ.encode(this._names.indexOf(mapping.name)-
previousName);
previousName=this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent=
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source=util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON=
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot=this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString=
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator=SourceMapGenerator;});






































define('source-map/base64-vlq',['require','exports','module','source-map/base64'],function(require,exports,module){

var base64=require('./base64');













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1<<VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE-1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue<0?
(-aValue<<1)+1:
(aValue<<1)+0;}








function fromVLQSigned(aValue){
var isNegative=(aValue&1)===1;
var shifted=aValue>>1;
return isNegative?
-shifted:
shifted;}





exports.encode=function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit=vlq&VLQ_BASE_MASK;
vlq>>>=VLQ_BASE_SHIFT;
if(vlq>0){


digit|=VLQ_CONTINUATION_BIT;}

encoded+=base64.encode(digit);}while(
vlq>0);

return encoded;};






exports.decode=function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i>=strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit=base64.decode(aStr.charAt(i++));
continuation=!!(digit&VLQ_CONTINUATION_BIT);
digit&=VLQ_BASE_MASK;
result=result+(digit<<shift);
shift+=VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define('source-map/base64',['require','exports','module'],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.
split('').
forEach(function(ch,index){
charToIntMap[ch]=index;
intToCharMap[index]=ch;});





exports.encode=function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: "+aNumber);};





exports.decode=function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: "+aChar);};});









define('source-map/util',['require','exports','module'],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length===3){
return aDefaultValue;}else 
{
throw new Error('"'+aName+'" is a required argument.');}}


exports.getArg=getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse=urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme+"://";
if(aParsedUrl.auth){
url+=aParsedUrl.auth+"@";}

if(aParsedUrl.host){
url+=aParsedUrl.host;}

if(aParsedUrl.port){
url+=":"+aParsedUrl.port;}

if(aParsedUrl.path){
url+=aParsedUrl.path;}

return url;}

exports.urlGenerate=urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp)||aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0)==='/'&&(url=urlParse(aRoot))){
url.path=aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,'')+'/'+aPath;}

exports.join=join;










function toSetString(aStr){
return '$'+aStr;}

exports.toSetString=toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString=fromSetString;

function relative(aRoot,aPath){
aRoot=aRoot.replace(/\/$/,'');

var url=urlParse(aRoot);
if(aPath.charAt(0)=="/"&&url&&url.path=="/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot+'/')===0?
aPath.substr(aRoot.length+1):
aPath;}

exports.relative=relative;

function strcmp(aStr1,aStr2){
var s1=aStr1||"";
var s2=aStr2||"";
return (s1>s2)-(s1<s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp=strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp=mappingA.originalLine-mappingB.originalLine;
if(cmp){
return cmp;}


cmp=mappingA.originalColumn-mappingB.originalColumn;
if(cmp||onlyCompareOriginal){
return cmp;}


cmp=strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp=mappingA.generatedLine-mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn-mappingB.generatedColumn;}
;
exports.compareByOriginalPositions=compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp=mappingA.generatedLine-mappingB.generatedLine;
if(cmp){
return cmp;}


cmp=mappingA.generatedColumn-mappingB.generatedColumn;
if(cmp||onlyCompareGenerated){
return cmp;}


cmp=strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp=mappingA.originalLine-mappingB.originalLine;
if(cmp){
return cmp;}


cmp=mappingA.originalColumn-mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions=compareByGeneratedPositions;});








define('source-map/array-set',['require','exports','module','source-map/util'],function(require,exports,module){

var util=require('./util');







function ArraySet(){
this._array=[];
this._set={};}





ArraySet.fromArray=function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i<len;i++){
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add=function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate||aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)]=idx;}};








ArraySet.prototype.has=function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf=function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error('"'+aStr+'" is not in the set.');};







ArraySet.prototype.at=function ArraySet_at(aIdx){
if(aIdx>=0&&aIdx<this._array.length){
return this._array[aIdx];}

throw new Error('No element indexed by '+aIdx);};







ArraySet.prototype.toArray=function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet=ArraySet;});








define('source-map/source-map-consumer',['require','exports','module','source-map/util','source-map/binary-search','source-map/array-set','source-map/base64-vlq'],function(require,exports,module){

var util=require('./util');
var binarySearch=require('./binary-search');
var ArraySet=require('./array-set').ArraySet;
var base64VLQ=require('./base64-vlq');































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap==='string'){
sourceMap=JSON.parse(aSourceMap.replace(/^\)\]\}'/,''));}


var version=util.getArg(sourceMap,'version');
var sources=util.getArg(sourceMap,'sources');


var names=util.getArg(sourceMap,'names',[]);
var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);
var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);
var mappings=util.getArg(sourceMap,'mappings');
var file=util.getArg(sourceMap,'file',null);



if(version!=this._version){
throw new Error('Unsupported version: '+version);}






this._names=ArraySet.fromArray(names,true);
this._sources=ArraySet.fromArray(sources,true);

this.sourceRoot=sourceRoot;
this.sourcesContent=sourcesContent;
this._mappings=mappings;
this.file=file;}









SourceMapConsumer.fromSourceMap=
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names=ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources=ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot=aSourceMap._sourceRoot;
smc.sourcesContent=aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file=aSourceMap._file;

smc.__generatedMappings=aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings=aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version=3;




Object.defineProperty(SourceMapConsumer.prototype,'sources',{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings=null;
Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings=[];
this.__originalMappings=[];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings=null;
Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings=[];
this.__originalMappings=[];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings=
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length>0){
if(str.charAt(0)===';'){
generatedLine++;
str=str.slice(1);
previousGeneratedColumn=0;}else 

if(str.charAt(0)===','){
str=str.slice(1);}else 

{
mapping={};
mapping.generatedLine=generatedLine;


temp=base64VLQ.decode(str);
mapping.generatedColumn=previousGeneratedColumn+temp.value;
previousGeneratedColumn=mapping.generatedColumn;
str=temp.rest;

if(str.length>0&&!mappingSeparator.test(str.charAt(0))){

temp=base64VLQ.decode(str);
mapping.source=this._sources.at(previousSource+temp.value);
previousSource+=temp.value;
str=temp.rest;
if(str.length===0||mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source, but no line and column');}



temp=base64VLQ.decode(str);
mapping.originalLine=previousOriginalLine+temp.value;
previousOriginalLine=mapping.originalLine;

mapping.originalLine+=1;
str=temp.rest;
if(str.length===0||mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source and line, but no column');}



temp=base64VLQ.decode(str);
mapping.originalColumn=previousOriginalColumn+temp.value;
previousOriginalColumn=mapping.originalColumn;
str=temp.rest;

if(str.length>0&&!mappingSeparator.test(str.charAt(0))){

temp=base64VLQ.decode(str);
mapping.name=this._names.at(previousName+temp.value);
previousName+=temp.value;
str=temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine==='number'){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping=
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName]<=0){
throw new TypeError('Line must be greater than or equal to 1, got '+
aNeedle[aLineName]);}

if(aNeedle[aColumnName]<0){
throw new TypeError('Column must be greater than or equal to 0, got '+
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor=
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,'line'),
generatedColumn:util.getArg(aArgs,'column')};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,'source',null);
if(source&&this.sourceRoot){
source=util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,'originalLine',null),
column:util.getArg(mapping,'originalColumn',null),
name:util.getArg(mapping,'name',null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor=
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource=util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot&&(
url=util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme=="file"&&
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path||url.path=="/")&&
this._sources.has("/"+aSource)){
return this.sourcesContent[this._sources.indexOf("/"+aSource)];}}



throw new Error('"'+aSource+'" is not in the SourceMap.');};
















SourceMapConsumer.prototype.generatedPositionFor=
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,'source'),
originalLine:util.getArg(aArgs,'line'),
originalColumn:util.getArg(aArgs,'column')};


if(this.sourceRoot){
needle.source=util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,'generatedLine',null),
column:util.getArg(mapping,'generatedColumn',null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER=1;
SourceMapConsumer.ORIGINAL_ORDER=2;

















SourceMapConsumer.prototype.eachMapping=
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext||null;
var order=aOrder||SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings=this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings=this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source&&sourceRoot){
source=util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer=SourceMapConsumer;});








define('source-map/binary-search',['require','exports','module'],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh-aLow)/2)+aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp===0){

return aHaystack[mid];}else 

if(cmp>0){

if(aHigh-mid>1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid-aLow>1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow<0?
null:
aHaystack[aLow];}}
















exports.search=function search(aNeedle,aHaystack,aCompare){
return aHaystack.length>0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define('source-map/source-node',['require','exports','module','source-map/source-map-generator','source-map/util'],function(require,exports,module){

var SourceMapGenerator=require('./source-map-generator').SourceMapGenerator;
var util=require('./util');













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children=[];
this.sourceContents={};
this.line=aLine===undefined?null:aLine;
this.column=aColumn===undefined?null:aColumn;
this.source=aSource===undefined?null:aSource;
this.name=aName===undefined?null:aName;
if(aChunks!=null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap=
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split('\n');


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping===null){



while(lastGeneratedLine<mapping.generatedLine){
node.add(remainingLines.shift()+"\n");
lastGeneratedLine++;}

if(lastGeneratedColumn<mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0]=nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn=mapping.generatedColumn;}}else 

{


if(lastGeneratedLine<mapping.generatedLine){
var code="";

do {
code+=remainingLines.shift()+"\n";
lastGeneratedLine++;
lastGeneratedColumn=0;}while(
lastGeneratedLine<mapping.generatedLine);


if(lastGeneratedColumn<mapping.generatedColumn){
var nextLine=remainingLines[0];
code+=nextLine.substr(0,mapping.generatedColumn);
remainingLines[0]=nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn=mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn-
lastGeneratedColumn);
remainingLines[0]=nextLine.substr(mapping.generatedColumn-
lastGeneratedColumn);
lastGeneratedColumn=mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping=mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping===null||mapping.source===undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add=function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode||typeof aChunk==="string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);}


return this;};








SourceNode.prototype.prepend=function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length-1;i>=0;i--){
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode||typeof aChunk==="string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);}


return this;};









SourceNode.prototype.walk=function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i<len;i++){
chunk=this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk!==''){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join=function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len>0){
newChildren=[];
for(i=0;i<len-1;i++){
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children=newChildren;}

return this;};









SourceNode.prototype.replaceRight=function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length-1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild==='string'){
this.children[this.children.length-1]=lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push(''.replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent=
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)]=aSourceContent;};








SourceNode.prototype.walkSourceContents=
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i<len;i++){
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i<len;i++){
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString=function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str+=chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code+=chunk;
if(original.source!==null&&
original.line!==null&&
original.column!==null){
if(lastOriginalSource!==original.source||
lastOriginalLine!==original.line||
lastOriginalColumn!==original.column||
lastOriginalName!==original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource=original.source;
lastOriginalLine=original.line;
lastOriginalColumn=original.column;
lastOriginalName=original.name;
sourceMappingActive=true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource=null;
sourceMappingActive=false;}

chunk.split('').forEach(function(ch){
if(ch==='\n'){
generated.line++;
generated.column=0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode=SourceNode;});





this.sourceMap={
SourceMapConsumer:require('source-map/source-map-consumer').SourceMapConsumer,
SourceMapGenerator:require('source-map/source-map-generator').SourceMapGenerator,
SourceNode:require('source-map/source-node').SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',function(global, require, module, exports) {  (














function(){
var define=null;




void function(root,factory){
if(typeof define==="function"&&define.amd){
define(factory);}else 
if(typeof exports==="object"){
module.exports=factory();}else 
{
root.sourceMappingURL=factory();}}(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:"+
"/\\*"+
"(?:\\s*\r?\n(?://)?)?"+
"(?:"+innerRegex.source+")"+
"\\s*"+
"\\*/"+
"|"+
"//(?:"+innerRegex.source+")"+
")"+
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1]||match[2]||"":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index)+string+code.slice(match.index);}else 
{
return code+string;}}};});})();
});
__d('parseErrorStack',function(global, require, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file=orig.source;
stackFrame.lineNumber=orig.line;
stackFrame.column=orig.column;}}

catch(innerEx){}}



function parseErrorStack(e,sourceMapInstance){
if(!e||!e.stack){
return [];}


var stack=Array.isArray(e.stack)?e.stack:stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop||0;
while(framesToPop--){
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports=parseErrorStack;
});
__d('stacktrace-parser/index.js',function(global, require, module, exports) {  module.exports=require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',function(global, require, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i<j;++i){
if(parts=gecko.exec(lines[i])){
element={
'file':parts[3],
'methodName':parts[1]||UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts=chrome.exec(lines[i])){
element={
'file':parts[2],
'methodName':parts[1]||UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts=node.exec(lines[i])){
element={
'file':parts[2],
'methodName':parts[1]||UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports=StackTraceParser;
});
__d('checkFlowAtRuntime',function(global, require, module, exports) {  'use strict';












function checkFlowAtRuntime(){
var url=getPackagerURL();
if(!url){
return;}

fetch(url+'flow/').
then(function(response){return response.json();}).
then(function(response){
if(response.silentError){
return;}

throw {
message:response.message,
stack:response.errors.map(function(err){
return babelHelpers.extends({},
err,{
methodName:err.description,
file:err.filename});})};},




function(){}).


done();}


function getPackagerURL(){
var NativeModules=require('NativeModules');
var scriptURL=NativeModules&&
NativeModules.SourceCode&&
NativeModules.SourceCode.scriptURL||
'';




return getFirstOrNull(scriptURL.match(/^https?:\/\/[^/]+\//));}


function getFirstOrNull(ar){
return ar?ar[0]:null;}


module.exports=checkFlowAtRuntime;
});
__d('XMLHttpRequest',function(global, require, module, exports) {  'use strict';












var FormData=require('FormData');
var RCTNetworking=require('RCTNetworking');

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=function(_XMLHttpRequestBase){babelHelpers.inherits(XMLHttpRequest,_XMLHttpRequestBase);
function XMLHttpRequest(){babelHelpers.classCallCheck(this,XMLHttpRequest);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(XMLHttpRequest).call(this));


_this.upload={};return _this;}babelHelpers.createClass(XMLHttpRequest,[{key:'sendImpl',value:function sendImpl(


method,url,headers,data){
if(typeof data==='string'){
data={string:data};}else 
if(data instanceof FormData){
data={formData:data.getParts()};}

RCTNetworking.sendRequest(
{
method:method,
url:url,
data:data,
headers:headers,
incrementalUpdates:this.onreadystatechange?true:false},

this.didCreateRequest.bind(this));}}]);return XMLHttpRequest;}(XMLHttpRequestBase);




module.exports=XMLHttpRequest;
});
__d('FormData',function(global, require, module, exports) {  'use strict';var 














































FormData=function(){


function FormData(){babelHelpers.classCallCheck(this,FormData);
this._parts=[];}babelHelpers.createClass(FormData,[{key:'append',value:function append(


key,value){





this._parts.push([key,value]);}},{key:'getParts',value:function getParts()


{
return this._parts.map(function(_ref){var _ref2=babelHelpers.slicedToArray(_ref,2);var name=_ref2[0];var value=_ref2[1];
var contentDisposition='form-data; name="'+name+'"';
var headers={'content-disposition':contentDisposition};
if(typeof value==='string'){
return {string:value,headers:headers,fieldName:name};}






if(typeof value.name==='string'){
headers['content-disposition']+='; filename="'+value.name+'"';}

if(typeof value.type==='string'){
headers['content-type']=value.type;}

return babelHelpers.extends({},value,{headers:headers,fieldName:name});});}}]);return FormData;}();




module.exports=FormData;
});
__d('RCTNetworking',function(global, require, module, exports) {  'use strict';











var RCTNetworkingNative=require('NativeModules').Networking;var 




RCTNetworking=function(){function RCTNetworking(){babelHelpers.classCallCheck(this,RCTNetworking);}babelHelpers.createClass(RCTNetworking,null,[{key:'sendRequest',value:function sendRequest(

query,callback){
RCTNetworkingNative.sendRequest(query,callback);}},{key:'abortRequest',value:function abortRequest(


requestId){
RCTNetworkingNative.cancelRequest(requestId);}}]);return RCTNetworking;}();




module.exports=RCTNetworking;
});
__d('XMLHttpRequestBase',function(global, require, module, exports) {  'use strict';












var RCTNetworking=require('RCTNetworking');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');var 




XMLHttpRequestBase=function(){





























function XMLHttpRequestBase(){babelHelpers.classCallCheck(this,XMLHttpRequestBase);
this.UNSENT=0;
this.OPENED=1;
this.HEADERS_RECEIVED=2;
this.LOADING=3;
this.DONE=4;

this.onreadystatechange=null;
this.onload=null;
this.upload=undefined;

this._reset();
this._method=null;
this._url=null;
this._aborted=false;}babelHelpers.createClass(XMLHttpRequestBase,[{key:'_reset',value:function _reset()


{
this.readyState=this.UNSENT;
this.responseHeaders=undefined;
this.responseText='';
this.status=0;

this._requestId=null;

this._headers={};
this._sent=false;
this._lowerCaseResponseHeaders={};

this._clearSubscriptions();}},{key:'didCreateRequest',value:function didCreateRequest(


requestId){var _this=this;
this._requestId=requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didSendNetworkData',
function(args){var _didUploadProgress2;return (_didUploadProgress2=_this._didUploadProgress).call.apply(_didUploadProgress2,[_this].concat(babelHelpers.toConsumableArray(args)));}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse',
function(args){var _didReceiveResponse2;return (_didReceiveResponse2=_this._didReceiveResponse).call.apply(_didReceiveResponse2,[_this].concat(babelHelpers.toConsumableArray(args)));}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData',
function(args){var _didReceiveData2;return (_didReceiveData2=_this._didReceiveData).call.apply(_didReceiveData2,[_this].concat(babelHelpers.toConsumableArray(args)));}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse',
function(args){var _didCompleteResponse2;return (_didCompleteResponse2=_this._didCompleteResponse).call.apply(_didCompleteResponse2,[_this].concat(babelHelpers.toConsumableArray(args)));}));}},{key:'_didUploadProgress',value:function _didUploadProgress(



requestId,progress,total){
if(requestId===this._requestId&&this.upload&&this.upload.onprogress){
var event={
lengthComputable:true,
loaded:progress,
total:total};

this.upload.onprogress(event);}}},{key:'_didReceiveResponse',value:function _didReceiveResponse(



requestId,status,responseHeaders){
if(requestId===this._requestId){
this.status=status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}},{key:'_didReceiveData',value:function _didReceiveData(



requestId,responseText){
if(requestId===this._requestId){
if(!this.responseText){
this.responseText=responseText;}else 
{
this.responseText+=responseText;}

this.setReadyState(this.LOADING);}}},{key:'_didCompleteResponse',value:function _didCompleteResponse(



requestId,error){
if(requestId===this._requestId){
if(error){
this.responseText=error;}

this._clearSubscriptions();
this._requestId=null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:function _clearSubscriptions()



{
(this._subscriptions||[]).forEach(function(sub){
sub.remove();});

this._subscriptions=[];}},{key:'getAllResponseHeaders',value:function getAllResponseHeaders()


{
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders||{};
return Object.keys(headers).map(function(headerName){
return headerName+': '+headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:function getResponseHeader(


header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value!==undefined?value:null;}},{key:'setRequestHeader',value:function setRequestHeader(


header,value){
if(this.readyState!==this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()]=value;}},{key:'open',value:function open(


method,url,async){

if(this.readyState!==this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async!==undefined&&!async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method=method;
this._url=url;
this._aborted=false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:function sendImpl(


method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'send',value:function send(


data){
if(this.readyState!==this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent=true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:function abort()


{
this._aborted=true;
if(this._requestId){
RCTNetworking.abortRequest(this._requestId);}



if(!(this.readyState===this.UNSENT||
this.readyState===this.OPENED&&!this._sent||
this.readyState===this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'setResponseHeaders',value:function setResponseHeaders(


responseHeaders){
this.responseHeaders=responseHeaders||null;
var headers=responseHeaders||{};
this._lowerCaseResponseHeaders=
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()]=headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:function setReadyState(


newState){
this.readyState=newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState===this.DONE&&!this._aborted){
this._sendLoad();}}},{key:'_sendLoad',value:function _sendLoad()



{

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;}();




module.exports=XMLHttpRequestBase;
});
__d('RCTDeviceEventEmitter',function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');
var BatchedBridge=require('BatchedBridge');

var RCTDeviceEventEmitter=new EventEmitter();

BatchedBridge.registerCallableModule(
'RCTDeviceEventEmitter',
RCTDeviceEventEmitter);


module.exports=RCTDeviceEventEmitter;
});
__d('EventEmitter',function(global, require, module, exports) {  var 












EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=function(){



function EventEmitter(){babelHelpers.classCallCheck(this,EventEmitter);
this._subscriber=new EventSubscriptionVendor();}babelHelpers.createClass(EventEmitter,[{key:'addListener',value:function addListener(

















eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:function once(












eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:function removeAllListeners(










eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:function removeCurrentListener()























{
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:function listeners(









eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:function emit(
















eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii<keys.length;ii++){
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription=subscription;
subscription.listener.apply(
subscription.context,
Array.prototype.slice.call(arguments,1));}}



this._currentSubscription=null;}}}]);return EventEmitter;}();




module.exports=EventEmitter;
});
__d('EmitterSubscription',function(global, require, module, exports) {  'use strict';



















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=function(_EventSubscription){babelHelpers.inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){babelHelpers.classCallCheck(this,EmitterSubscription);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(EmitterSubscription).call(this,
subscriber));
_this.listener=listener;
_this.context=context;return _this;}return EmitterSubscription;}(EventSubscription);



module.exports=EmitterSubscription;
});
__d('EventSubscription',function(global, require, module, exports) {  'use strict';var 






















EventSubscription=function(){





function EventSubscription(subscriber){babelHelpers.classCallCheck(this,EventSubscription);
this.subscriber=subscriber;}babelHelpers.createClass(EventSubscription,[{key:'remove',value:function remove()





{
this.subscriber.removeSubscription(this);}}]);return EventSubscription;}();



module.exports=EventSubscription;
});
__d('EventSubscriptionVendor',function(global, require, module, exports) {  'use strict';


















var invariant=require('invariant');var 





EventSubscriptionVendor=function(){

function EventSubscriptionVendor(){babelHelpers.classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType={};
this._currentSubscription=null;}babelHelpers.createClass(EventSubscriptionVendor,[{key:'addSubscription',value:function addSubscription(









eventType,subscription){
invariant(
subscription.subscriber===this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType]=[];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType=eventType;
subscription.key=key;
return subscription;}},{key:'removeAllSubscriptions',value:function removeAllSubscriptions(








eventType){
if(eventType===undefined){
this._subscriptionsForType={};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:function removeSubscription(









subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:function getSubscriptionsForType(















eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;}();



module.exports=EventSubscriptionVendor;
});
__d('fetch',function(global, require, module, exports) {  'use strict';
















var self={};

/**
 * Copyright (c) 2014 GitHub, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 */
(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name!=='string'){
name=String(name);}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value!=='string'){
value=String(value);}

return value;}


function Headers(headers){
this.map={};

if(headers instanceof Headers){
headers.forEach(function(value,name){
this.append(name,value);},
this);}else 

if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
this.append(name,headers[name]);},
this);}}



Headers.prototype.append=function(name,value){
name=normalizeName(name);
value=normalizeValue(value);
var list=this.map[name];
if(!list){
list=[];
this.map[name]=list;}

list.push(value);};


Headers.prototype['delete']=function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get=function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll=function(name){
return this.map[normalizeName(name)]||[];};


Headers.prototype.has=function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set=function(name,value){
this.map[normalizeName(name)]=[normalizeValue(value)];};


Headers.prototype.forEach=function(callback,thisArg){
Object.getOwnPropertyNames(this.map).forEach(function(name){
this.map[name].forEach(function(value){
callback.call(thisArg,value,name,this);},
this);},
this);};


function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed=true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload=function(){
resolve(reader.result);};

reader.onerror=function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:typeof FileReader==='function'&&typeof Blob==='function'&&function(){
try{
new Blob();
return true;}
catch(e){
return false;}}(),


formData:typeof FormData==='function'};


function Body(){
this.bodyUsed=false;


this._initBody=function(body){
this._bodyInit=body;
if(typeof body==='string'){
this._bodyText=body;}else 
if(support.blob&&Blob.prototype.isPrototypeOf(body)){
this._bodyBlob=body;}else 
if(support.formData&&FormData.prototype.isPrototypeOf(body)){
this._bodyFormData=body;}else 
if(!body){
this._bodyText='';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob=function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer=function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text=function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text=function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData=function(){
return this.text().then(decode);};}



this.json=function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased)>-1?upcased:method;}


function Request(input,options){
options=options||{};
var body=options.body;
if(Request.prototype.isPrototypeOf(input)){
if(input.bodyUsed){
throw new TypeError('Already read');}

this.url=input.url;
this.credentials=input.credentials;
if(!options.headers){
this.headers=new Headers(input.headers);}

this.method=input.method;
this.mode=input.mode;
if(!body){
body=input._bodyInit;
input.bodyUsed=true;}}else 

{
this.url=input;}


this.credentials=options.credentials||this.credentials||'omit';
if(options.headers||!this.headers){
this.headers=new Headers(options.headers);}

this.method=normalizeMethod(options.method||this.method||'GET');
this.mode=options.mode||this.mode||null;
this.referrer=null;

if((this.method==='GET'||this.method==='HEAD')&&body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(body);}


Request.prototype.clone=function(){
return new Request(this);};


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options={};}


this._initBody(bodyInit);
this.type='default';
this.url=null;
this.status=options.status;
this.ok=this.status>=200&&this.status<300;
this.statusText=options.statusText;
this.headers=options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url=options.url||'';}


Response.prototype.clone=function(){
return new Response(this._bodyInit,{
status:this.status,
statusText:this.statusText,
headers:new Headers(this.headers),
url:this.url});};



Body.call(Response.prototype);

self.Headers=Headers;
self.Request=Request;
self.Response=Response;

self.fetch=function(input,init){
var request;
if(Request.prototype.isPrototypeOf(input)&&!init){
request=input;}else 
{
request=new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();

function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload=function(){
var status=xhr.status===1223?204:xhr.status;
if(status<100||status>599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror=function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if(request.credentials==='include'){
xhr.withCredentials=true;}


if('responseType' in xhr&&support.blob){
xhr.responseType='blob';}


request.headers.forEach(function(value,name){
xhr.setRequestHeader(name,value);});


xhr.send(typeof request._bodyInit==='undefined'?null:request._bodyInit);});};


self.fetch.polyfill=true;})();




module.exports=self;
});
__d('Geolocation',function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;


























var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success==='function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options||{},
geo_success,
geo_error||logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options||{});
updatesEnabled=true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1&&sub1.remove();
subscriptions[watchID]=undefined;
var noWatchers=true;
for(var ii=0;ii<subscriptions.length;ii++){
if(subscriptions[ii]){
noWatchers=false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled=false;
for(var ii=0;ii<subscriptions.length;ii++){
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1&&sub1.remove();}}


subscriptions=[];}}};




module.exports=Geolocation;
});
__d('logError',function(global, require, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length===1&&arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "'+err.message+'".  Stack:\n'+err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports=logError;
});
__d('WebSocket',function(global, require, module, exports) {  'use strict';











var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketModule=require('NativeModules').WebSocketModule;

var Platform=require('Platform');
var WebSocketBase=require('WebSocketBase');
var WebSocketEvent=require('WebSocketEvent');

var WebSocketId=0;
var CLOSE_NORMAL=1000;var 






WebSocket=function(_WebSocketBase){babelHelpers.inherits(WebSocket,_WebSocketBase);function WebSocket(){babelHelpers.classCallCheck(this,WebSocket);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(WebSocket).apply(this,arguments));}babelHelpers.createClass(WebSocket,[{key:'connectToSocketImpl',value:function connectToSocketImpl(



url){
this._socketId=WebSocketId++;

RCTWebSocketModule.connect(url,this._socketId);

this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:function closeConnectionImpl(


code,reason){
this._closeWebSocket(this._socketId,code,reason);}},{key:'cancelConnectionImpl',value:function cancelConnectionImpl()


{
this._closeWebSocket(this._socketId);}},{key:'sendStringImpl',value:function sendStringImpl(


message){
RCTWebSocketModule.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:function sendArrayBufferImpl()


{

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_closeWebSocket',value:function _closeWebSocket(


id,code,reason){
if(Platform.OS==='android'){



var statusCode=typeof code==='number'?code:CLOSE_NORMAL;
var closeReason=typeof reason==='string'?reason:'';
RCTWebSocketModule.close(statusCode,closeReason,id);}else 
{
RCTWebSocketModule.close(id);}}},{key:'_unregisterEvents',value:function _unregisterEvents()



{
this._subs.forEach(function(e){return e.remove();});
this._subs=[];}},{key:'_registerEvents',value:function _registerEvents(


id){var _this2=this;
this._subs=[
RCTDeviceEventEmitter.addListener('websocketMessage',function(ev){
if(ev.id!==id){
return;}

var event=new WebSocketEvent('message',{
data:ev.data});

_this2.onmessage&&_this2.onmessage(event);
_this2.dispatchEvent(event);}),

RCTDeviceEventEmitter.addListener('websocketOpen',function(ev){
if(ev.id!==id){
return;}

_this2.readyState=_this2.OPEN;
var event=new WebSocketEvent('open');
_this2.onopen&&_this2.onopen(event);
_this2.dispatchEvent(event);}),

RCTDeviceEventEmitter.addListener('websocketClosed',function(ev){
if(ev.id!==id){
return;}

_this2.readyState=_this2.CLOSED;
var event=new WebSocketEvent('close');
event.code=ev.code;
event.reason=ev.reason;
_this2.onclose&&_this2.onclose(event);
_this2.dispatchEvent(event);
_this2._unregisterEvents();
_this2.close();}),

RCTDeviceEventEmitter.addListener('websocketFailed',function(ev){
if(ev.id!==id){
return;}

var event=new WebSocketEvent('error');
event.message=ev.message;
_this2.onerror&&_this2.onerror(event);
_this2.dispatchEvent(event);
_this2._unregisterEvents();
_this2.close();})];}}]);return WebSocket;}(WebSocketBase);





module.exports=WebSocket;
});
__d('WebSocketBase',function(global, require, module, exports) {  'use strict';











var EventTarget=require('event-target-shim/lib/event-target.js');var 




WebSocketBase=function(_EventTarget){babelHelpers.inherits(WebSocketBase,_EventTarget);

















function WebSocketBase(url,protocols){babelHelpers.classCallCheck(this,WebSocketBase);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(WebSocketBase).call(this));

_this.CONNECTING=0;
_this.OPEN=1;
_this.CLOSING=2;
_this.CLOSED=3;

if(!protocols){
protocols=[];}


_this.readyState=_this.CONNECTING;
_this.connectToSocketImpl(url);return _this;}babelHelpers.createClass(WebSocketBase,[{key:'close',value:function close()


{
if(this.readyState===this.CLOSING||
this.readyState===this.CLOSED){
return;}


if(this.readyState===this.CONNECTING){
this.cancelConnectionImpl();}


this.readyState=this.CLOSING;
this.closeConnectionImpl();}},{key:'send',value:function send(


data){
if(this.readyState===this.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data==='string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:function closeConnectionImpl()



{
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:function connectToSocketImpl()


{
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:function cancelConnectionImpl()


{
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:function sendStringImpl()


{
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:function sendArrayBufferImpl()


{
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;}(EventTarget);



WebSocketBase.CONNECTING=0;
WebSocketBase.OPEN=1;
WebSocketBase.CLOSING=2;
WebSocketBase.CLOSED=3;

module.exports=WebSocketBase;
});
__d('event-target-shim/lib/event-target.js',function(global, require, module, exports) {  "use strict";











var Commons=require("event-target-shim/lib/commons.js");
var CustomEventTarget=require("event-target-shim/lib/custom-event-target.js");
var EventWrapper=require("event-target-shim/lib/event-wrapper.js");
var LISTENERS=Commons.LISTENERS;
var CAPTURE=Commons.CAPTURE;
var BUBBLE=Commons.BUBBLE;
var ATTRIBUTE=Commons.ATTRIBUTE;
var newNode=Commons.newNode;
var defineCustomEventTarget=CustomEventTarget.defineCustomEventTarget;
var createEventWrapper=EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG=
EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;











var HAS_EVENTTARGET_INTERFACE=
typeof window!=="undefined"&&
typeof window.EventTarget!=="undefined";












var EventTarget=module.exports=function EventTarget(){
if(this instanceof EventTarget){









Object.defineProperty(this,LISTENERS,{value:Object.create(null)});}else 

if(arguments.length===1&&Array.isArray(arguments[0])){
return defineCustomEventTarget(EventTarget,arguments[0]);}else 

if(arguments.length>0){
var types=Array(arguments.length);
for(var i=0;i<arguments.length;++i){
types[i]=arguments[i];}







return defineCustomEventTarget(EventTarget,types);}else 

{
throw new TypeError("Cannot call a class as a function");}};



EventTarget.prototype=Object.create(
(HAS_EVENTTARGET_INTERFACE?window.EventTarget:Object).prototype,
{
constructor:{
value:EventTarget,
writable:true,
configurable:true},


addEventListener:{
value:function addEventListener(type,listener,capture){
if(listener==null){
return false;}

if(typeof listener!=="function"&&typeof listener!=="object"){
throw new TypeError("\"listener\" is not an object.");}


var kind=capture?CAPTURE:BUBBLE;
var node=this[LISTENERS][type];
if(node==null){
this[LISTENERS][type]=newNode(listener,kind);
return true;}


var prev=null;
while(node!=null){
if(node.listener===listener&&node.kind===kind){

return false;}

prev=node;
node=node.next;}


prev.next=newNode(listener,kind);
return true;},

configurable:true,
writable:true},


removeEventListener:{
value:function removeEventListener(type,listener,capture){
if(listener==null){
return false;}


var kind=capture?CAPTURE:BUBBLE;
var prev=null;
var node=this[LISTENERS][type];
while(node!=null){
if(node.listener===listener&&node.kind===kind){
if(prev==null){
this[LISTENERS][type]=node.next;}else 

{
prev.next=node.next;}

return true;}


prev=node;
node=node.next;}


return false;},

configurable:true,
writable:true},


dispatchEvent:{
value:function dispatchEvent(event){

var node=this[LISTENERS][event.type];
if(node==null){
return true;}



var wrapped=createEventWrapper(event,this);



while(node!=null){
if(typeof node.listener==="function"){
node.listener.call(this,wrapped);}else 

if(node.kind!==ATTRIBUTE&&typeof node.listener.handleEvent==="function"){
node.listener.handleEvent(wrapped);}


if(wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]){
break;}

node=node.next;}


return !wrapped.defaultPrevented;},

configurable:true,
writable:true}});
});
__d('event-target-shim/lib/commons.js',function(global, require, module, exports) {  "use strict";














var createUniqueKey=exports.createUniqueKey=typeof Symbol!=="undefined"?
Symbol:
function createUniqueKey(name){
return "[["+name+"_"+Math.random().toFixed(8).slice(2)+"]]";};








exports.LISTENERS=createUniqueKey("listeners");







exports.CAPTURE=1;







exports.BUBBLE=2;







exports.ATTRIBUTE=3;
















exports.newNode=function newNode(listener,kind){
return {listener:listener,kind:kind,next:null};};
});
__d('event-target-shim/lib/custom-event-target.js',function(global, require, module, exports) {  "use strict";











var Commons=require("event-target-shim/lib/commons.js");
var LISTENERS=Commons.LISTENERS;
var ATTRIBUTE=Commons.ATTRIBUTE;
var newNode=Commons.newNode;












function getAttributeListener(eventTarget,type){
var node=eventTarget[LISTENERS][type];
while(node!=null){
if(node.kind===ATTRIBUTE){
return node.listener;}

node=node.next;}

return null;}










function setAttributeListener(eventTarget,type,listener){
if(typeof listener!=="function"&&typeof listener!=="object"){
listener=null;}


var prev=null;
var node=eventTarget[LISTENERS][type];
while(node!=null){
if(node.kind===ATTRIBUTE){

if(prev==null){
eventTarget[LISTENERS][type]=node.next;}else 

{
prev.next=node.next;}}else 


{
prev=node;}


node=node.next;}



if(listener!=null){
if(prev==null){
eventTarget[LISTENERS][type]=newNode(listener,ATTRIBUTE);}else 

{
prev.next=newNode(listener,ATTRIBUTE);}}}















exports.defineCustomEventTarget=function(EventTargetBase,types){
function EventTarget(){
EventTargetBase.call(this);}


var descripter={
constructor:{
value:EventTarget,
configurable:true,
writable:true}};



types.forEach(function(type){
descripter["on"+type]={
get:function(){return getAttributeListener(this,type);},
set:function(listener){setAttributeListener(this,type,listener);},
configurable:true,
enumerable:true};});



EventTarget.prototype=Object.create(EventTargetBase.prototype,descripter);

return EventTarget;};
});
__d('event-target-shim/lib/event-wrapper.js',function(global, require, module, exports) {  "use strict";











var createUniqueKey=require("event-target-shim/lib/commons.js").createUniqueKey;











var STOP_IMMEDIATE_PROPAGATION_FLAG=
createUniqueKey("stop_immediate_propagation_flag");







var CANCELED_FLAG=createUniqueKey("canceled_flag");







var ORIGINAL_EVENT=createUniqueKey("original_event");







var wrapperPrototypeDefinition=Object.freeze({
stopPropagation:Object.freeze({
value:function stopPropagation(){
var e=this[ORIGINAL_EVENT];
if(typeof e.stopPropagation==="function"){
e.stopPropagation();}},


writable:true,
configurable:true}),


stopImmediatePropagation:Object.freeze({
value:function stopImmediatePropagation(){
this[STOP_IMMEDIATE_PROPAGATION_FLAG]=true;

var e=this[ORIGINAL_EVENT];
if(typeof e.stopImmediatePropagation==="function"){
e.stopImmediatePropagation();}},


writable:true,
configurable:true}),


preventDefault:Object.freeze({
value:function preventDefault(){
if(this.cancelable===true){
this[CANCELED_FLAG]=true;}


var e=this[ORIGINAL_EVENT];
if(typeof e.preventDefault==="function"){
e.preventDefault();}},


writable:true,
configurable:true}),


defaultPrevented:Object.freeze({
get:function defaultPrevented(){return this[CANCELED_FLAG];},
enumerable:true,
configurable:true})});







exports.STOP_IMMEDIATE_PROPAGATION_FLAG=STOP_IMMEDIATE_PROPAGATION_FLAG;












exports.createEventWrapper=function createEventWrapper(event,eventTarget){
var timeStamp=
typeof event.timeStamp==="number"?event.timeStamp:Date.now();

var propertyDefinition={
type:{value:event.type,enumerable:true},
target:{value:eventTarget,enumerable:true},
currentTarget:{value:eventTarget,enumerable:true},
eventPhase:{value:2,enumerable:true},
bubbles:{value:Boolean(event.bubbles),enumerable:true},
cancelable:{value:Boolean(event.cancelable),enumerable:true},
timeStamp:{value:timeStamp,enumerable:true},
isTrusted:{value:false,enumerable:true}};

propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG]={value:false,writable:true};
propertyDefinition[CANCELED_FLAG]={value:false,writable:true};
propertyDefinition[ORIGINAL_EVENT]={value:event};


if(typeof event.detail!=="undefined"){
propertyDefinition.detail={value:event.detail,enumerable:true};}


return Object.create(
Object.create(event,wrapperPrototypeDefinition),
propertyDefinition);};
});
__d('WebSocketEvent',function(global, require, module, exports) {  'use strict';var 




















WebSocketEvent=
function WebSocketEvent(type,eventInitDict){babelHelpers.classCallCheck(this,WebSocketEvent);
this.type=type.toString();
babelHelpers.extends(this,eventInitDict);};



module.exports=WebSocketEvent;
});
__d('setupDevtools',function(global, require, module, exports) {  'use strict';












function setupDevtools(){
var messageListeners=[];
var closeListeners=[];
var ws=new window.WebSocket('ws://localhost:8097/devtools');

var FOR_BACKEND={
resolveRNStyle:require('flattenStyle'),
wall:{
listen:function(fn){
messageListeners.push(fn);},

onClose:function(fn){
closeListeners.push(fn);},

send:function(data){
ws.send(JSON.stringify(data));}}};



ws.onclose=function(){
setTimeout(setupDevtools,200);
closeListeners.forEach(function(fn){return fn();});};

ws.onerror=function(error){
setTimeout(setupDevtools,200);
closeListeners.forEach(function(fn){return fn();});};

ws.onopen=function(){
tryToConnect();};


function tryToConnect(){
ws.send('attach:agent');
var _interval=setInterval(function(){return ws.send('attach:agent');},500);
ws.onmessage=function(evt){
if(evt.data.indexOf('eval:')===0){
clearInterval(_interval);
initialize(evt.data.slice('eval:'.length));}};}




function initialize(text){
try{

eval(text);}
catch(e){
console.error('Failed to eval: '+e.message);
return;}

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:require('ReactCurrentOwner'),
InstanceHandles:require('ReactInstanceHandles'),
Mount:require('ReactNativeMount'),
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});

ws.onmessage=handleMessage;}


function handleMessage(evt){


var data;
try{
data=JSON.parse(evt.data);}
catch(e){
return console.error('failed to parse json: '+evt.data);}


if(data.$close||data.$error){
closeListeners.forEach(function(fn){return fn();});
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
tryToConnect();
return;}

if(data.$open){
return;}

messageListeners.forEach(function(fn){
try{
fn(data);}
catch(e){



console.log(data);
throw e;}});}}





module.exports=setupDevtools;
});
__d('ReactInstanceHandles',function(global, require, module, exports) {  'use strict';













var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=10000;








function getReactRootIDString(index){
return SEPARATOR+index.toString(36);}










function isBoundary(id,index){
return id.charAt(index)===SEPARATOR||index===id.length;}









function isValidID(id){
return id===''||
id.charAt(0)===SEPARATOR&&id.charAt(id.length-1)!==SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID)===0&&
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID)&&isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about '+
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID===destinationID){
return ancestorID;}



var start=ancestorID.length+SEPARATOR_LENGTH;
var i;
for(i=start;i<destinationID.length;i++){
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength===0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i<=minLength;i++){
if(isBoundary(oneID,i)&&isBoundary(twoID,i)){
lastCommonMarkerIndex=i;}else 
if(oneID.charAt(i)!==twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}















function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start=start||'';
stop=stop||'';
invariant(
start!==stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp||isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do '+
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id=traverse(id,stop)){
var ret;
if((!skipFirst||id!==start)&&(!skipLast||id!==stop)){
ret=cb(id,traverseUp,arg);}

if(ret===false||id===stop){

break;}

invariant(
depth++<MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while '+
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop,id);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID+name;},










getReactRootIDFromNodeID:function(id){
if(id&&id.charAt(0)===SEPARATOR&&id.length>1){
var index=id.indexOf(SEPARATOR,1);
return index>-1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID!==leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID!==enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},


getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports=ReactInstanceHandles;
});
__d('ReactRootIndex',function(global, require, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex=_createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports=ReactRootIndex;
});
__d('ReactNativeMount',function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');
var UIManager=require('UIManager');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID+'['+instanceNumber+']';}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.isReactComponent={};
if(__DEV__){
TopLevelWrapper.displayName='TopLevelWrapper';}

TopLevelWrapper.prototype.render=function(){

return this.props;};










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._renderedComponent._topLevelWrapper=componentInstance;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},


findNodeHandle:require('findNodeHandle'),
nativeTagToRootNodeID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];},






renderComponent:function(
nextElement,
containerTag,
callback)
{
var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
null,
null,
nextElement);


var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextWrappedElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextWrappedElement);
ReactNativeMount._instancesByContainerID[topRootNodeID]=instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
UIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

UIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
UIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


getID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];}};



ReactNativeMount.renderComponent=ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports=ReactNativeMount;
});
__d('ReactReconciler',function(global, require, module, exports) {  'use strict';












var ReactRef=require('ReactRef');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(internalInstance._currentElement&&
internalInstance._currentElement.ref!=null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}

return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;

if(nextElement===prevElement&&
context===internalInstance._context)
{










return;}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged&&
internalInstance._currentElement&&
internalInstance._currentElement.ref!=null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports=ReactReconciler;
});
__d('ReactRef',function(global, require, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref==='function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref==='function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs=function(instance,element){
if(element===null||element===false){
return;}

var ref=element.ref;
if(ref!=null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs=function(prevElement,nextElement){












var prevEmpty=prevElement===null||prevElement===false;
var nextEmpty=nextElement===null||nextElement===false;

return (

prevEmpty||nextEmpty||
nextElement._owner!==prevElement._owner||
nextElement.ref!==prevElement.ref);};



ReactRef.detachRefs=function(instance,element){
if(element===null||element===false){
return;}

var ref=element.ref;
if(ref!=null){
detachRef(ref,instance,element._owner);}};



module.exports=ReactRef;
});
__d('ReactOwner',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object&&
typeof object.attachRef==='function'&&
typeof object.detachRef==='function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might '+
'be adding a ref to a component that was not created inside a component\'s '+
'`render` method, or you have multiple copies of React loaded '+
'(details: https://fb.me/react-refs-must-have-owner).');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might '+
'be removing a ref to a component that was not created inside a component\'s '+
'`render` method, or you have multiple copies of React loaded '+
'(details: https://fb.me/react-refs-must-have-owner).');



if(owner.getPublicInstance().refs[ref]===component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports=ReactOwner;
});
__d('ReactUpdateQueue',function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
ReactUpdates.enqueueUpdate(internalInstance);}


function getInternalInstanceReadyForUpdate(publicInstance,callerName){
var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. '+
'This usually means you called %s() on an unmounted component. '+
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor.displayName);}


return null;}


if(__DEV__){
warning(
ReactCurrentOwner.current==null,
'%s(...): Cannot update during an existing state transition '+
'(such as within `render`). Render methods should be a pure function '+
'of props and state.',
callerName);}



return internalInstance;}






var ReactUpdateQueue={








isMounted:function(publicInstance){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner!==null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. '+
'render() should be a pure function of props and state. It should '+
'never access something that requires stale data from the previous '+
'render, such as refs. Move this logic to componentDidMount and '+
'componentDidUpdate instead.',
owner.getName()||'A component');

owner._warnedAboutRefsInRender=true;}}


var internalInstance=ReactInstanceMap.get(publicInstance);
if(internalInstance){



return !!internalInstance._renderedComponent;}else 
{
return false;}},











enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback==='function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, '+
'`setState`, `replaceState`, or `forceUpdate` with a callback that '+
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks=[callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback==='function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, '+
'`setState`, `replaceState`, or `forceUpdate` with a callback that '+
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks=[callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate=true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue=[completeState];
internalInstance._pendingReplaceState=true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue||(
internalInstance._pendingStateQueue=[]);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueSetPropsInternal(internalInstance,partialProps);},


enqueueSetPropsInternal:function(internalInstance,partialProps){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'setProps(...): You called `setProps` on a '+
'component with a parent. This is an anti-pattern since props will '+
'get reactively updated when rendered. Instead, change the owner\'s '+
'`render` method to pass the correct value as props to the component '+
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement||
topLevelWrapper._currentElement;
var element=wrapElement.props;
var props=assign({},element.props,partialProps);
topLevelWrapper._pendingElement=ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance,props);},


enqueueReplacePropsInternal:function(internalInstance,props){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'replaceProps(...): You called `replaceProps` on a '+
'component with a parent. This is an anti-pattern since props will '+
'get reactively updated when rendered. Instead, change the owner\'s '+
'`render` method to pass the correct value as props to the component '+
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement||
topLevelWrapper._currentElement;
var element=wrapElement.props;
topLevelWrapper._pendingElement=ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement=newElement;
enqueueUpdate(internalInstance);}};




module.exports=ReactUpdateQueue;
});
__d('ReactUpdates',function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction&&batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching '+
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength=dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength!==dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length=0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength=null;
this.callbackQueue=CallbackQueue.getPooled();
this.reconcileTransaction=
ReactUpdates.ReactReconcileTransaction.getPooled(false);}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength=null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue=null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction=null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});





PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d,e){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d,e);}









function mountOrderComparator(c1,c2){
return c1._mountOrder-c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len===dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to '+
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i<len;i++){



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks=null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j<callbacks.length;j++){
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length||asapEnqueued){
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued=false;
var queue=asapCallbackQueue;
asapCallbackQueue=CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates=ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();







if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where'+
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued=true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction=ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates==='function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates==='boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy=_batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports=ReactUpdates;
});
__d('CallbackQueue',function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks=null;
this._contexts=null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks=this._callbacks||[];
this._contexts=this._contexts||[];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length===contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks=null;
this._contexts=null;
for(var i=0;i<callbacks.length;i++){
callbacks[i].call(contexts[i]);}

callbacks.length=0;
contexts.length=0;}},








reset:function(){
this._callbacks=null;
this._contexts=null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports=CallbackQueue;
});
__d('PooledClass',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fourArgumentPooler=function(a1,a2,a3,a4){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4);
return instance;}else 
{
return new Klass(a1,a2,a3,a4);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

instance.destructor();
if(Klass.instancePool.length<Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool=[];
NewKlass.getPooled=pooler||DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize=DEFAULT_POOL_SIZE;}

NewKlass.release=standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fourArgumentPooler:fourArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports=PooledClass;
});
__d('Transaction',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers=this.getTransactionWrappers();
if(this.wrapperInitData){
this.wrapperInitData.length=0;}else 
{
this.wrapperInitData=[];}

this._isInTransaction=false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},



















perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there '+
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction=true;




errorThrown=true;
this.initializeAll(0);
ret=method.call(scope,a,b,c,d,e,f);
errorThrown=false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err){}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction=false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i<transactionWrappers.length;i++){
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i]=Transaction.OBSERVED_ERROR;
this.wrapperInitData[i]=wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i]===Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i+1);}
catch(err){}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i<transactionWrappers.length;i++){
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown=true;
if(initData!==Transaction.OBSERVED_ERROR&&wrapper.close){
wrapper.close.call(this,initData);}

errorThrown=false;}finally 
{
if(errorThrown){



try{
this.closeAll(i+1);}
catch(e){}}}}




this.wrapperInitData.length=0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports=Transaction;
});
__d('emptyObject',function(global, require, module, exports) {  'use strict';












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports=emptyObject;
});
__d('instantiateReactComponent',function(global, require, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});



function getDeclarationErrorAddendum(owner){
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `'+name+'`.';}}


return '';}









function isInternalComponentType(type){
return (
typeof type==='function'&&
typeof type.prototype!=='undefined'&&
typeof type.prototype.mountComponent==='function'&&
typeof type.prototype.receiveComponent==='function');}










function instantiateReactComponent(node){
var instance;

if(node===null||node===false){
instance=new ReactEmptyComponent(instantiateReactComponent);}else 
if(typeof node==='object'){
var element=node;
invariant(
element&&(typeof element.type==='function'||
typeof element.type==='string'),
'Element type is invalid: expected a string (for built-in components) '+
'or a class/function (for composite components) but got: %s.%s',
element.type==null?element.type:typeof element.type,
getDeclarationErrorAddendum(element._owner));



if(typeof element.type==='string'){
instance=ReactNativeComponent.createInternalComponent(element);}else 
if(isInternalComponentType(element.type)){



instance=new element.type(element);}else 
{
instance=new ReactCompositeComponentWrapper();}}else 

if(typeof node==='string'||typeof node==='number'){
instance=ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct==='function'&&
typeof instance.mountComponent==='function'&&
typeof instance.receiveComponent==='function'&&
typeof instance.unmountComponent==='function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex=0;
instance._mountImage=null;

if(__DEV__){
instance._isOwnerNecessary=false;
instance._warnedAboutRefsInRender=false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports=instantiateReactComponent;
});
__d('ReactCompositeComponent',function(global, require, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner||null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `'+name+'`.';}}


return '';}


function StatelessComponent(Component){}

StatelessComponent.prototype.render=function(){
var Component=ReactInstanceMap.get(this)._currentElement.type;
return Component(this.props,this.context,this.updater);};



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement=element;
this._rootNodeID=null;
this._instance=null;


this._pendingElement=null;
this._pendingStateQueue=null;
this._pendingReplaceState=false;
this._pendingForceUpdate=false;

this._renderedComponent=null;

this._context=null;
this._mountOrder=0;
this._topLevelWrapper=null;


this._pendingCallbacks=null;},











mountComponent:function(rootID,transaction,context){
this._context=context;
this._mountOrder=nextMountID++;
this._rootNodeID=rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(context);

var Component=this._currentElement.type;


var inst;
var renderedElement;





var canInstantiate='prototype' in Component;

if(canInstantiate){
if(__DEV__){
ReactCurrentOwner.current=this;
try{
inst=new Component(publicProps,publicContext,ReactUpdateQueue);}finally 
{
ReactCurrentOwner.current=null;}}else 

{
inst=new Component(publicProps,publicContext,ReactUpdateQueue);}}



if(!canInstantiate||inst===null||inst===false||ReactElement.isValidElement(inst)){
renderedElement=inst;
inst=new StatelessComponent(Component);}


if(__DEV__){


if(inst.render==null){
warning(
false,
'%s(...): No `render` method found on the returned component '+
'instance: you may have forgotten to define `render`, returned '+
'null/false from a stateless component, or tried to render an '+
'element whose type is a function that isn\'t a React component.',
Component.displayName||Component.name||'Component');}else 

{


warning(
Component.prototype&&Component.prototype.isReactComponent||
!canInstantiate||
!(inst instanceof Component),
'%s(...): React component classes must extend React.Component.',
Component.displayName||Component.name||'Component');}}






inst.props=publicProps;
inst.context=publicContext;
inst.refs=emptyObject;
inst.updater=ReactUpdateQueue;

this._instance=inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){



warning(
!inst.getInitialState||
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. '+
'This is only supported for classes created using React.createClass. '+
'Did you mean to define a state property instead?',
this.getName()||'a component');

warning(
!inst.getDefaultProps||
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. '+
'This is only supported for classes created using React.createClass. '+
'Use a static property to define defaultProps instead.',
this.getName()||'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static '+
'property to define propTypes instead.',
this.getName()||'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a '+
'static property to define contextTypes instead.',
this.getName()||'a component');

warning(
typeof inst.componentShouldUpdate!=='function',
'%s has a method called '+
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+
'The name is phrased as a question because the function is '+
'expected to return a value.',
this.getName()||'A component');

warning(
typeof inst.componentDidUnmount!=='function',
'%s has a method called '+
'componentDidUnmount(). But there is no such lifecycle method. '+
'Did you mean componentWillUnmount()?',
this.getName()||'A component');

warning(
typeof inst.componentWillRecieveProps!=='function',
'%s has a method called '+
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
this.getName()||'A component');}



var initialState=inst.state;
if(initialState===undefined){
inst.state=initialState=null;}

invariant(
typeof initialState==='object'&&!Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName()||'ReactCompositeComponent');


this._pendingStateQueue=null;
this._pendingReplaceState=false;
this._pendingForceUpdate=false;

if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state=this._processPendingState(inst.props,inst.context);}}




if(renderedElement===undefined){
renderedElement=this._renderValidatedComponent();}


this._renderedComponent=this._instantiateReactComponent(
renderedElement);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
inst.componentWillUnmount();}


ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent=null;
this._instance=null;




this._pendingStateQueue=null;
this._pendingReplaceState=false;
this._pendingForceUpdate=false;
this._pendingCallbacks=null;
this._pendingElement=null;



this._context=null;
this._rootNodeID=null;
this._topLevelWrapper=null;




ReactInstanceMap.remove(inst);},
















_maskContext:function(context){
var maskedContext=null;
var Component=this._currentElement.type;
var contextTypes=Component.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext={};
for(var contextName in contextTypes){
maskedContext[contextName]=context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=this._currentElement.type;
if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var Component=this._currentElement.type;
var inst=this._instance;
var childContext=inst.getChildContext&&inst.getChildContext();
if(childContext){
invariant(
typeof Component.childContextTypes==='object',
'%s.getChildContext(): childContextTypes must be defined in order to '+
'use getChildContext().',
this.getName()||'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
Component.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext){
invariant(
name in Component.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName()||'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=this._currentElement.type;
if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes){
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName]==='function',
'%s: %s type `%s` is invalid; it must be a function, usually '+
'from React.PropTypes.',
componentName||'React class',
ReactPropTypeLocationNames[location],
propName);

error=propTypes[propName](props,propName,componentName,location);}
catch(ex){
error=ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location===ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement=null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement!=null){
ReactReconciler.receiveComponent(
this,
this._pendingElement||this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue!==null||this._pendingForceUpdate){
this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=this._context===nextUnmaskedContext?
inst.context:
this._processContext(nextUnmaskedContext);
var nextProps;


if(prevParentElement===nextParentElement){


nextProps=nextParentElement.props;}else 
{
nextProps=this._processProps(nextParentElement.props);




if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate||
!inst.shouldComponentUpdate||
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate!=='undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a '+
'boolean value. Make sure to return true or false.',
this.getName()||'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate=false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement=nextParentElement;
this._context=nextUnmaskedContext;
inst.props=nextProps;
inst.state=nextState;
inst.context=nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState=false;
this._pendingStateQueue=null;

if(!queue){
return inst.state;}


if(replace&&queue.length===1){
return queue[0];}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i<queue.length;i++){
var partial=queue[i];
assign(
nextState,
typeof partial==='function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var hasComponentDidUpdate=Boolean(inst.componentDidUpdate);
var prevProps;
var prevState;
var prevContext;
if(hasComponentDidUpdate){
prevProps=inst.props;
prevState=inst.state;
prevContext=inst.context;}


if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement=nextElement;
this._context=unmaskedContext;
inst.props=nextProps;
inst.state=nextState;
inst.context=nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(hasComponentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent=this._instantiateReactComponent(
nextRenderedElement);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent==='undefined'&&
inst.render._isMockFunction){


renderedComponent=null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
ReactCurrentOwner.current=this;
try{
renderedComponent=
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactCurrentOwner.current=null;}

invariant(

renderedComponent===null||renderedComponent===false||
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have '+
'returned undefined, an array or some other invalid object.',
this.getName()||'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
invariant(inst!=null,'Stateless function components cannot have refs.');
var publicComponentInstance=component.getPublicInstance();
if(__DEV__){
var componentName=component&&component.getName?
component.getName():'a component';
warning(publicComponentInstance!=null,
'Stateless function components cannot be given refs '+
'(See ref "%s" in %s created by %s). '+
'Attempts to access this ref will fail.',
ref,
componentName,
this.getName());}


var refs=inst.refs===emptyObject?inst.refs={}:inst.refs;
refs[ref]=publicComponentInstance;},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance&&this._instance.constructor;
return (
type.displayName||constructor&&constructor.displayName||
type.name||constructor&&constructor.name||
null);},











getPublicInstance:function(){
var inst=this._instance;
if(inst instanceof StatelessComponent){
return null;}

return inst;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports=ReactCompositeComponent;
});
__d('ReactComponentEnvironment',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment=
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID=
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates=
environment.processChildrenUpdates;
injected=true;}}};





module.exports=ReactComponentEnvironment;
});
__d('ReactPropTypeLocations',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports=ReactPropTypeLocations;
});
__d('shouldUpdateReactComponent',function(global, require, module, exports) {  'use strict';
























function shouldUpdateReactComponent(prevElement,nextElement){
var prevEmpty=prevElement===null||prevElement===false;
var nextEmpty=nextElement===null||nextElement===false;
if(prevEmpty||nextEmpty){
return prevEmpty===nextEmpty;}


var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType==='string'||prevType==='number'){
return nextType==='string'||nextType==='number';}else 
{
return (
nextType==='object'&&
prevElement.type===nextElement.type&&
prevElement.key===nextElement.key);}


return false;}


module.exports=shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactEmptyComponentRegistry=require('ReactEmptyComponentRegistry');
var ReactReconciler=require('ReactReconciler');

var assign=require('Object.assign');

var placeholderElement;

var ReactEmptyComponentInjection={
injectEmptyComponent:function(component){
placeholderElement=ReactElement.createElement(component);}};



var ReactEmptyComponent=function(instantiate){
this._currentElement=null;
this._rootNodeID=null;
this._renderedComponent=instantiate(placeholderElement);};

assign(ReactEmptyComponent.prototype,{
construct:function(element){},

mountComponent:function(rootID,transaction,context){
ReactEmptyComponentRegistry.registerNullComponentID(rootID);
this._rootNodeID=rootID;
return ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
context);},


receiveComponent:function(){},

unmountComponent:function(rootID,transaction,context){
ReactReconciler.unmountComponent(this._renderedComponent);
ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
this._rootNodeID=null;
this._renderedComponent=null;}});



ReactEmptyComponent.injection=ReactEmptyComponentInjection;

module.exports=ReactEmptyComponent;
});
__d('ReactEmptyComponentRegistry',function(global, require, module, exports) {  'use strict';














var nullComponentIDsRegistry={};





function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}






function registerNullComponentID(id){
nullComponentIDsRegistry[id]=true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}


var ReactEmptyComponentRegistry={
isNullComponentID:isNullComponentID,
registerNullComponentID:registerNullComponentID,
deregisterNullComponentID:deregisterNullComponentID};


module.exports=ReactEmptyComponentRegistry;
});
__d('ReactNativeComponent',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass=componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass=componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);}};









function getComponentClassForElement(element){
if(typeof element.type==='function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass==null){
tagToComponentClass[tag]=componentClass=autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports=ReactNativeComponent;
});
__d('ReactNativeTextComponent',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var UIManager=require('UIManager');

var assign=require('Object.assign');
var invariant=require('invariant');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement=text;
this._stringText=''+text;
this._rootNodeID=null;},


mountComponent:function(rootID,transaction,context){
invariant(
context.isInAParentText,
'RawText "'+this._stringText+'" must be wrapped in an explicit '+
'<Text> component.');

this._rootNodeID=rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
UIManager.createView(
tag,
'RCTRawText',
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
{text:this._stringText});

return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText!==this._currentElement){
this._currentElement=nextText;
var nextStringText=''+nextText;
if(nextStringText!==this._stringText){
this._stringText=nextStringText;
UIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement=null;
this._stringText=null;
this._rootNodeID=null;}});




module.exports=ReactNativeTextComponent;
});
__d('RCTDebugComponentOwnership',function(global, require, module, exports) {  'use strict';
















var BatchedBridge=require('BatchedBridge');
var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


var RCTDebugComponentOwnership={








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};



BatchedBridge.registerCallableModule(
'RCTDebugComponentOwnership',
RCTDebugComponentOwnership);


module.exports=RCTDebugComponentOwnership;
});
__d('InspectorUtils',function(global, require, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID===findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren){
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports={findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};
});
__d('PerformanceLogger',function(global, require, module, exports) {  'use strict';











var BatchedBridge=require('BatchedBridge');

var performanceNow=require('performanceNow');

var timespans={};
var extras={};





var PerformanceLogger={
addTimespan:function(key,lengthInMs,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists ',
key);}


return;}


timespans[key]={
description:description,
totalTime:lengthInMs};},



startTimespan:function(key,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists ',
key);}


return;}


timespans[key]={
description:description,
startTime:performanceNow()};},



stopTimespan:function(key){
if(!timespans[key]||!timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started ',
key);}


return;}

if(timespans[key].endTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has already ended ',
key);}


return;}


timespans[key].endTime=performanceNow();
timespans[key].totalTime=
timespans[key].endTime-timespans[key].startTime;},


clear:function(){
timespans={};
extras={};},


clearExceptTimespans:function(keys){
timespans=Object.keys(timespans).reduce(function(previous,key){
if(keys.indexOf(key)!==-1){
previous[key]=timespans[key];}

return previous;},
{});
extras={};},


getTimespans:function(){
return timespans;},


hasTimespan:function(key){
return !!timespans[key];},


logTimespans:function(){
for(var key in timespans){
if(timespans[key].totalTime){
console.log(key+': '+timespans[key].totalTime+'ms');}}},




addTimespans:function(newTimespans,labels){
for(var i=0,l=newTimespans.length;i<l;i+=2){
var label=labels[i/2];
PerformanceLogger.addTimespan(
label,
newTimespans[i+1]-newTimespans[i],
label);}},




setExtra:function(key,value){
if(extras[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to set an extra that already exists ',
key);}


return;}

extras[key]=value;},


getExtras:function(){
return extras;}};



BatchedBridge.registerCallableModule(
'PerformanceLogger',
PerformanceLogger);


module.exports=PerformanceLogger;
});
__d('EventPluginHub',function(global, require, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');
var ReactErrorUtils=require('ReactErrorUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');
var warning=require('warning');




var listenerBank={};





var eventQueue=null;








var executeDispatchesAndRelease=function(event,simulated){
if(event){
EventPluginUtils.executeDispatchesInOrder(event,simulated);

if(!event.isPersistent()){
event.constructor.release(event);}}};



var executeDispatchesAndReleaseSimulated=function(e){
return executeDispatchesAndRelease(e,true);};

var executeDispatchesAndReleaseTopLevel=function(e){
return executeDispatchesAndRelease(e,false);};






var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle&&
InstanceHandle.traverseTwoPhase&&
InstanceHandle.traverseEnterLeave;
warning(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle=InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
typeof listener==='function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName]||(listenerBank[registrationName]={});
bankForRegistrationName[id]=listener;

var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule&&PluginModule.didPutListener){
PluginModule.didPutListener(id,registrationName,listener);}},








getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName&&bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule&&PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


var bankForRegistrationName=listenerBank[registrationName];

if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank){
if(!listenerBank[registrationName][id]){
continue;}


var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule&&PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0;i<plugins.length;i++){

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

if(extractedEvents){
events=accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue=accumulateInto(eventQueue,events);}},








processEventQueue:function(simulated){


var processingEventQueue=eventQueue;
eventQueue=null;
if(simulated){
forEachAccumulated(
processingEventQueue,
executeDispatchesAndReleaseSimulated);}else 

{
forEachAccumulated(
processingEventQueue,
executeDispatchesAndReleaseTopLevel);}


invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing '+
'an event queue. Support for this has not yet been implemented.');


ReactErrorUtils.rethrowCaughtError();},





__purge:function(){
listenerBank={};},


__getListenerBank:function(){
return listenerBank;}};




module.exports=EventPluginHub;
});
__d('EventPluginRegistry',function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins){
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex>-1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in '+
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` '+
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex]=PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents){
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same '+
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName]=dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames){
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same '+
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName]=PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName]=
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than '+
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder=Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins){
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName)||
namesToPlugins[pluginName]!==PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins '+
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName]=PluginModule;
isOrderingDirty=true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName]||
null;}

for(var phase in dispatchConfig.phasedRegistrationNames){
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder=null;
for(var pluginName in namesToPlugins){
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length=0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs){
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules){
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports=EventPluginRegistry;
});
__d('EventPluginUtils',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var ReactErrorUtils=require('ReactErrorUtils');

var invariant=require('invariant');
var warning=require('warning');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount=InjectedMount;
if(__DEV__){
warning(
InjectedMount&&InjectedMount.getNode&&InjectedMount.getID,
'EventPluginUtils.injection.injectMount(...): Injected Mount '+
'module is missing getNode or getID.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType===topLevelTypes.topMouseUp||
topLevelType===topLevelTypes.topTouchEnd||
topLevelType===topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType===topLevelTypes.topMouseMove||
topLevelType===topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType===topLevelTypes.topMouseDown||
topLevelType===topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches=function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

warning(
idsIsArr===listenersIsArr&&IDsLen===listenersLen,
'EventPluginUtils: Invalid `event`.');};}











function executeDispatch(event,simulated,listener,domID){
var type=event.type||'unknown-event';
event.currentTarget=injection.Mount.getNode(domID);
if(simulated){
ReactErrorUtils.invokeGuardedCallbackWithCatch(
type,
listener,
event,
domID);}else 

{
ReactErrorUtils.invokeGuardedCallback(type,listener,event,domID);}

event.currentTarget=null;}





function executeDispatchesInOrder(event,simulated){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i<dispatchListeners.length;i++){
if(event.isPropagationStopped()){
break;}


executeDispatch(event,simulated,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
executeDispatch(event,simulated,dispatchListeners,dispatchIDs);}

event._dispatchListeners=null;
event._dispatchIDs=null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i<dispatchListeners.length;i++){
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs=null;
event._dispatchListeners=null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners=null;
event._dispatchIDs=null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,

getNode:function(id){
return injection.Mount.getNode(id);},

getID:function(node){
return injection.Mount.getID(node);},


injection:injection};


module.exports=EventPluginUtils;
});
__d('EventConstants',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topAbort:null,
topBlur:null,
topCanPlay:null,
topCanPlayThrough:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topDurationChange:null,
topEmptied:null,
topEncrypted:null,
topEnded:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topLoadedData:null,
topLoadedMetadata:null,
topLoadStart:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topPause:null,
topPlay:null,
topPlaying:null,
topProgress:null,
topRateChange:null,
topReset:null,
topScroll:null,
topSeeked:null,
topSeeking:null,
topSelectionChange:null,
topStalled:null,
topSubmit:null,
topSuspend:null,
topTextInput:null,
topTimeUpdate:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topVolumeChange:null,
topWaiting:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports=EventConstants;
});
__d('ReactErrorUtils',function(global, require, module, exports) {  'use strict';













var caughtError=null;









function invokeGuardedCallback(name,func,a,b){
try{
return func(a,b);}
catch(x){
if(caughtError===null){
caughtError=x;}

return undefined;}}



var ReactErrorUtils={
invokeGuardedCallback:invokeGuardedCallback,





invokeGuardedCallbackWithCatch:invokeGuardedCallback,





rethrowCaughtError:function(){
if(caughtError){
var error=caughtError;
caughtError=null;
throw error;}}};




if(__DEV__){




if(typeof window!=='undefined'&&
typeof window.dispatchEvent==='function'&&
typeof document!=='undefined'&&
typeof document.createEvent==='function'){
var fakeNode=document.createElement('react');
ReactErrorUtils.invokeGuardedCallback=function(name,func,a,b){
var boundFunc=func.bind(null,a,b);
var evtType='react-'+name;
fakeNode.addEventListener(evtType,boundFunc,false);
var evt=document.createEvent('Event');
evt.initEvent(evtType,false,false);
fakeNode.dispatchEvent(evt);
fakeNode.removeEventListener(evtType,boundFunc,false);};}}




module.exports=ReactErrorUtils;
});
__d('accumulateInto',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next!=null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current==null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray&&nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports=accumulateInto;
});
__d('forEachAccumulated',function(global, require, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports=forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',function(global, require, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports=IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',function(global, require, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var SyntheticEvent=require('SyntheticEvent');
var UIManager=require('UIManager');

var merge=require('merge');
var warning=require('warning');

var customBubblingEventTypes=UIManager.customBubblingEventTypes;
var customDirectEventTypes=UIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes){
allTypesByEventName[bubblingTypeName]=customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes){
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName]=customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig||directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports=IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var warning=require('warning');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
warning(
domID,
'Dispatching id must not be null');}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners=
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs=accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event&&event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event&&event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event&&event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners=
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs=accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event&&event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports=EventPropagators;
});
__d('SyntheticEvent',function(global, require, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');





var EventInterface={
type:null,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp||Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
this.dispatchConfig=dispatchConfig;
this.dispatchMarker=dispatchMarker;
this.nativeEvent=nativeEvent;
this.target=nativeEventTarget;
this.currentTarget=nativeEventTarget;

var Interface=this.constructor.Interface;
for(var propName in Interface){
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName]=normalize(nativeEvent);}else 
{
this[propName]=nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented!=null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue===false;
if(defaultPrevented){
this.isDefaultPrevented=emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented=emptyFunction.thatReturnsFalse;}

this.isPropagationStopped=emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented=true;
var event=this.nativeEvent;
if(__DEV__){
warning(
event,
'This synthetic event is reused for performance reasons. If you\'re '+
'seeing this, you\'re calling `preventDefault` on a '+
'released/nullified synthetic event. This is a no-op. See '+
'https://fb.me/react-event-pooling for more information.');}


if(!event){
return;}


if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue=false;}

this.isDefaultPrevented=emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(__DEV__){
warning(
event,
'This synthetic event is reused for performance reasons. If you\'re '+
'seeing this, you\'re calling `stopPropagation` on a '+
'released/nullified synthetic event. This is a no-op. See '+
'https://fb.me/react-event-pooling for more information.');}


if(!event){
return;}


if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble=true;}

this.isPropagationStopped=emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent=emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface){
this[propName]=null;}

this.dispatchConfig=null;
this.dispatchMarker=null;
this.nativeEvent=null;}});




SyntheticEvent.Interface=EventInterface;







SyntheticEvent.augmentClass=function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype=prototype;
Class.prototype.constructor=Class;

Class.Interface=assign({},Super.Interface,Interface);
Class.augmentClass=Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.fourArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.fourArgumentPooler);

module.exports=SyntheticEvent;
});
__d('merge',function(global, require, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports=merge;
});
__d('mergeInto',function(global, require, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two!=null){
checkMergeObjectArg(two);
for(var key in two){
if(!two.hasOwnProperty(key)){
continue;}

one[key]=two[key];}}}




module.exports=mergeInto;
});
__d('mergeHelpers',function(global, require, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o!=='object'||o===null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg===undefined||arg===null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one)&&Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg)&&!Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg)||typeof arg==='function')&&!Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level<MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge '+
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy===undefined||strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to '+
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports=mergeHelpers;
});
__d('NodeHandle',function(global, require, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation=Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports=NodeHandle;
});
__d('ReactDefaultBatchingStrategy',function(global, require, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates=false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d,e){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates=true;


if(alreadyBatchingUpdates){
callback(a,b,c,d,e);}else 
{
transaction.perform(callback,null,a,b,c,d,e);}}};




module.exports=ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',function(global, require, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports=ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var ReactPerf=require('ReactPerf');
var UIManager=require('UIManager');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i<childrenUpdates.length;i++){
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag]||(byContainerTag[containerTag]={});
if(update.type===ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices||(updates.moveFromIndices=[])).push(update.fromIndex);
(updates.moveToIndices||(updates.moveToIndices=[])).push(update.toIndex);}else 
if(update.type===ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices||(updates.removeAtIndices=[])).push(update.fromIndex);}else 
if(update.type===ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices||(updates.addAtIndices=[])).push(update.toIndex);
(updates.addChildTags||(updates.addChildTags=[])).push(tag);}}





for(var updateParentTagString in byContainerTag){
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
UIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
UIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports=ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
SET_MARKUP:null,
TEXT_CONTENT:null});


module.exports=ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady=CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady=null;}};



babelHelpers.extends(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports=ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',function(global, require, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches===0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle=null;}}else 

if(!interactionHandle){
interactionHandle=InteractionManager.createInteractionHandle();}}};




module.exports=ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',function(global, require, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
return new Promise(function(resolve){
scheduleUpdate();
if(callback){
_queue.push(callback);}

_queue.push(resolve);});},






createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle=setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle=null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount!==0&&nextInteractionCount===0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount===0&&nextInteractionCount!==0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount===0){
var queue=_queue;
_queue=[];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports=InteractionManager;
});
__d('Set',function(global, require, module, exports) {  var 



















Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports=function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=function(){










function Set(iterable){babelHelpers.classCallCheck(this,Set);
if(this==null||
typeof this!=='object'&&typeof this!=='function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable!=null){
var it=toIterator(iterable);
var next;
while(!(next=it.next()).done){
this.add(next.value);}}}babelHelpers.createClass(Set,[{key:'add',value:function add(












value){
this._map.set(value,value);
this.size=this._map.size;
return this;}},{key:'clear',value:function clear()







{
initSet(this);}},{key:'delete',value:function _delete(











value){
var ret=this._map.delete(value);
this.size=this._map.size;
return ret;}},{key:'entries',value:function entries()







{
return this._map.entries();}},{key:'forEach',value:function forEach(









callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next=it.next()).done){
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:function has(











value){
return this._map.has(value);}},{key:'values',value:function values()







{
return this._map.values();}}]);return Set;}();




Set.prototype[toIterator.ITERATOR_SYMBOL]=Set.prototype.values;


Set.prototype.keys=Set.prototype.values;

function initSet(set){
set._map=new Map();
set.size=set._map.size;}


return Set;}(
Function('return this')());
});
__d('Map',function(global, require, module, exports) {  var 



















guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports=function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP='$size'+guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=function(){










function Map(iterable){babelHelpers.classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable!=null){
var it=toIterator(iterable);
var next;
while(!(next=it.next()).done){
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}babelHelpers.createClass(Map,[{key:'clear',value:function clear()








{
initMap(this);}},{key:'has',value:function has(









key){
var index=getIndex(this,key);
return !!(index!=null&&this._mapData[index]);}},{key:'set',value:function set(










key,value){
var index=getIndex(this,key);

if(index!=null&&this._mapData[index]){
this._mapData[index][1]=value;}else 
{
index=this._mapData.push([
key,
value])-
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP]+=1;}else 
{
this.size+=1;}}



return this;}},{key:'get',value:function get(









key){
var index=getIndex(this,key);
if(index==null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:function _delete(











key){
var index=getIndex(this,key);
if(index!=null&&this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index]=undefined;
if(__DEV__){
this[SECRET_SIZE_PROP]-=1;}else 
{
this.size-=1;}

return true;}else 
{
return false;}}},{key:'entries',value:function entries()










{
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:function keys()








{
return new MapIterator(this,KIND_KEY);}},{key:'values',value:function values()








{
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:function forEach(











callback,thisArg){
if(typeof callback!=='function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg||undefined);
var mapData=this._mapData;




for(var i=0;i<mapData.length;i++){
var entry=mapData[i];
if(entry!=null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;}();






Map.prototype[toIterator.ITERATOR_SYMBOL]=Map.prototype.entries;var 

MapIterator=function(){









function MapIterator(map,kind){babelHelpers.classCallCheck(this,MapIterator);
if(!(isObject(map)&&map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind)===-1){
throw new Error('Invalid iteration kind.');}


this._map=map;
this._nextIndex=0;
this._kind=kind;}babelHelpers.createClass(MapIterator,[{key:'next',value:function next()








{
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map==null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index<entries.length){
var record=entries[index];

index+=1;
this._nextIndex=index;

if(record){
if(kind===KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind===KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map=undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;}();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL]=function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX+key;
if(typeof key==='string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index==null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash]=index;}}else 

{
var prefixedKey=KEY_PREFIX+key;
if(typeof key==='string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey]=index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey]=index;}}}}










function initMap(map){






map._mapData=[];







map._objectIndex={};


map._stringIndex={};


map._otherIndex={};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP]=0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which '+
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size=0;}








function isObject(o){
return o!=null&&(typeof o==='object'||typeof o==='function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e){
return false;}}();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID=node.uniqueID;
break;
case 9:
uniqueID=node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX+uniqueID;}else 
{
return null;}}



var getHash=function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5&&
o.propertyIsEnumerable&&
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5&&
isNode(o)&&
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5&&o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter+=1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable=function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty]=hashCounter;}else 
if(isNode(o)){




o[hashProperty]=hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};}();




return Map;}(
Function('return this')());
});
__d('guid',function(global, require, module, exports) {  function 

























guid(){
return 'f'+(Math.random()*(1<<30)).toString(16).replace('.','');}


module.exports=guid;
});
__d('isNode',function(global, require, module, exports) {  function 















isNode(object){
return !!(object&&(
typeof Node==='function'?object instanceof Node:
typeof object==='object'&&
typeof object.nodeType==='number'&&
typeof object.nodeName==='string'));}



module.exports=isNode;
});
__d('toIterator',function(global, require, module, exports) {  var 






























KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol==='function'?
Symbol.iterator:
'@@iterator';

var toIterator=function(){
if(!(Array.prototype[ITERATOR_SYMBOL]&&
String.prototype[ITERATOR_SYMBOL])){

return function(){var 
ArrayIterator=function(){

function ArrayIterator(array,kind){babelHelpers.classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject=array;
this._kind=kind;
this._nextIndex=0;}babelHelpers.createClass(ArrayIterator,[{key:'next',value:function next()



{
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject==null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index>=len){
this._iteratedObject=undefined;
return createIterResultObject(undefined,true);}


this._nextIndex=index+1;

if(kind===KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind===KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind===KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;}();var 



StringIterator=function(){

function StringIterator(string){babelHelpers.classCallCheck(this,StringIterator);
if(typeof string!=='string'){
throw new TypeError('Object is not a string');}

this._iteratedString=string;
this._nextIndex=0;}babelHelpers.createClass(StringIterator,[{key:'next',value:function next()



{
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString==null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index>=len){
this._iteratedString=undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first<0xD800||first>0xDBFF||index+1===len){
ret=s[index];}else 
{
var second=s.charCodeAt(index+1);
if(second<0xDC00||second>0xDFFF){
ret=s[index];}else 
{
ret=s[index]+s[index+1];}}



this._nextIndex=index+ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;}();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object==='string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind||KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};}();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}}();








babelHelpers.extends(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports=toIterator;
});
__d('_shouldPolyfillES6Collection',function(global, require, module, exports) {  function 
























shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection==null){
return true;}






if(typeof global.Symbol!=='function'){
return true;}


var proto=Collection.prototype;




return Collection==null||
typeof Collection!=='function'||
typeof proto.clear!=='function'||
new Collection().size!==0||
typeof proto.keys!=='function'||
typeof proto.forEach!=='function';}


module.exports=shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var UIManager=require('UIManager');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to,blockNativeResponder){
if(to!==null){
UIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to),
blockNativeResponder);}else 

{
UIManager.clearJSResponder();}}};




module.exports=ReactNativeGlobalResponderHandler;
});
__d('ResponderEventPlugin',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID,blockNativeResponder){
var oldResponderID=responderID;
responderID=nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler!==null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID,
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType===EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles.getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom===responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent,
nativeEventTarget);

shouldSetEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID||wantsResponderID===responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent,
nativeEventTarget);

grantEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent)===true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent,
nativeEventTarget);

terminationRequestEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent)||
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent,
nativeEventTarget);

terminateEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted=accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID,blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent,
nativeEventTarget);

rejectEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted=accumulate(extracted,rejectEvent);}}else 

{
extracted=accumulate(extracted,grantEvent);
changeResponder(wantsResponderID,blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent){
return topLevelTargetID&&(



topLevelType===EventConstants.topLevelTypes.topScroll&&
!nativeEvent.responderIgnoreScroll||
trackedTouchCount>0&&
topLevelType===EventConstants.topLevelTypes.topSelectionChange||
isStartish(topLevelType)||
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches||touches.length===0){
return true;}

for(var i=0;i<touches.length;i++){
var activeTouch=touches[i];
var target=activeTouch.target;
if(target!==null&&target!==undefined&&target!==0){

var isAncestor=
ReactInstanceHandles.isAncestorIDOf(
responderID,
EventPluginUtils.getID(target));

if(isAncestor){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
if(isStartish(topLevelType)){
trackedTouchCount+=1;}else 
if(isEndish(topLevelType)){
trackedTouchCount-=1;
invariant(
trackedTouchCount>=0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent,nativeEventTarget);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent)?
setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget):
null;










var isResponderTouchStart=responderID&&isStartish(topLevelType);
var isResponderTouchMove=responderID&&isMoveish(topLevelType);
var isResponderTouchEnd=responderID&&isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(
incrementalTouch,
responderID,
nativeEvent,
nativeEventTarget);

gesture.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted=accumulate(extracted,gesture);}


var isResponderTerminate=
responderID&&
topLevelType===EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID&&
!isResponderTerminate&&
isEndish(topLevelType)&&
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent,nativeEventTarget);
finalEvent.touchHistory=ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted=accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler&&
numberActiveTouches!==previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches=numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler=GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler=GlobalInteractionHandler;}}};




module.exports=ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',function(global, require, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports=ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',function(global, require, module, exports) {  'use strict';












var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp||touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive=true;
touchTrack.startTimeStamp=timestampForTouch(touch);
touchTrack.startPageX=touch.pageX;
touchTrack.startPageY=touch.pageY;
touchTrack.currentPageX=touch.pageX;
touchTrack.currentPageY=touch.pageY;
touchTrack.currentTimeStamp=timestampForTouch(touch);
touchTrack.previousPageX=touch.pageX;
touchTrack.previousPageY=touch.pageY;
touchTrack.previousTimeStamp=timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier!=null,'Touch object is missing identifier');
if(identifier>MAX_TOUCH_BANK){
console.warn(
'Touch identifier '+identifier+' is greater than maximum '+
'supported '+MAX_TOUCH_BANK+' which causes performance issues '+
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(touchTrack){
reinitializeTouchTrack(touchTrack,touch);}else 
{
touchBank[touch.identifier]=initializeTouchData(touch);}

touchHistory.mostRecentTimeStamp=timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive=true;
touchTrack.previousPageX=touchTrack.currentPageX;
touchTrack.previousPageY=touchTrack.currentPageY;
touchTrack.previousTimeStamp=touchTrack.currentTimeStamp;
touchTrack.currentPageX=touch.pageX;
touchTrack.currentPageY=touch.pageY;
touchTrack.currentTimeStamp=timestampForTouch(touch);
touchHistory.mostRecentTimeStamp=timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX=touchTrack.currentPageX;
touchTrack.previousPageY=touchTrack.currentPageY;
touchTrack.previousTimeStamp=touchTrack.currentTimeStamp;
touchTrack.currentPageX=touch.pageX;
touchTrack.currentPageY=touch.pageY;
touchTrack.currentTimeStamp=timestampForTouch(touch);
touchTrack.touchActive=false;
touchHistory.mostRecentTimeStamp=timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches=nativeEvent.touches.length;
if(touchHistory.numberActiveTouches===1){
touchHistory.indexOfSingleActiveTouch=nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches=nativeEvent.touches.length;
if(touchHistory.numberActiveTouches===1){
for(var i=0;i<touchBank.length;i++){
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck!=null&&touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch=i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData!=null&&!!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports=ResponderTouchHistoryStore;
});
__d('accumulate',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next!=null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current==null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports=accumulate;
});
__d('keyOf',function(global, require, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj){
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports=keyOf;
});
__d('UniversalWorkerNodeHandle',function(global, require, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle!==undefined&&nodeHandle!==null&&nodeHandle!==0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports=UniversalWorkerNodeHandle;
});
__d('RCTEventEmitter',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');

BatchedBridge.registerCallableModule(
'RCTEventEmitter',
ReactNativeEventEmitter);



module.exports=ReactNativeEventEmitter;
});
__d('ReactNativeEventEmitter',function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i<indices.length;i++){
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i<indices.length;i++){
var index=indices[i];
rippedOut.push(touches[index]);
temp[index]=null;}

var fillAt=0;
for(var j=0;j<temp.length;j++){
var cur=temp[j];
if(cur!==null){
temp[fillAt++]=cur;}}


temp.length=fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam||EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent,
nativeEvent.target);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType===topLevelTypes.topTouchEnd||
eventTopLevelType===topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj<changedTouches.length;jj++){
var touch=changedTouches[jj];


touch.changedTouches=changedTouches;
touch.touches=touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target!==null&&target!==undefined){
if(target<ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID=NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports=ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue(false);}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

runEventQueueInBatch(events);}};



module.exports=ReactEventEmitterMixin;
});
__d('RCTLog',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');

var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
fatal:'error'};var 


RCTLog=function(){function RCTLog(){babelHelpers.classCallCheck(this,RCTLog);}babelHelpers.createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:function logIfNoNativeHook()

{
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "'+level+'" not one of '+Object.keys(levelsMap));

if(typeof global.nativeLoggingHook==='undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;}();



BatchedBridge.registerCallableModule(
'RCTLog',
RCTLog);


module.exports=RCTLog;
});
__d('View',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var UIManager=require('UIManager');
var ViewStylePropTypes=require('ViewStylePropTypes');

var requireNativeComponent=require('requireNativeComponent');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];


var AccessibilityComponentType=[
'none',
'button',
'radiobutton_checked',
'radiobutton_unchecked'];






















var View=React.createClass({displayName:'View',
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


statics:{
AccessibilityTraits:AccessibilityTraits,
AccessibilityComponentType:AccessibilityComponentType},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,






accessibilityComponentType:PropTypes.oneOf(AccessibilityComponentType),








accessibilityLiveRegion:PropTypes.oneOf([
'none',
'polite',
'assertive']),


















importantForAccessibility:PropTypes.oneOf([
'auto',
'yes',
'no',
'no-hide-descendants']),







accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,





testID:PropTypes.string,






onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,
onMoveShouldSetResponder:PropTypes.func,
onMoveShouldSetResponderCapture:PropTypes.func,










onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,














renderToHardwareTextureAndroid:PropTypes.bool,














shouldRasterizeIOS:PropTypes.bool,








collapsable:PropTypes.bool,






















needsOffscreenAlphaCompositing:PropTypes.bool},


render:function(){




return React.createElement(RCTView,this.props);}});



var RCTView=requireNativeComponent('RCTView',View,{
nativeOnly:{
nativeBackgroundAndroid:true}});



if(__DEV__){
var viewConfig=UIManager.viewConfigs&&UIManager.viewConfigs.RCTView||{};
for(var prop in viewConfig.nativeProps){
var viewAny=View;
if(!viewAny.propTypes[prop]&&!ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `'+prop+'`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport=View;}


module.exports=ViewToExport;
});
__d('ReactNativeStyleAttributes',function(global, require, module, exports) {  'use strict';













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var processColor=require('processColor');
var processTransform=require('processTransform');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=babelHelpers.extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transform={process:processTransform};
ReactNativeStyleAttributes.transformMatrix={diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset={diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix='decomposedMatrix';

var colorAttributes={process:processColor};
ReactNativeStyleAttributes.backgroundColor=colorAttributes;
ReactNativeStyleAttributes.borderBottomColor=colorAttributes;
ReactNativeStyleAttributes.borderColor=colorAttributes;
ReactNativeStyleAttributes.borderLeftColor=colorAttributes;
ReactNativeStyleAttributes.borderRightColor=colorAttributes;
ReactNativeStyleAttributes.borderTopColor=colorAttributes;
ReactNativeStyleAttributes.color=colorAttributes;
ReactNativeStyleAttributes.shadowColor=colorAttributes;
ReactNativeStyleAttributes.textDecorationColor=colorAttributes;
ReactNativeStyleAttributes.tintColor=colorAttributes;

module.exports=ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',function(global, require, module, exports) {  'use strict';












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=babelHelpers.extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports=ImageStylePropTypes;
});
__d('ImageResizeMode',function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports=ImageResizeMode;
});
__d('LayoutPropTypes',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');













var LayoutPropTypes={
width:ReactPropTypes.number,
maxWidth:ReactPropTypes.number,
minWidth:ReactPropTypes.number,
height:ReactPropTypes.number,
maxHeight:ReactPropTypes.number,
minHeight:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports=LayoutPropTypes;
});
__d('TransformPropTypes',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var ArrayOfNumberPropType=ReactPropTypes.arrayOf(ReactPropTypes.number);

var TransformMatrixPropType=function(
props,
propName,
componentName)
{
if(props.transform&&props.transformMatrix){
return new Error(
'transformMatrix and transform styles cannot be used on the same '+
'component');}


return ArrayOfNumberPropType(props,propName,componentName);};


var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({perspective:ReactPropTypes.number}),
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({rotateX:ReactPropTypes.string}),
ReactPropTypes.shape({rotateY:ReactPropTypes.string}),
ReactPropTypes.shape({rotateZ:ReactPropTypes.string}),
ReactPropTypes.shape({scale:ReactPropTypes.number}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number}),
ReactPropTypes.shape({skewX:ReactPropTypes.string}),
ReactPropTypes.shape({skewY:ReactPropTypes.string})])),


transformMatrix:TransformMatrixPropType,


scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
rotation:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports=TransformPropTypes;
});
__d('TextStylePropTypes',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=babelHelpers.extends(Object.create(ViewStylePropTypes),{
color:ReactPropTypes.string,
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontStyle:ReactPropTypes.oneOf(['normal','italic']),





fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),




letterSpacing:ReactPropTypes.number,
lineHeight:ReactPropTypes.number,



textAlign:ReactPropTypes.oneOf(
['auto','left','right','center','justify']),




textDecorationLine:ReactPropTypes.oneOf(
['none','underline','line-through','underline line-through']),




textDecorationStyle:ReactPropTypes.oneOf(
['solid','double','dotted','dashed']),




textDecorationColor:ReactPropTypes.string,



writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl'])});




var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii<unsupportedProps.length;ii++){
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports=TextStylePropTypes;
});
__d('ViewStylePropTypes',function(global, require, module, exports) {  'use strict';












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=babelHelpers.extends({},
LayoutPropTypes,
TransformPropTypes,{
backfaceVisibility:ReactPropTypes.oneOf(['visible','hidden']),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
borderStyle:ReactPropTypes.oneOf(['solid','dotted','dashed']),
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number,







elevation:ReactPropTypes.number});


module.exports=ViewStylePropTypes;
});
__d('matricesDiffer',function(global, require, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one===two){
return false;}

return !one||!two||
one[12]!==two[12]||
one[13]!==two[13]||
one[14]!==two[14]||
one[5]!==two[5]||
one[10]!==two[10]||
one[1]!==two[1]||
one[2]!==two[2]||
one[3]!==two[3]||
one[4]!==two[4]||
one[6]!==two[6]||
one[7]!==two[7]||
one[8]!==two[8]||
one[9]!==two[9]||
one[11]!==two[11]||
one[15]!==two[15];};


module.exports=matricesDiffer;
});
__d('processColor',function(global, require, module, exports) {  'use strict';











var tinycolor=require('tinycolor');
var Platform=require('Platform');


function processColor(color){
if(!color||typeof color==='number'){
return color;}else 
if(color instanceof Array){
return color.map(processColor);}else 
{
var color=tinycolor(color);
if(color.isValid()){
var rgb=color.toRgb();


var colorInt=Math.round(rgb.a*255)*(1<<24)+rgb.r*(1<<16)+rgb.g*(1<<8)+rgb.b;
if(Platform.OS==='android'){




colorInt=colorInt|0x0;}

return colorInt;}

return 0;}}



module.exports=processColor;
});
__d('tinycolor',function(global, require, module, exports) {  'use strict';









var trimLeft=/^[\s,#]+/,
trimRight=/\s+$/,
tinyCounter=0,
mathRound=Math.round,
mathMin=Math.min,
mathMax=Math.max;

function tinycolor(color,opts){

if(!(this instanceof tinycolor)){
return new tinycolor(color,opts);}


color=color?color:'';
opts=opts||{};

var rgb=inputToRGB(color);
this._r=rgb.r,
this._g=rgb.g,
this._b=rgb.b,
this._a=rgb.a,

this._ok=rgb.ok;}


tinycolor.prototype={
toRgb:function(){
return {r:mathRound(this._r),g:mathRound(this._g),b:mathRound(this._b),a:this._a};},

isValid:function(){
return this._ok;}};



















function inputToRGB(color){
var rgb={r:0,g:0,b:0};
var a=1;
var ok=false;
var format=false;

if(typeof color=="string"){
color=stringInputToObject(color);}


if(typeof color=="object"){
if(color.hasOwnProperty("r")&&color.hasOwnProperty("g")&&color.hasOwnProperty("b")){
rgb=rgbToRgb(color.r,color.g,color.b);
ok=true;}else 

if(color.hasOwnProperty("h")&&color.hasOwnProperty("s")&&color.hasOwnProperty("v")){
color.s=convertToPercentage(color.s);
color.v=convertToPercentage(color.v);
rgb=hsvToRgb(color.h,color.s,color.v);
ok=true;}else 

if(color.hasOwnProperty("h")&&color.hasOwnProperty("s")&&color.hasOwnProperty("l")){
color.s=convertToPercentage(color.s);
color.l=convertToPercentage(color.l);
rgb=hslToRgb(color.h,color.s,color.l);
ok=true;}


if(color.hasOwnProperty("a")){
a=color.a;}}



a=boundAlpha(a);

return {
ok:ok,
r:mathMin(255,mathMax(rgb.r,0)),
g:mathMin(255,mathMax(rgb.g,0)),
b:mathMin(255,mathMax(rgb.b,0)),
a:a};}















function rgbToRgb(r,g,b){
return {
r:bound01(r,255)*255,
g:bound01(g,255)*255,
b:bound01(b,255)*255};}







function hslToRgb(h,s,l){
var r,g,b;

h=bound01(h,360);
s=bound01(s,100);
l=bound01(l,100);

function hue2rgb(p,q,t){
if(t<0)t+=1;
if(t>1)t-=1;
if(t<1/6)return p+(q-p)*6*t;
if(t<1/2)return q;
if(t<2/3)return p+(q-p)*(2/3-t)*6;
return p;}


if(s===0){
r=g=b=l;}else 

{
var q=l<0.5?l*(1+s):l+s-l*s;
var p=2*l-q;
r=hue2rgb(p,q,h+1/3);
g=hue2rgb(p,q,h);
b=hue2rgb(p,q,h-1/3);}


return {r:r*255,g:g*255,b:b*255};}






function hsvToRgb(h,s,v){
h=bound01(h,360)*6;
s=bound01(s,100);
v=bound01(v,100);

var i=math.floor(h),
f=h-i,
p=v*(1-s),
q=v*(1-f*s),
t=v*(1-(1-f)*s),
mod=i%6,
r=[v,q,p,p,t,v][mod],
g=[t,v,v,q,p,p][mod],
b=[p,p,t,v,v,q][mod];

return {r:r*255,g:g*255,b:b*255};}





var names=tinycolor.names={
aliceblue:"f0f8ff",
antiquewhite:"faebd7",
aqua:"0ff",
aquamarine:"7fffd4",
azure:"f0ffff",
beige:"f5f5dc",
bisque:"ffe4c4",
black:"000",
blanchedalmond:"ffebcd",
blue:"00f",
blueviolet:"8a2be2",
brown:"a52a2a",
burlywood:"deb887",
burntsienna:"ea7e5d",
cadetblue:"5f9ea0",
chartreuse:"7fff00",
chocolate:"d2691e",
coral:"ff7f50",
cornflowerblue:"6495ed",
cornsilk:"fff8dc",
crimson:"dc143c",
cyan:"0ff",
darkblue:"00008b",
darkcyan:"008b8b",
darkgoldenrod:"b8860b",
darkgray:"a9a9a9",
darkgreen:"006400",
darkgrey:"a9a9a9",
darkkhaki:"bdb76b",
darkmagenta:"8b008b",
darkolivegreen:"556b2f",
darkorange:"ff8c00",
darkorchid:"9932cc",
darkred:"8b0000",
darksalmon:"e9967a",
darkseagreen:"8fbc8f",
darkslateblue:"483d8b",
darkslategray:"2f4f4f",
darkslategrey:"2f4f4f",
darkturquoise:"00ced1",
darkviolet:"9400d3",
deeppink:"ff1493",
deepskyblue:"00bfff",
dimgray:"696969",
dimgrey:"696969",
dodgerblue:"1e90ff",
firebrick:"b22222",
floralwhite:"fffaf0",
forestgreen:"228b22",
fuchsia:"f0f",
gainsboro:"dcdcdc",
ghostwhite:"f8f8ff",
gold:"ffd700",
goldenrod:"daa520",
gray:"808080",
green:"008000",
greenyellow:"adff2f",
grey:"808080",
honeydew:"f0fff0",
hotpink:"ff69b4",
indianred:"cd5c5c",
indigo:"4b0082",
ivory:"fffff0",
khaki:"f0e68c",
lavender:"e6e6fa",
lavenderblush:"fff0f5",
lawngreen:"7cfc00",
lemonchiffon:"fffacd",
lightblue:"add8e6",
lightcoral:"f08080",
lightcyan:"e0ffff",
lightgoldenrodyellow:"fafad2",
lightgray:"d3d3d3",
lightgreen:"90ee90",
lightgrey:"d3d3d3",
lightpink:"ffb6c1",
lightsalmon:"ffa07a",
lightseagreen:"20b2aa",
lightskyblue:"87cefa",
lightslategray:"789",
lightslategrey:"789",
lightsteelblue:"b0c4de",
lightyellow:"ffffe0",
lime:"0f0",
limegreen:"32cd32",
linen:"faf0e6",
magenta:"f0f",
maroon:"800000",
mediumaquamarine:"66cdaa",
mediumblue:"0000cd",
mediumorchid:"ba55d3",
mediumpurple:"9370db",
mediumseagreen:"3cb371",
mediumslateblue:"7b68ee",
mediumspringgreen:"00fa9a",
mediumturquoise:"48d1cc",
mediumvioletred:"c71585",
midnightblue:"191970",
mintcream:"f5fffa",
mistyrose:"ffe4e1",
moccasin:"ffe4b5",
navajowhite:"ffdead",
navy:"000080",
oldlace:"fdf5e6",
olive:"808000",
olivedrab:"6b8e23",
orange:"ffa500",
orangered:"ff4500",
orchid:"da70d6",
palegoldenrod:"eee8aa",
palegreen:"98fb98",
paleturquoise:"afeeee",
palevioletred:"db7093",
papayawhip:"ffefd5",
peachpuff:"ffdab9",
peru:"cd853f",
pink:"ffc0cb",
plum:"dda0dd",
powderblue:"b0e0e6",
purple:"800080",
rebeccapurple:"663399",
red:"f00",
rosybrown:"bc8f8f",
royalblue:"4169e1",
saddlebrown:"8b4513",
salmon:"fa8072",
sandybrown:"f4a460",
seagreen:"2e8b57",
seashell:"fff5ee",
sienna:"a0522d",
silver:"c0c0c0",
skyblue:"87ceeb",
slateblue:"6a5acd",
slategray:"708090",
slategrey:"708090",
snow:"fffafa",
springgreen:"00ff7f",
steelblue:"4682b4",
tan:"d2b48c",
teal:"008080",
thistle:"d8bfd8",
tomato:"ff6347",
turquoise:"40e0d0",
violet:"ee82ee",
wheat:"f5deb3",
white:"fff",
whitesmoke:"f5f5f5",
yellow:"ff0",
yellowgreen:"9acd32"};



function boundAlpha(a){
a=parseFloat(a);

if(isNaN(a)||a<0||a>1){
a=1;}


return a;}



function bound01(n,max){
if(isOnePointZero(n)){n="100%";}

var processPercent=isPercentage(n);
n=mathMin(max,mathMax(0,parseFloat(n)));


if(processPercent){
n=parseInt(n*max,10)/100;}



if(Math.abs(n-max)<0.000001){
return 1;}



return n%max/parseFloat(max);}



function parseIntFromHex(val){
return parseInt(val,16);}




function isOnePointZero(n){
return typeof n=="string"&&n.indexOf('.')!=-1&&parseFloat(n)===1;}



function isPercentage(n){
return typeof n==="string"&&n.indexOf('%')!=-1;}



function convertToPercentage(n){
if(n<=1){
n=n*100+"%";}


return n;}



function convertHexToDecimal(h){
return parseIntFromHex(h)/255;}


var matchers=function(){

var CSS_INTEGER="[-\\+]?\\d+%?";


var CSS_NUMBER="[-\\+]?\\d*\\.\\d+%?";


var CSS_UNIT="(?:"+CSS_NUMBER+")|(?:"+CSS_INTEGER+")";




var PERMISSIVE_MATCH3="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?";
var PERMISSIVE_MATCH4="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?";

return {
rgb:new RegExp("rgb"+PERMISSIVE_MATCH3),
rgba:new RegExp("rgba"+PERMISSIVE_MATCH4),
hsl:new RegExp("hsl"+PERMISSIVE_MATCH3),
hsla:new RegExp("hsla"+PERMISSIVE_MATCH4),
hsv:new RegExp("hsv"+PERMISSIVE_MATCH3),
hsva:new RegExp("hsva"+PERMISSIVE_MATCH4),
hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
hex4:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};}();






function stringInputToObject(color){
color=color.replace(trimLeft,'').replace(trimRight,'').toLowerCase();
var named=false;
if(names[color]){
color=names[color];
named=true;}else 

if(color=='transparent'){
return {r:0,g:0,b:0,a:0,format:"name"};}






var match;
if(match=matchers.rgb.exec(color)){
return {r:match[1],g:match[2],b:match[3]};}

if(match=matchers.rgba.exec(color)){
return {r:match[1],g:match[2],b:match[3],a:match[4]};}

if(match=matchers.hsl.exec(color)){
return {h:match[1],s:match[2],l:match[3]};}

if(match=matchers.hsla.exec(color)){
return {h:match[1],s:match[2],l:match[3],a:match[4]};}

if(match=matchers.hsv.exec(color)){
return {h:match[1],s:match[2],v:match[3]};}

if(match=matchers.hsva.exec(color)){
return {h:match[1],s:match[2],v:match[3],a:match[4]};}

if(match=matchers.hex8.exec(color)){
return {
r:parseIntFromHex(match[1]),
g:parseIntFromHex(match[2]),
b:parseIntFromHex(match[3]),
a:convertHexToDecimal(match[4]),
format:named?"name":"hex"};}


if(match=matchers.hex6.exec(color)){
return {
r:parseIntFromHex(match[1]),
g:parseIntFromHex(match[2]),
b:parseIntFromHex(match[3]),
format:named?"name":"hex"};}


if(match=matchers.hex4.exec(color)){
return {
r:parseIntFromHex(match[1]+''+match[1]),
g:parseIntFromHex(match[2]+''+match[2]),
b:parseIntFromHex(match[3]+''+match[3]),
a:convertHexToDecimal(match[4]+''+match[4]),
format:named?"name":"hex"};}


if(match=matchers.hex3.exec(color)){
return {
r:parseIntFromHex(match[1]+''+match[1]),
g:parseIntFromHex(match[2]+''+match[2]),
b:parseIntFromHex(match[3]+''+match[3]),
format:named?"name":"hex"};}



return false;}


module.exports=tinycolor;
});
__d('processTransform',function(global, require, module, exports) {  'use strict';












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var invariant=require('invariant');
var stringifySafe=require('stringifySafe');









function processTransform(transform){
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'perspective':
_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);
break;
case 'rotateX':
_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);
break;
case 'rotateY':
_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);
break;
case 'rotate':
case 'rotateZ':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2]||0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
case 'skewX':
_multiplyTransform(result,MatrixMath.reuseSkewXCommand,[_convertToRadians(value)]);
break;
case 'skewY':
_multiplyTransform(result,MatrixMath.reuseSkewYCommand,[_convertToRadians(value)]);
break;
default:
throw new Error('Invalid transform name: '+key);}});







if(Platform.OS==='android'){
return MatrixMath.decomposeMatrix(result);}

return result;}





function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad')>-1?floatValue:floatValue*Math.PI/180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an Animated.Value to a normal component. '+
'You need to wrap that component in an Animated. For example, '+
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key)!==-1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length===9||value.length===16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). '+
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotateX':
case 'rotateY':
case 'rotateZ':
case 'rotate':
case 'skewX':
case 'skewY':
invariant(
typeof value==='string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg')>-1||value.indexOf('rad')>-1,
'Rotate transform must be expressed in degrees (deg) or radians '+
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value==='number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports=processTransform;
});
__d('MatrixMath',function(global, require, module, exports) {  'use strict';








var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createOrthographic:function(left,right,bottom,top,near,far){
var a=2/(right-left);
var b=2/(top-bottom);
var c=-2/(far-near);

var tx=-(right+left)/(right-left);
var ty=-(top+bottom)/(top-bottom);
var tz=-(far+near)/(far-near);

return [
a,0,0,0,
0,b,0,0,
0,0,c,0,
tx,ty,tz,1];},



createFrustum:function(left,right,bottom,top,near,far){
var r_width=1/(right-left);
var r_height=1/(top-bottom);
var r_depth=1/(near-far);
var x=2*(near*r_width);
var y=2*(near*r_height);
var A=(right+left)*r_width;
var B=(top+bottom)*r_height;
var C=(far+near)*r_depth;
var D=2*(far*near*r_depth);
return [
x,0,0,0,
0,y,0,0,
A,B,C,-1,
0,0,D,0];},



createPerspective:function(fovInRadians,aspect,near,far){
var h=1/Math.tan(fovInRadians);
var r_depth=1/(near-far);
var C=(far+near)*r_depth;
var D=2*(far*near*r_depth);
return [
h/aspect,0,0,0,
0,h,0,0,
0,0,C,-1,
0,0,D,0];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12]=x;
matrixCommand[13]=y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12]=x;
matrixCommand[13]=y;
matrixCommand[14]=z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0]=factor;
matrixCommand[5]=factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0]=x;
matrixCommand[5]=y;
matrixCommand[10]=z;},


reusePerspectiveCommand:function(matrixCommand,p){
matrixCommand[11]=-1/p;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0]=factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5]=factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10]=factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5]=Math.cos(radians);
matrixCommand[6]=Math.sin(radians);
matrixCommand[9]=-Math.sin(radians);
matrixCommand[10]=Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0]=Math.cos(amount);
matrixCommand[2]=-Math.sin(amount);
matrixCommand[8]=Math.sin(amount);
matrixCommand[10]=Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0]=Math.cos(radians);
matrixCommand[1]=Math.sin(radians);
matrixCommand[4]=-Math.sin(radians);
matrixCommand[5]=Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


reuseSkewXCommand:function(matrixCommand,radians){
matrixCommand[4]=Math.sin(radians);
matrixCommand[5]=Math.cos(radians);},


reuseSkewYCommand:function(matrixCommand,radians){
matrixCommand[0]=Math.cos(radians);
matrixCommand[1]=Math.sin(radians);},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0]=b0*a00+b1*a10+b2*a20+b3*a30;
out[1]=b0*a01+b1*a11+b2*a21+b3*a31;
out[2]=b0*a02+b1*a12+b2*a22+b3*a32;
out[3]=b0*a03+b1*a13+b2*a23+b3*a33;

b0=b[4];b1=b[5];b2=b[6];b3=b[7];
out[4]=b0*a00+b1*a10+b2*a20+b3*a30;
out[5]=b0*a01+b1*a11+b2*a21+b3*a31;
out[6]=b0*a02+b1*a12+b2*a22+b3*a32;
out[7]=b0*a03+b1*a13+b2*a23+b3*a33;

b0=b[8];b1=b[9];b2=b[10];b3=b[11];
out[8]=b0*a00+b1*a10+b2*a20+b3*a30;
out[9]=b0*a01+b1*a11+b2*a21+b3*a31;
out[10]=b0*a02+b1*a12+b2*a22+b3*a32;
out[11]=b0*a03+b1*a13+b2*a23+b3*a33;

b0=b[12];b1=b[13];b2=b[14];b3=b[15];
out[12]=b0*a00+b1*a10+b2*a20+b3*a30;
out[13]=b0*a01+b1*a11+b2*a21+b3*a31;
out[14]=b0*a02+b1*a12+b2*a22+b3*a32;
out[15]=b0*a03+b1*a13+b2*a23+b3*a33;},


determinant:function(matrix){var _matrix=babelHelpers.slicedToArray(





matrix,16);var m00=_matrix[0];var m01=_matrix[1];var m02=_matrix[2];var m03=_matrix[3];var m10=_matrix[4];var m11=_matrix[5];var m12=_matrix[6];var m13=_matrix[7];var m20=_matrix[8];var m21=_matrix[9];var m22=_matrix[10];var m23=_matrix[11];var m30=_matrix[12];var m31=_matrix[13];var m32=_matrix[14];var m33=_matrix[15];
return (
m03*m12*m21*m30-m02*m13*m21*m30-
m03*m11*m22*m30+m01*m13*m22*m30+
m02*m11*m23*m30-m01*m12*m23*m30-
m03*m12*m20*m31+m02*m13*m20*m31+
m03*m10*m22*m31-m00*m13*m22*m31-
m02*m10*m23*m31+m00*m12*m23*m31+
m03*m11*m20*m32-m01*m13*m20*m32-
m03*m10*m21*m32+m00*m13*m21*m32+
m01*m10*m23*m32-m00*m11*m23*m32-
m02*m11*m20*m33+m01*m12*m20*m33+
m02*m10*m21*m33-m00*m12*m21*m33-
m01*m10*m22*m33+m00*m11*m22*m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var _matrix2=babelHelpers.slicedToArray(






matrix,16);var m00=_matrix2[0];var m01=_matrix2[1];var m02=_matrix2[2];var m03=_matrix2[3];var m10=_matrix2[4];var m11=_matrix2[5];var m12=_matrix2[6];var m13=_matrix2[7];var m20=_matrix2[8];var m21=_matrix2[9];var m22=_matrix2[10];var m23=_matrix2[11];var m30=_matrix2[12];var m31=_matrix2[13];var m32=_matrix2[14];var m33=_matrix2[15];
return [
(m12*m23*m31-m13*m22*m31+m13*m21*m32-m11*m23*m32-m12*m21*m33+m11*m22*m33)/det,
(m03*m22*m31-m02*m23*m31-m03*m21*m32+m01*m23*m32+m02*m21*m33-m01*m22*m33)/det,
(m02*m13*m31-m03*m12*m31+m03*m11*m32-m01*m13*m32-m02*m11*m33+m01*m12*m33)/det,
(m03*m12*m21-m02*m13*m21-m03*m11*m22+m01*m13*m22+m02*m11*m23-m01*m12*m23)/det,
(m13*m22*m30-m12*m23*m30-m13*m20*m32+m10*m23*m32+m12*m20*m33-m10*m22*m33)/det,
(m02*m23*m30-m03*m22*m30+m03*m20*m32-m00*m23*m32-m02*m20*m33+m00*m22*m33)/det,
(m03*m12*m30-m02*m13*m30-m03*m10*m32+m00*m13*m32+m02*m10*m33-m00*m12*m33)/det,
(m02*m13*m20-m03*m12*m20+m03*m10*m22-m00*m13*m22-m02*m10*m23+m00*m12*m23)/det,
(m11*m23*m30-m13*m21*m30+m13*m20*m31-m10*m23*m31-m11*m20*m33+m10*m21*m33)/det,
(m03*m21*m30-m01*m23*m30-m03*m20*m31+m00*m23*m31+m01*m20*m33-m00*m21*m33)/det,
(m01*m13*m30-m03*m11*m30+m03*m10*m31-m00*m13*m31-m01*m10*m33+m00*m11*m33)/det,
(m03*m11*m20-m01*m13*m20-m03*m10*m21+m00*m13*m21+m01*m10*m23-m00*m11*m23)/det,
(m12*m21*m30-m11*m22*m30-m12*m20*m31+m10*m22*m31+m11*m20*m32-m10*m21*m32)/det,
(m01*m22*m30-m02*m21*m30+m02*m20*m31-m00*m22*m31-m01*m20*m32+m00*m21*m32)/det,
(m02*m11*m30-m01*m12*m30-m02*m10*m31+m00*m12*m31+m01*m10*m32-m00*m11*m32)/det,
(m01*m12*m20-m02*m11*m20+m02*m10*m21-m00*m12*m21-m01*m10*m22+m00*m11*m22)/det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var _v=babelHelpers.slicedToArray(
v,4);var vx=_v[0];var vy=_v[1];var vz=_v[2];var vw=_v[3];
return [
vx*m[0]+vy*m[4]+vz*m[8]+vw*m[12],
vx*m[1]+vy*m[5]+vz*m[9]+vw*m[13],
vx*m[2]+vy*m[6]+vz*m[10]+vw*m[14],
vx*m[3]+vy*m[7]+vz*m[11]+vw*m[15]];},






v3Length:function(a){
return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1/(v3Length||MatrixMath.v3Length(vector));
return [
vector[0]*im,
vector[1]*im,
vector[2]*im];},







v3Dot:function(a,b){
return a[0]*b[0]+
a[1]*b[1]+
a[2]*b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale*a[0]+bScale*b[0],
aScale*a[1]+bScale*b[1],
aScale*a[2]+bScale*b[2]];},







v3Cross:function(a,b){
return [
a[1]*b[2]-a[2]*b[1],
a[2]*b[0]-a[0]*b[2],
a[0]*b[1]-a[1]*b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var _q=babelHelpers.slicedToArray(
q,4);var qx=_q[0];var qy=_q[1];var qz=_q[2];var qw=_q[3];
var qw2=qw*qw;
var qx2=qx*qx;
var qy2=qy*qy;
var qz2=qz*qz;
var test=qx*qy+qz*qw;
var unit=qw2+qx2+qy2+qz2;
var conv=180/Math.PI;

if(test>0.49999*unit){
return [0,2*Math.atan2(qx,qw)*conv,90];}

if(test<-0.49999*unit){
return [0,-2*Math.atan2(qx,qw)*conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2*qx*qw-2*qy*qz,1-2*qx2-2*qz2)*conv),

MatrixMath.roundTo3Places(
Math.atan2(2*qy*qw-2*qx*qz,1-2*qy2-2*qz2)*conv),

MatrixMath.roundTo3Places(
Math.asin(2*qx*qy+2*qz*qw)*conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0]+'e'+(arr[1]?+arr[1]-3:3))*0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length===16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i<4;i++){
matrix.push([]);
for(var j=0;j<4;j++){
var value=transformMatrix[i*4+j]/transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j===3?0:value);}}


perspectiveMatrix[15]=1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3]!==0||matrix[1][3]!==0||matrix[2][3]!==0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0]=perspective[1]=perspective[2]=0;
perspective[3]=1;}



for(var i=0;i<3;i++){
translation[i]=matrix[3][i];}




var row=[];
for(i=0;i<3;i++){
row[i]=[
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0]=MatrixMath.v3Length(row[0]);
row[0]=MatrixMath.v3Normalize(row[0],scale[0]);


skew[0]=MatrixMath.v3Dot(row[0],row[1]);
row[1]=MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0]=MatrixMath.v3Dot(row[0],row[1]);
row[1]=MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1]=MatrixMath.v3Length(row[1]);
row[1]=MatrixMath.v3Normalize(row[1],scale[1]);
skew[0]/=scale[1];


skew[1]=MatrixMath.v3Dot(row[0],row[2]);
row[2]=MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2]=MatrixMath.v3Dot(row[1],row[2]);
row[2]=MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2]=MatrixMath.v3Length(row[2]);
row[2]=MatrixMath.v3Normalize(row[2],scale[2]);
skew[1]/=scale[2];
skew[2]/=scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3)<0){
for(i=0;i<3;i++){
scale[i]*=-1;
row[i][0]*=-1;
row[i][1]*=-1;
row[i][2]*=-1;}}




quaternion[0]=
0.5*Math.sqrt(Math.max(1+row[0][0]-row[1][1]-row[2][2],0));
quaternion[1]=
0.5*Math.sqrt(Math.max(1-row[0][0]+row[1][1]-row[2][2],0));
quaternion[2]=
0.5*Math.sqrt(Math.max(1-row[0][0]-row[1][1]+row[2][2],0));
quaternion[3]=
0.5*Math.sqrt(Math.max(1+row[0][0]+row[1][1]+row[2][2],0));

if(row[2][1]>row[1][2]){
quaternion[0]=-quaternion[0];}

if(row[0][2]>row[2][0]){
quaternion[1]=-quaternion[1];}

if(row[1][0]>row[0][1]){
quaternion[2]=-quaternion[2];}



var rotationDegrees;
if(
quaternion[0]<0.001&&quaternion[0]>=0&&
quaternion[1]<0.001&&quaternion[1]>=0)
{

rotationDegrees=[0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0])*180/Math.PI)];}else 

{
rotationDegrees=MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
rotateX:rotationDegrees[0],
rotateY:rotationDegrees[1],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports=MatrixMath;
});
__d('sizesDiffer',function(global, require, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one=one||dummySize;
two=two||dummySize;
return one!==two&&(
one.width!==two.width||
one.height!==two.height);};



module.exports=sizesDiffer;
});
__d('ReactNativeViewAttributes',function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView={
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityComponentType:true,
accessibilityLiveRegion:true,
accessibilityTraits:true,
importantForAccessibility:true,
testID:true,
renderToHardwareTextureAndroid:true,
shouldRasterizeIOS:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true,
collapsable:true,
needsOffscreenAlphaCompositing:true,
style:ReactNativeStyleAttributes};


ReactNativeViewAttributes.RCTView=babelHelpers.extends({},
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports=ReactNativeViewAttributes;
});
__d('StyleSheetPropType',function(global, require, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps={};
newProps[propName]=flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports=StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `'+propName+'` was not specified in '+('`'+
componentName+'`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location&&ReactPropTypeLocationNames[location]||'(unknown)';
if(propType!=='object'){
invariant(
false,
'Invalid '+locationName+' `'+propName+'` of type `'+propType+'` '+('supplied to `'+
componentName+'`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys){
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.'+propName+' key `'+key+'` supplied to `'+componentName+'`.'+'\nBad object: '+
JSON.stringify(props[propName],null,'  ')+'\nValid keys: '+
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message+'\nBad object: '+
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired=checkType.bind(null,true);
return chainedCheckType;}


module.exports=createStrictShapeTypeChecker;
});
__d('requireNativeComponent',function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var UIManager=require('UIManager');
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var processColor=require('processColor');
var resolveAssetSource=require('resolveAssetSource');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


















function requireNativeComponent(
viewName,
componentInterface,
extraConfig)
{
var viewConfig=UIManager[viewName];
if(!viewConfig||!viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=babelHelpers.extends({},
UIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName=viewName;
viewConfig.validAttributes={};
viewConfig.propTypes=componentInterface&&componentInterface.propTypes;
for(var key in nativeProps){
var useAttribute=false;
var attribute={};

var differ=TypeToDifferMap[nativeProps[key]];
if(differ){
attribute.diff=differ;
useAttribute=true;}


var processor=TypeToProcessorMap[nativeProps[key]];
if(processor){
attribute.process=processor;
useAttribute=true;}


viewConfig.validAttributes[key]=useAttribute?attribute:true;}







viewConfig.validAttributes.style=ReactNativeStyleAttributes;

if(__DEV__){
componentInterface&&verifyPropTypes(
componentInterface,
viewConfig,
extraConfig&&extraConfig.nativeOnly);}


return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




var TypeToProcessorMap={

CGColor:processColor,
CGColorArray:processColor,
UIColor:processColor,
UIColorArray:processColor,
CGImage:resolveAssetSource,
UIImage:resolveAssetSource,
RCTImageSource:resolveAssetSource,

Color:processColor};


module.exports=requireNativeComponent;
});
__d('verifyPropTypes',function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');







function verifyPropTypes(
componentInterface,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=componentInterface.name||
componentInterface.displayName||
'unknown';
if(!componentInterface.propTypes){
throw new Error(
'`'+componentName+'` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps){
if(!componentInterface.propTypes[prop]&&
!ReactNativeStyleAttributes[prop]&&(
!nativePropsToIgnore||!nativePropsToIgnore[prop])){
var message;
if(componentInterface.propTypes.hasOwnProperty(prop)){
message='`'+componentName+'` has incorrectly defined propType for native prop `'+
viewConfig.uiViewClassName+'.'+prop+'` of native type `'+nativeProps[prop];}else 
{
message='`'+componentName+'` has no propType for native prop `'+
viewConfig.uiViewClassName+'.'+prop+'` of native type `'+
nativeProps[prop]+'`';}
;
throw new Error(message);}}}




module.exports=verifyPropTypes;
});
__d('UnimplementedView',function(global, require, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');

var UnimplementedView=React.createClass({displayName:'UnimplementedView',
setNativeProps:function(){},




render:function(){

var View=require('View');
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports=UnimplementedView;
});
__d('StyleSheet',function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');
var flattenStyle=require('flattenStyle');var 













































StyleSheet=function(){function StyleSheet(){babelHelpers.classCallCheck(this,StyleSheet);}babelHelpers.createClass(StyleSheet,null,[{key:'create',value:function create(


obj){
var result={};
for(var key in obj){
StyleSheetValidation.validateStyle(key,obj);
result[key]=StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;}();




StyleSheet.flatten=flattenStyle;

module.exports=StyleSheet;
});
__d('StyleSheetValidation',function(global, require, module, exports) {  'use strict';












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=function(){function StyleSheetValidation(){babelHelpers.classCallCheck(this,StyleSheetValidation);}babelHelpers.createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:function validateStyleProp(
prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop]===undefined){
var message1='"'+prop+'" is not a valid style property.';
var message2='\nValid style props: '+
JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:function validateStyle(



name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]){
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet '+name);}}},{key:'addValidStylePropTypes',value:function addValidStylePropTypes(



stylePropTypes){
for(var key in stylePropTypes){
allStylePropTypes[key]=stylePropTypes[key];}}}]);return StyleSheetValidation;}();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1+'\n'+(caller||'<<unknown>>')+': '+
JSON.stringify(style,null,'  ')+(message2||''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports=StyleSheetValidation;
});
__d('createReactNativeComponentClass',function(global, require, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');












var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement=element;

this._rootNodeID=null;
this._renderedChildren=null;};

Constructor.displayName=viewConfig.uiViewClassName;
Constructor.viewConfig=viewConfig;
Constructor.propTypes=viewConfig.propTypes;
Constructor.prototype=new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor=Constructor;

return Constructor;};


module.exports=createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeAttributePayload=require('ReactNativeAttributePayload');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var UIManager=require('UIManager');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteListener=ReactNativeEventEmitter.deleteListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;














var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig=viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i<size;i++){
arr[i]=i;}

cachedIndexArray._cache[size]=arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache={};





ReactNativeBaseComponent.Mixin={
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement=element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID=null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i<mountImages.length;i++){
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage&&mountImage.rootNodeID&&mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i]=mountImage.tag;}

UIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement=nextElement;

if(__DEV__){
deepFreezeAndThrowOnMutationInDev(this._currentElement.props);}


var updatePayload=ReactNativeAttributePayload.diff(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
UIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps){


if(registrationNames[key]&&initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps){
if(registrationNames[key]&&nextProps[key]!==prevProps[key]){
if(nextProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}else 
{
deleteListener(this._rootNodeID,key);}}}},










mountComponent:function(rootID,transaction,context){
this._rootNodeID=rootID;

var tag=ReactNativeTagHandles.allocateTag();

if(__DEV__){
deepFreezeAndThrowOnMutationInDev(this._currentElement.props);}


var updatePayload=ReactNativeAttributePayload.create(
this._currentElement.props,
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
UIManager.createView(
tag,
this.viewConfig.uiViewClassName,
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








babelHelpers.extends(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports=ReactNativeBaseComponent;
});
__d('ReactMultiChild',function(global, require, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');

var flattenChildren=require('flattenChildren');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueInsertMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup)-1,
content:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
content:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
content:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueSetMarkup(parentID,markup){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.SET_MARKUP,
markupIndex:null,
content:markup,
fromIndex:null,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
content:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length=0;
markupQueue.length=0;}








var ReactMultiChild={








Mixin:{

_reconcilerInstantiateChildren:function(nestedChildren,transaction,context){
if(__DEV__){
if(this._currentElement){
try{
ReactCurrentOwner.current=this._currentElement._owner;
return ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);}finally 

{
ReactCurrentOwner.current=null;}}}



return ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);},



_reconcilerUpdateChildren:function(prevChildren,nextNestedChildrenElements,transaction,context){
var nextChildren;
if(__DEV__){
if(this._currentElement){
try{
ReactCurrentOwner.current=this._currentElement._owner;
nextChildren=flattenChildren(nextNestedChildrenElements);}finally 
{
ReactCurrentOwner.current=null;}

return ReactChildReconciler.updateChildren(
prevChildren,nextChildren,transaction,context);}}



nextChildren=flattenChildren(nextNestedChildrenElements);
return ReactChildReconciler.updateChildren(
prevChildren,nextChildren,transaction,context);},











mountChildren:function(nestedChildren,transaction,context){
var children=this._reconcilerInstantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren=children;
var mountImages=[];
var index=0;
for(var name in children){
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID+name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex=index++;
mountImages.push(mountImage);}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren){
if(prevChildren.hasOwnProperty(name)){
this._unmountChild(prevChildren[name]);}}



this.setTextContent(nextContent);
errorThrown=false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},











updateMarkup:function(nextMarkup){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);
for(var name in prevChildren){
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}


this.setMarkup(nextMarkup);
errorThrown=false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildrenElements,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildrenElements,transaction,context);
errorThrown=false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},














_updateChildren:function(nextNestedChildrenElements,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=this._reconcilerUpdateChildren(
prevChildren,nextNestedChildrenElements,transaction,context);

this._renderedChildren=nextChildren;
if(!nextChildren&&!prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren){
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren&&prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild===nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex=Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex=nextIndex;}else 
{
if(prevChild){

lastIndex=Math.max(prevChild._mountIndex,lastIndex);
this._unmountChild(prevChild);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren){
if(prevChildren.hasOwnProperty(name)&&
!(nextChildren&&nextChildren.hasOwnProperty(name))){
this._unmountChild(prevChildren[name]);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren=null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex<lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueInsertMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},








setMarkup:function(markup){
enqueueSetMarkup(this._rootNodeID,markup);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID+name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex=index;
this.createChild(child,mountImage);},










_unmountChild:function(child){
this.removeChild(child);
child._mountIndex=null;}}};






module.exports=ReactMultiChild;
});
__d('ReactChildReconciler',function(global, require, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

function instantiateChild(childInstances,child,name){

var keyUnique=childInstances[name]===undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, '+
'`%s`. Child keys must be unique; when two children share a key, only '+
'the first child will be used.',
name);}


if(child!=null&&keyUnique){
childInstances[name]=instantiateReactComponent(child,null);}}








var ReactChildReconciler={








instantiateChildren:function(nestedChildNodes,transaction,context){
if(nestedChildNodes==null){
return null;}

var childInstances={};
traverseAllChildren(nestedChildNodes,instantiateChild,childInstances);
return childInstances;},












updateChildren:function(
prevChildren,
nextChildren,
transaction,
context){





if(!nextChildren&&!prevChildren){
return null;}

var name;
for(name in nextChildren){
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren&&prevChildren[name];
var prevElement=prevChild&&prevChild._currentElement;
var nextElement=nextChildren[name];
if(prevChild!=null&&
shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name]=prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name]=nextChildInstance;}}



for(name in prevChildren){
if(prevChildren.hasOwnProperty(name)&&
!(nextChildren&&nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren){
if(renderedChildren.hasOwnProperty(name)){
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}}};






module.exports=ReactChildReconciler;
});
__d('traverseAllChildren',function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component&&component.key!=null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return (''+text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$'+escapeUserProvidedKey(key);}










function traverseAllChildrenImpl(
children,
nameSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type==='undefined'||type==='boolean'){

children=null;}


if(children===null||
type==='string'||
type==='number'||
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar===''?SEPARATOR+getComponentKey(children,0):nameSoFar);

return 1;}


var child;
var nextName;
var subtreeCount=0;
var nextNamePrefix=nameSoFar===''?SEPARATOR:nameSoFar+SUBSEPARATOR;

if(Array.isArray(children)){
for(var i=0;i<children.length;i++){
child=children[i];
nextName=nextNamePrefix+getComponentKey(child,i);
subtreeCount+=traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn!==children.entries){
var ii=0;
while(!(step=iterator.next()).done){
child=step.value;
nextName=nextNamePrefix+getComponentKey(child,ii++);
subtreeCount+=traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an '+
'experimental feature that might be removed. Convert it to a '+
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps=true;}


while(!(step=iterator.next()).done){
var entry=step.value;
if(entry){
child=entry[1];
nextName=
nextNamePrefix+
wrapUserProvidedKey(entry[0])+SUBSEPARATOR+
getComponentKey(child,0);

subtreeCount+=traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}else 




if(type==='object'){
var addendum='';
if(__DEV__){
addendum=
' If you meant to render a collection of children, use an array '+
'instead or wrap the object using createFragment(object) from the '+
'React add-ons.';
if(children._isReactElement){
addendum=
' It looks like you\'re using an element created by a different '+
'version of React. Make sure to use only one copy of React.';}

if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
addendum+=' Check the render method of `'+name+'`.';}}}



var childrenString=String(children);
invariant(
false,
'Objects are not valid as a React child (found: %s).%s',
childrenString==='[object Object]'?
'object with keys {'+Object.keys(children).join(', ')+'}':
childrenString,
addendum);}}




return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children==null){
return 0;}


return traverseAllChildrenImpl(children,'',callback,traverseContext);}


module.exports=traverseAllChildren;
});
__d('flattenChildren',function(global, require, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=result[name]===undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, '+
'`%s`. Child keys must be unique; when two children share a key, only '+
'the first child will be used.',
name);}


if(keyUnique&&child!=null){
result[name]=child;}}








function flattenChildren(children){
if(children==null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports=flattenChildren;
});
__d('deepFreezeAndThrowOnMutationInDev',function(global, require, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object!=='object'||
object===null||
Object.isFrozen(object)||
Object.isSealed(object)){
return;}


for(var key in object){
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `'+key+'` with the value `'+
JSON.stringify(value)+'` on an object that is meant to be immutable '+
'and has been frozen.');}



function identity(value){
return value;}


module.exports=deepFreezeAndThrowOnMutationInDev;
});
__d('insetsDiffer',function(global, require, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one=one||dummyInsets;
two=two||dummyInsets;
return one!==two&&(
one.top!==two.top||
one.left!==two.left||
one.right!==two.right||
one.bottom!==two.bottom);};



module.exports=insetsDiffer;
});
__d('pointsDiffer',function(global, require, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one=one||dummyPoint;
two=two||dummyPoint;
return one!==two&&(
one.x!==two.x||
one.y!==two.y);};



module.exports=pointsDiffer;
});
__d('resolveAssetSource',function(global, require, module, exports) {  'use strict';






















var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL,_offlinePath;

function getDevServerURL(){
if(_serverURL===undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL&&scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL=match[0];}else 
{

_serverURL=null;}}



return _serverURL;}


function getOfflinePath(){
if(_offlinePath===undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL&&scriptURL.match(/^file:\/\/(\/.*\/)/);
if(match){
_offlinePath=match[1];}else 
{
_offlinePath='';}}



return _offlinePath;}





function getPathInArchive(asset){
if(Platform.OS==='android'){
var assetDir=getBasePath(asset);


return (assetDir+'/'+asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getOfflinePath()+getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl+getScaledAssetPath(asset)+'?platform='+Platform.OS+
'&hash='+asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0]==='/'){
path=path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale===1?'':'@'+scale+'x';
var assetDir=getBasePath(asset);
return assetDir+'/'+asset.name+scaleSuffix+'.'+asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i<scales.length;i++){
if(scales[i]>=deviceScale){
return scales[i];}}






return scales[scales.length-1]||1;}


function resolveAssetSource(source){
if(typeof source==='object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
return {
__packager_asset:true,
width:asset.width,
height:asset.height,
uri:devServerURL?getPathOnDevserver(devServerURL,asset):getPathInArchive(asset),
scale:pickScale(asset.scales,PixelRatio.get())};}



module.exports=resolveAssetSource;
module.exports.pickScale=pickScale;
});
__d('AssetRegistry',function(global, require, module, exports) {  'use strict';




















var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId-1];}


module.exports={registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');var 
































PixelRatio=function(){function PixelRatio(){babelHelpers.classCallCheck(this,PixelRatio);}babelHelpers.createClass(PixelRatio,null,[{key:'get',value:function get()


















{
return Dimensions.get('window').scale;}},{key:'getFontScale',value:function getFontScale()













{
return Dimensions.get('window').fontScale||PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:function getPixelSizeForLayoutSize(







layoutSize){
return Math.round(layoutSize*PixelRatio.get());}},{key:'startDetecting',value:function startDetecting()



{}}]);return PixelRatio;}();


module.exports=PixelRatio;
});
__d('Dimensions',function(global, require, module, exports) {  'use strict';












var UIManager=require('UIManager');

var invariant=require('invariant');

var dimensions=UIManager.Dimensions;




if(dimensions&&dimensions.windowPhysicalPixels){

dimensions=JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window={
width:windowPhysicalPixels.width/windowPhysicalPixels.scale,
height:windowPhysicalPixels.height/windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=function(){function Dimensions(){babelHelpers.classCallCheck(this,Dimensions);}babelHelpers.createClass(Dimensions,null,[{key:'set',value:function set(





dims){
babelHelpers.extends(dimensions,dims);
return true;}},{key:'get',value:function get(















dim){
invariant(dimensions[dim],'No dimension set for key '+dim);
return dimensions[dim];}}]);return Dimensions;}();



module.exports=Dimensions;
});
__d('ReactChildren',function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactElement=require('ReactElement');

var emptyFunction=require('emptyFunction');
var traverseAllChildren=require('traverseAllChildren');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var fourArgumentPooler=PooledClass.fourArgumentPooler;


var userProvidedKeyEscapeRegex=/\/(?!\/)/g;
function escapeUserProvidedKey(text){
return (''+text).replace(userProvidedKeyEscapeRegex,'//');}











function ForEachBookKeeping(forEachFunction,forEachContext){
this.func=forEachFunction;
this.context=forEachContext;
this.count=0;}

ForEachBookKeeping.prototype.destructor=function(){
this.func=null;
this.context=null;
this.count=0;};

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(bookKeeping,child,name){var 
func=bookKeeping.func;var context=bookKeeping.context;
func.call(context,child,bookKeeping.count++);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children==null){
return children;}

var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}












function MapBookKeeping(mapResult,keyPrefix,mapFunction,mapContext){
this.result=mapResult;
this.keyPrefix=keyPrefix;
this.func=mapFunction;
this.context=mapContext;
this.count=0;}

MapBookKeeping.prototype.destructor=function(){
this.result=null;
this.keyPrefix=null;
this.func=null;
this.context=null;
this.count=0;};

PooledClass.addPoolingTo(MapBookKeeping,fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping,child,childKey){var 
result=bookKeeping.result;var keyPrefix=bookKeeping.keyPrefix;var func=bookKeeping.func;var context=bookKeeping.context;

var mappedChild=func.call(context,child,bookKeeping.count++);
if(Array.isArray(mappedChild)){
mapIntoWithKeyPrefixInternal(
mappedChild,
result,
childKey,
emptyFunction.thatReturnsArgument);}else 

if(mappedChild!=null){
if(ReactElement.isValidElement(mappedChild)){
mappedChild=ReactElement.cloneAndReplaceKey(
mappedChild,


keyPrefix+(

mappedChild!==child?
escapeUserProvidedKey(mappedChild.key||'')+'/':
'')+

childKey);}


result.push(mappedChild);}}



function mapIntoWithKeyPrefixInternal(children,array,prefix,func,context){
var escapedPrefix='';
if(prefix!=null){
escapedPrefix=escapeUserProvidedKey(prefix)+'/';}

var traverseContext=MapBookKeeping.getPooled(
array,
escapedPrefix,
func,
context);

traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);}













function mapChildren(children,func,context){
if(children==null){
return children;}

var result=[];
mapIntoWithKeyPrefixInternal(children,result,null,func,context);
return result;}




function forEachSingleChildDummy(traverseContext,child,name){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}







function toArray(children){
var result=[];
mapIntoWithKeyPrefixInternal(
children,
result,
null,
emptyFunction.thatReturnsArgument);

return result;}



var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
mapIntoWithKeyPrefixInternal:mapIntoWithKeyPrefixInternal,
count:countChildren,
toArray:toArray};


module.exports=ReactChildren;
});
__d('ReactClass',function(global, require, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactElement=require('ReactElement');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];

var warnedSetProps=false;
function warnSetProps(){
if(!warnedSetProps){
warnedSetProps=true;
warning(
false,
'setProps(...) and replaceProps(...) are deprecated. '+
'Instead, call render again at the top level.');}}


























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName=displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i<mixins.length;i++){
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes=assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes=assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps=createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps=getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes=assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);},

autobind:function(){}};


function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef){
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName]==='function',
'%s: %s type `%s` is invalid; it must be a function, usually from '+
'React.PropTypes.',
Constructor.displayName||'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy===SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override '+
'`%s` from your class specification. Ensure that your method names '+
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy===SpecPolicy.DEFINE_MANY||
specPolicy===SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define '+
'`%s` on your component more than once. This conflict may be due '+
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec!=='function',
'ReactClass: You\'re attempting to '+
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to '+
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec){
if(!spec.hasOwnProperty(name)){
continue;}


if(name===MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var isFunction=typeof property==='function';
var shouldAutoBind=
isFunction&&
!isReactClassMethod&&
!isAlreadyDefined&&
spec.autobind!==false;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap={};}

proto.__reactAutoBindMap[name]=property;
proto[name]=property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod&&(
specPolicy===SpecPolicy.DEFINE_MANY_MERGED||
specPolicy===SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s '+
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy===SpecPolicy.DEFINE_MANY_MERGED){
proto[name]=createMergedResultFunction(proto[name],property);}else 
if(specPolicy===SpecPolicy.DEFINE_MANY){
proto[name]=createChainedFunction(proto[name],property);}}else 

{
proto[name]=property;
if(__DEV__){


if(typeof property==='function'&&spec.displayName){
proto[name].displayName=spec.displayName+'_'+name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics){
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=name in RESERVED_SPEC_KEYS;
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved '+
'property, `%s`, that shouldn\'t be on the "statics" key. Define it '+
'as an instance property instead; it will still be accessible on the '+
'constructor.',
name);


var isInherited=name in Constructor;
invariant(
!isInherited,
'ReactClass: You are attempting to define '+
'`%s` on your component more than once. This conflict may be '+
'due to a mixin.',
name);

Constructor[name]=property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one&&two&&typeof one==='object'&&typeof two==='object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two){
if(two.hasOwnProperty(key)){
invariant(
one[key]===undefined,
'mergeIntoWithNoDuplicateKeys(): '+
'Tried to merge two objects with the same key: `%s`. This conflict '+
'may be due to a mixin; in particular, this may be caused by two '+
'getInitialState() or getDefaultProps() methods returning objects '+
'with clashing keys.',
key);

one[key]=two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a==null){
return b;}else 
if(b==null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext=component;
boundMethod.__reactBoundMethod=method;
boundMethod.__reactBoundArguments=null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind=function(newThis){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}



if(newThis!==component&&newThis!==null){
warning(
false,
'bind(): React component methods may only be bound to the '+
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. '+
'React does this for you automatically in a high-performance '+
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext=component;
reboundMethod.__reactBoundMethod=method;
reboundMethod.__reactBoundArguments=args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap){
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey]=bindAutoBindMethod(
component,
method);}}}









var ReactClassMixin={





replaceState:function(newState,callback){
this.updater.enqueueReplaceState(this,newState);
if(callback){
this.updater.enqueueCallback(this,callback);}},









isMounted:function(){
return this.updater.isMounted(this);},











setProps:function(partialProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueSetProps(this,partialProps);
if(callback){
this.updater.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueReplaceProps(this,newProps);
if(callback){
this.updater.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context,updater){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or '+
'JSX instead. See: https://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props=props;
this.context=context;
this.refs=emptyObject;
this.updater=updater||ReactNoopUpdateQueue;

this.state=null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState==='undefined'&&
this.getInitialState._isMockFunction){


initialState=null;}}


invariant(
typeof initialState==='object'&&!Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName||'ReactCompositeComponent');


this.state=initialState;};

Constructor.prototype=new ReactClassComponent();
Constructor.prototype.constructor=Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps=Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved={};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved={};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called '+
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+
'The name is phrased as a question because the function is '+
'expected to return a value.',
spec.displayName||'A component');

warning(
!Constructor.prototype.componentWillRecieveProps,
'%s has a method called '+
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
spec.displayName||'A component');}




for(var methodName in ReactClassInterface){
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName]=null;}}



return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports=ReactClass;
});
__d('ReactComponent',function(global, require, module, exports) {  'use strict';












var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var canDefineProperty=require('canDefineProperty');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context,updater){
this.props=props;
this.context=context;
this.refs=emptyObject;


this.updater=updater||ReactNoopUpdateQueue;}


ReactComponent.prototype.isReactComponent={};


























ReactComponent.prototype.setState=function(partialState,callback){
invariant(
typeof partialState==='object'||
typeof partialState==='function'||
partialState==null,
'setState(...): takes an object of state variables to update or a '+
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState!=null,
'setState(...): You passed an undefined or null state object; '+
'instead, use forceUpdate().');}


this.updater.enqueueSetState(this,partialState);
if(callback){
this.updater.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate=function(callback){
this.updater.enqueueForceUpdate(this);
if(callback){
this.updater.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:[
'getDOMNode',
'Use ReactDOM.findDOMNode(component) instead.'],

isMounted:[
'isMounted',
'Instead, make sure to clean up subscriptions and pending requests in '+
'componentWillUnmount to prevent memory leaks.'],

replaceProps:[
'replaceProps',
'Instead, call render again at the top level.'],

replaceState:[
'replaceState',
'Refactor your code to use setState instead (see '+
'https://github.com/facebook/react/issues/3236).'],

setProps:[
'setProps',
'Instead, call render again at the top level.']};


var defineDeprecationWarning=function(methodName,info){
if(canDefineProperty){
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes. %s',
info[0],
info[1]);

return undefined;}});}};




for(var fnName in deprecatedAPIs){
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports=ReactComponent;
});
__d('ReactNoopUpdateQueue',function(global, require, module, exports) {  'use strict';












var warning=require('warning');

function warnTDZ(publicInstance,callerName){
if(__DEV__){
warning(
false,
'%s(...): Can only update a mounted or mounting component. '+
'This usually means you called %s() on an unmounted component. '+
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor&&publicInstance.constructor.displayName||'');}}







var ReactNoopUpdateQueue={








isMounted:function(publicInstance){
return false;},










enqueueCallback:function(publicInstance,callback){},














enqueueForceUpdate:function(publicInstance){
warnTDZ(publicInstance,'forceUpdate');},













enqueueReplaceState:function(publicInstance,completeState){
warnTDZ(publicInstance,'replaceState');},












enqueueSetState:function(publicInstance,partialState){
warnTDZ(publicInstance,'setState');},









enqueueSetProps:function(publicInstance,partialProps){
warnTDZ(publicInstance,'setProps');},









enqueueReplaceProps:function(publicInstance,props){
warnTDZ(publicInstance,'replaceProps');}};




module.exports=ReactNoopUpdateQueue;
});
__d('ReactElementValidator',function(global, require, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');

var canDefineProperty=require('canDefineProperty');
var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `'+name+'`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};











function validateExplicitKey(element,parentType){
if(!element._store||element._store.validated||element.key!=null){
return;}

element._store.validated=true;

var addenda=getAddendaForKeyUse('uniqueKey',element,parentType);
if(addenda===null){

return;}

warning(
false,
'Each child in an array or iterator should have a unique "key" prop.'+
'%s%s%s',
addenda.parentOrOwner||'',
addenda.childOwner||'',
addenda.url||'');}













function getAddendaForKeyUse(messageType,element,parentType){
var addendum=getDeclarationErrorAddendum();
if(!addendum){
var parentName=typeof parentType==='string'?
parentType:parentType.displayName||parentType.name;
if(parentName){
addendum=' Check the top-level render call using <'+parentName+'>.';}}



var memoizer=ownerHasKeyUseWarning[messageType]||(
ownerHasKeyUseWarning[messageType]={});

if(memoizer[addendum]){
return null;}

memoizer[addendum]=true;

var addenda={
parentOrOwner:addendum,
url:' See https://fb.me/react-warning-keys for more information.',
childOwner:null};





if(element&&
element._owner&&
element._owner!==ReactCurrentOwner.current){

addenda.childOwner=' It was passed a child from '+
element._owner.getName()+'.';}


return addenda;}











function validateChildKeys(node,parentType){
if(typeof node!=='object'){
return;}

if(Array.isArray(node)){
for(var i=0;i<node.length;i++){
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

if(node._store){
node._store.validated=true;}}else 

if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn!==node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step=iterator.next()).done){
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}}}
















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes){
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName]==='function',
'%s: %s type `%s` is invalid; it must be a function, usually from '+
'React.PropTypes.',
componentName||'React class',
ReactPropTypeLocationNames[location],
propName);

error=propTypes[propName](props,propName,componentName,location);}
catch(ex){
error=ex;}

warning(
!error||error instanceof Error,
'%s: type specification of %s `%s` is invalid; the type checker '+
'function must return `null` or an `Error` but returned a %s. '+
'You may have forgotten to pass an argument to the type checker '+
'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and '+
'shape all require an argument).',
componentName||'React class',
ReactPropTypeLocationNames[location],
propName,
typeof error);

if(error instanceof Error&&!(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message]=true;

var addendum=getDeclarationErrorAddendum();
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}











function validatePropTypes(element){
var componentClass=element.type;
if(typeof componentClass!=='function'){
return;}

var name=componentClass.displayName||componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps==='function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass '+
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

createElement:function(type,props,children){
var validType=typeof type==='string'||typeof type==='function';


warning(
validType,
'React.createElement: type should not be null, undefined, boolean, or '+
'number. It should be a string (for DOM elements) or a ReactClass '+
'(for composite components).%s',
getDeclarationErrorAddendum());


var element=ReactElement.createElement.apply(this,arguments);



if(element==null){
return element;}







if(validType){
for(var i=2;i<arguments.length;i++){
validateChildKeys(arguments[i],type);}}



validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type=type;

if(__DEV__){
if(canDefineProperty){
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly '+
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}}







return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i<arguments.length;i++){
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports=ReactElementValidator;
});
__d('onlyChild',function(global, require, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports=onlyChild;
});
__d('ReactNativeART',function(global, require, module, exports) {  'use strict';











var Color=require('art/core/color.js');
var Path=require('ARTSerializablePath');
var Transform=require('art/core/transform.js');

var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var merge=require('merge');



function arrayDiffer(a,b){
if(a==null){
return true;}

if(a.length!==b.length){
return true;}

for(var i=0;i<a.length;i++){
if(a[i]!==b[i]){
return true;}}


return false;}


function fontAndLinesDiffer(a,b){
if(a===b){
return false;}

if(a.font!==b.font){
if(a.font===null){
return true;}

if(b.font===null){
return true;}


if(
a.font.fontFamily!==b.font.fontFamily||
a.font.fontSize!==b.font.fontSize||
a.font.fontWeight!==b.font.fontWeight||
a.font.fontStyle!==b.font.fontStyle)
{
return true;}}


return arrayDiffer(a.lines,b.lines);}




var SurfaceViewAttributes=merge(ReactNativeViewAttributes.UIView,{});





var NodeAttributes={
transform:{diff:arrayDiffer},
opacity:true};


var GroupAttributes=merge(NodeAttributes,{
clipping:{diff:arrayDiffer}});


var RenderableAttributes=merge(NodeAttributes,{
fill:{diff:arrayDiffer},
stroke:{diff:arrayDiffer},
strokeWidth:true,
strokeCap:true,
strokeJoin:true,
strokeDash:{diff:arrayDiffer}});


var ShapeAttributes=merge(RenderableAttributes,{
d:{diff:arrayDiffer}});


var TextAttributes=merge(RenderableAttributes,{
alignment:true,
frame:{diff:fontAndLinesDiffer},
path:{diff:arrayDiffer}});




var NativeSurfaceView=createReactNativeComponentClass({
validAttributes:SurfaceViewAttributes,
uiViewClassName:'ARTSurfaceView'});


var NativeGroup=createReactNativeComponentClass({
validAttributes:GroupAttributes,
uiViewClassName:'ARTGroup'});


var NativeShape=createReactNativeComponentClass({
validAttributes:ShapeAttributes,
uiViewClassName:'ARTShape'});


var NativeText=createReactNativeComponentClass({
validAttributes:TextAttributes,
uiViewClassName:'ARTText'});




function childrenAsString(children){
if(!children){
return '';}

if(typeof children==='string'){
return children;}

if(children.length){
return children.join('\n');}

return '';}




var Surface=React.createClass({displayName:'Surface',

render:function(){
var props=this.props;
var w=extractNumber(props.width,0);
var h=extractNumber(props.height,0);
return (
React.createElement(NativeSurfaceView,{style:[props.style,{width:w,height:h}]},
this.props.children));}});











function extractNumber(value,defaultValue){
if(value==null){
return defaultValue;}

return +value;}


var pooledTransform=new Transform();

function extractTransform(props){
var scaleX=props.scaleX!=null?props.scaleX:
props.scale!=null?props.scale:1;
var scaleY=props.scaleY!=null?props.scaleY:
props.scale!=null?props.scale:1;

pooledTransform.
transformTo(1,0,0,1,0,0).
move(props.x||0,props.y||0).
rotate(props.rotation||0,props.originX,props.originY).
scale(scaleX,scaleY,props.originX,props.originY);

if(props.transform!=null){
pooledTransform.transform(props.transform);}


return [
pooledTransform.xx,pooledTransform.yx,
pooledTransform.xy,pooledTransform.yy,
pooledTransform.x,pooledTransform.y];}



function extractOpacity(props){

if(props.visible===false){
return 0;}

if(props.opacity==null){
return 1;}

return +props.opacity;}







var Group=React.createClass({displayName:'Group',

render:function(){
var props=this.props;
return (
React.createElement(NativeGroup,{
opacity:extractOpacity(props),
transform:extractTransform(props)},
this.props.children));}});






var ClippingRectangle=React.createClass({displayName:'ClippingRectangle',

render:function(){
var props=this.props;
var x=extractNumber(props.x,0);
var y=extractNumber(props.y,0);
var w=extractNumber(props.width,0);
var h=extractNumber(props.height,0);
var clipping=new Path().
moveTo(x,y).
line(w,0).
line(0,h).
line(w,0).
close().
toJSON();

var propsExcludingXAndY=merge(props);
delete propsExcludingXAndY.x;
delete propsExcludingXAndY.y;
return (
React.createElement(NativeGroup,{
clipping:clipping,
opacity:extractOpacity(props),
transform:extractTransform(propsExcludingXAndY)},
this.props.children));}});








var SOLID_COLOR=0;
var LINEAR_GRADIENT=1;
var RADIAL_GRADIENT=2;
var PATTERN=3;

function insertColorIntoArray(color,targetArray,atIndex){
var c=new Color(color);
targetArray[atIndex+0]=c.red/255;
targetArray[atIndex+1]=c.green/255;
targetArray[atIndex+2]=c.blue/255;
targetArray[atIndex+3]=c.alpha;}


function insertColorsIntoArray(stops,targetArray,atIndex){
var i=0;
if('length' in stops){
while(i<stops.length){
insertColorIntoArray(stops[i],targetArray,atIndex+i*4);
i++;}}else 

{
for(var offset in stops){
insertColorIntoArray(stops[offset],targetArray,atIndex+i*4);
i++;}}


return atIndex+i*4;}


function insertOffsetsIntoArray(stops,targetArray,atIndex,multi,reverse){
var offsetNumber;
var i=0;
if('length' in stops){
while(i<stops.length){
offsetNumber=i/(stops.length-1)*multi;
targetArray[atIndex+i]=reverse?1-offsetNumber:offsetNumber;
i++;}}else 

{
for(var offsetString in stops){
offsetNumber=+offsetString*multi;
targetArray[atIndex+i]=reverse?1-offsetNumber:offsetNumber;
i++;}}


return atIndex+i;}


function insertColorStopsIntoArray(stops,targetArray,atIndex){
var lastIndex=insertColorsIntoArray(stops,targetArray,atIndex);
insertOffsetsIntoArray(stops,targetArray,lastIndex,1,false);}


function insertDoubleColorStopsIntoArray(stops,targetArray,atIndex){
var lastIndex=insertColorsIntoArray(stops,targetArray,atIndex);
lastIndex=insertColorsIntoArray(stops,targetArray,lastIndex);
lastIndex=insertOffsetsIntoArray(stops,targetArray,lastIndex,0.5,false);
insertOffsetsIntoArray(stops,targetArray,lastIndex,0.5,true);}


function applyBoundingBoxToBrushData(brushData,props){
var type=brushData[0];
var width=+props.width;
var height=+props.height;
if(type===LINEAR_GRADIENT){
brushData[1]*=width;
brushData[2]*=height;
brushData[3]*=width;
brushData[4]*=height;}else 
if(type===RADIAL_GRADIENT){
brushData[1]*=width;
brushData[2]*=height;
brushData[3]*=width;
brushData[4]*=height;
brushData[5]*=width;
brushData[6]*=height;}else 
if(type===PATTERN){}}




function extractBrush(colorOrBrush,props){
if(colorOrBrush==null){
return null;}

if(colorOrBrush._brush){
if(colorOrBrush._bb){





applyBoundingBoxToBrushData(colorOrBrush._brush,props);
colorOrBrush._bb=false;}

return colorOrBrush._brush;}

var c=new Color(colorOrBrush);
return [SOLID_COLOR,c.red/255,c.green/255,c.blue/255,c.alpha];}


function extractColor(color){
if(color==null){
return null;}

var c=new Color(color);
return [c.red/255,c.green/255,c.blue/255,c.alpha];}


function extractStrokeCap(strokeCap){
switch(strokeCap){
case 'butt':return 0;
case 'square':return 2;
default:return 1;}}



function extractStrokeJoin(strokeJoin){
switch(strokeJoin){
case 'miter':return 0;
case 'bevel':return 2;
default:return 1;}}








var Shape=React.createClass({displayName:'Shape',

render:function(){
var props=this.props;
var path=props.d||childrenAsString(props.children);
var d=new Path(path).toJSON();
return (
React.createElement(NativeShape,{
fill:extractBrush(props.fill,props),
opacity:extractOpacity(props),
stroke:extractColor(props.stroke),
strokeCap:extractStrokeCap(props.strokeCap),
strokeDash:props.strokeDash||null,
strokeJoin:extractStrokeJoin(props.strokeJoin),
strokeWidth:extractNumber(props.strokeWidth,1),
transform:extractTransform(props),

d:d}));}});








var cachedFontObjectsFromString={};

var fontFamilyPrefix=/^[\s"']*/;
var fontFamilySuffix=/[\s"']*$/;

function extractSingleFontFamily(fontFamilyString){



return fontFamilyString.split(',')[0].
replace(fontFamilyPrefix,'').
replace(fontFamilySuffix,'');}


function parseFontString(font){
if(cachedFontObjectsFromString.hasOwnProperty(font)){
return cachedFontObjectsFromString[font];}

var regexp=/^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
var match=regexp.exec(font);
if(!match){
return null;}

var fontFamily=extractSingleFontFamily(match[3]);
var fontSize=+match[2]||12;
var isBold=/bold/.exec(match[1]);
var isItalic=/italic/.exec(match[1]);
cachedFontObjectsFromString[font]={
fontFamily:fontFamily,
fontSize:fontSize,
fontWeight:isBold?'bold':'normal',
fontStyle:isItalic?'italic':'normal'};

return cachedFontObjectsFromString[font];}


function extractFont(font){
if(font==null){
return null;}

if(typeof font==='string'){
return parseFontString(font);}

var fontFamily=extractSingleFontFamily(font.fontFamily);
var fontSize=+font.fontSize||12;
return {

fontFamily:fontFamily,
fontSize:fontSize,
fontWeight:font.fontWeight,
fontStyle:font.fontStyle};}



var newLine=/\n/g;
function extractFontAndLines(font,text){
return {font:extractFont(font),lines:text.split(newLine)};}


function extractAlignment(alignment){
switch(alignment){
case 'right':
return 1;
case 'center':
return 2;
default:
return 0;}}



var Text=React.createClass({displayName:'Text',

render:function(){
var props=this.props;
var textPath=props.path?new Path(props.path).toJSON():null;
var textFrame=extractFontAndLines(
props.font,
childrenAsString(props.children));

return (
React.createElement(NativeText,{
fill:extractBrush(props.fill,props),
opacity:extractOpacity(props),
stroke:extractColor(props.stroke),
strokeCap:extractStrokeCap(props.strokeCap),
strokeDash:props.strokeDash||null,
strokeJoin:extractStrokeJoin(props.strokeJoin),
strokeWidth:extractNumber(props.strokeWidth,1),
transform:extractTransform(props),

alignment:extractAlignment(props.alignment),
frame:textFrame,
path:textPath}));}});








function LinearGradient(stops,x1,y1,x2,y2){
var type=LINEAR_GRADIENT;

if(arguments.length<5){
var angle=(x1==null?270:x1)*Math.PI/180;

var x=Math.cos(angle);
var y=-Math.sin(angle);
var l=(Math.abs(x)+Math.abs(y))/2;

x*=l;y*=l;

x1=0.5-x;
x2=0.5+x;
y1=0.5-y;
y2=0.5+y;
this._bb=true;}else 
{
this._bb=false;}


var brushData=[type,+x1,+y1,+x2,+y2];
insertColorStopsIntoArray(stops,brushData,5);
this._brush=brushData;}


function RadialGradient(stops,fx,fy,rx,ry,cx,cy){
if(ry==null){
ry=rx;}

if(cx==null){
cx=fx;}

if(cy==null){
cy=fy;}

if(fx==null){


fx=fy=rx=ry=cx=cy=0.5;
this._bb=true;}else 
{
this._bb=false;}





var brushData=[RADIAL_GRADIENT,+fx,+fy,+rx*2,+ry*2,+cx,+cy];
insertDoubleColorStopsIntoArray(stops,brushData,7);
this._brush=brushData;}


function Pattern(url,width,height,left,top){
this._brush=[PATTERN,url,+left||0,+top||0,+width,+height];}





function CSSBackgroundPattern(){
return new Color('rgba(0,0,0,0)');}


var ReactART={
LinearGradient:LinearGradient,
RadialGradient:RadialGradient,
Pattern:Pattern,
Transform:Transform,
Path:Path,
Surface:Surface,
Group:Group,
ClippingRectangle:ClippingRectangle,
Shape:Shape,
Text:Text,
CSSBackgroundPattern:CSSBackgroundPattern};


module.exports=ReactART;
});
__d('art/core/color.js',function(global, require, module, exports) {  var colors={
maroon:'#800000',red:'#ff0000',orange:'#ffA500',yellow:'#ffff00',olive:'#808000',
purple:'#800080',fuchsia:"#ff00ff",white:'#ffffff',lime:'#00ff00',green:'#008000',
navy:'#000080',blue:'#0000ff',aqua:'#00ffff',teal:'#008080',
black:'#000000',silver:'#c0c0c0',gray:'#808080'};


var map=function(array,fn){
var results=[];
for(var i=0,l=array.length;i<l;i++){
results[i]=fn(array[i],i);}
return results;};


var Color=function(color,type){

if(color.isColor){

this.red=color.red;
this.green=color.green;
this.blue=color.blue;
this.alpha=color.alpha;}else 

{

var namedColor=colors[color];
if(namedColor){
color=namedColor;
type='hex';}


switch(typeof color){
case 'string':if(!type)type=(type=color.match(/^rgb|^hsb|^hsl/))?type[0]:'hex';break;
case 'object':type=type||'rgb';color=color.toString();break;
case 'number':type='hex';color=color.toString(16);break;}


color=Color['parse'+type.toUpperCase()](color);
this.red=color[0];
this.green=color[1];
this.blue=color[2];
this.alpha=color[3];}


this.isColor=true;};



var limit=function(number,min,max){
return Math.min(max,Math.max(min,number));};


var listMatch=/([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch=/^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB=function(color){
return map(color.match(listMatch).slice(1),function(bit,i){
if(bit)bit=parseFloat(bit)*(bit[bit.length-1]=='%'?2.55:1);
return i<3?Math.round((bit%=256)<0?bit+256:bit):limit(bit===''?1:Number(bit),0,1);});};



Color.parseHEX=function(color){
if(color.length==1)color=color+color+color;
return map(color.match(hexMatch).slice(1),function(bit,i){
if(i==3)return bit?parseInt(bit,16)/255:1;
return parseInt(bit.length==1?bit+bit:bit,16);});};



Color.parseHSB=function(color){
var hsb=map(color.match(listMatch).slice(1),function(bit,i){
if(bit)bit=parseFloat(bit);
if(i===0)return Math.round((bit%=360)<0?bit+360:bit);else 
if(i<3)return limit(Math.round(bit),0,100);else 
return limit(bit===''?1:Number(bit),0,1);});


var a=hsb[3];
var br=Math.round(hsb[2]/100*255);
if(hsb[1]==0)return [br,br,br,a];

var hue=hsb[0];
var f=hue%60;
var p=Math.round(hsb[2]*(100-hsb[1])/10000*255);
var q=Math.round(hsb[2]*(6000-hsb[1]*f)/600000*255);
var t=Math.round(hsb[2]*(6000-hsb[1]*(60-f))/600000*255);

switch(Math.floor(hue/60)){
case 0:return [br,t,p,a];
case 1:return [q,br,p,a];
case 2:return [p,br,t,a];
case 3:return [p,q,br,a];
case 4:return [t,p,br,a];
default:return [br,p,q,a];}};



Color.parseHSL=function(color){
var hsb=map(color.match(listMatch).slice(1),function(bit,i){
if(bit)bit=parseFloat(bit);
if(i===0)return Math.round((bit%=360)<0?bit+360:bit);else 
if(i<3)return limit(Math.round(bit),0,100);else 
return limit(bit===''?1:Number(bit),0,1);});


var h=hsb[0]/60;
var s=hsb[1]/100;
var l=hsb[2]/100;
var a=hsb[3];

var c=(1-Math.abs(2*l-1))*s;
var x=c*(1-Math.abs(h%2-1));
var m=l-c/2;

var p=Math.round((c+m)*255);
var q=Math.round((x+m)*255);
var t=Math.round(m*255);

switch(Math.floor(h)){
case 0:return [p,q,t,a];
case 1:return [q,p,t,a];
case 2:return [t,p,q,a];
case 3:return [t,q,p,a];
case 4:return [q,t,p,a];
default:return [p,t,q,a];}};



var toString=function(type,array){
if(array[3]!=1)type+='a';else 
array.pop();
return type+'('+array.join(', ')+')';};


Color.prototype={

toHSB:function(array){
var red=this.red,green=this.green,blue=this.blue,alpha=this.alpha;

var max=Math.max(red,green,blue),min=Math.min(red,green,blue),delta=max-min;
var hue=0,saturation=delta!=0?delta/max:0,brightness=max/255;
if(saturation){
var rr=(max-red)/delta,gr=(max-green)/delta,br=(max-blue)/delta;
hue=red==max?br-gr:green==max?2+rr-br:4+gr-rr;
if((hue/=6)<0)hue++;}


var hsb=[Math.round(hue*360),Math.round(saturation*100),Math.round(brightness*100),alpha];

return array?hsb:toString('hsb',hsb);},


toHSL:function(array){
var red=this.red,green=this.green,blue=this.blue,alpha=this.alpha;

var max=Math.max(red,green,blue),min=Math.min(red,green,blue),delta=max-min;
var hue=0,saturation=delta!=0?delta/(255-Math.abs(max+min-255)):0,lightness=(max+min)/512;
if(saturation){
var rr=(max-red)/delta,gr=(max-green)/delta,br=(max-blue)/delta;
hue=red==max?br-gr:green==max?2+rr-br:4+gr-rr;
if((hue/=6)<0)hue++;}


var hsl=[Math.round(hue*360),Math.round(saturation*100),Math.round(lightness*100),alpha];

return array?hsl:toString('hsl',hsl);},


toHEX:function(array){

var a=this.alpha;
var alpha=(a=Math.round(a*255).toString(16)).length==1?a+a:a;

var hex=map([this.red,this.green,this.blue],function(bit){
bit=bit.toString(16);
return bit.length==1?'0'+bit:bit;});


return array?hex.concat(alpha):'#'+hex.join('')+(alpha=='ff'?'':alpha);},


toRGB:function(array){
var rgb=[this.red,this.green,this.blue,this.alpha];
return array?rgb:toString('rgb',rgb);}};




Color.prototype.toString=Color.prototype.toRGB;

Color.hex=function(hex){
return new Color(hex,'hex');};


if(this.hex==null)this.hex=Color.hex;

Color.hsb=function(h,s,b,a){
return new Color([h||0,s||0,b||0,a==null?1:a],'hsb');};


if(this.hsb==null)this.hsb=Color.hsb;

Color.hsl=function(h,s,l,a){
return new Color([h||0,s||0,l||0,a==null?1:a],'hsl');};


if(this.hsl==null)this.hsl=Color.hsl;

Color.rgb=function(r,g,b,a){
return new Color([r||0,g||0,b||0,a==null?1:a],'rgb');};


if(this.rgb==null)this.rgb=Color.rgb;

Color.detach=function(color){
color=new Color(color);
return [Color.rgb(color.red,color.green,color.blue).toString(),color.alpha];};


module.exports=Color;
});
__d('ARTSerializablePath',function(global, require, module, exports) {  'use strict';













var Class=require('art/core/class.js');
var Path=require('art/core/path.js');

var MOVE_TO=0;
var CLOSE=1;
var LINE_TO=2;
var CURVE_TO=3;
var ARC=4;

var SerializablePath=Class(Path,{

initialize:function(path){
this.reset();
if(path instanceof SerializablePath){
this.path=path.path.slice(0);}else 
if(path){
if(path.applyToPath){
path.applyToPath(this);}else 
{
this.push(path);}}},




onReset:function(){
this.path=[];},


onMove:function(sx,sy,x,y){
this.path.push(MOVE_TO,x,y);},


onLine:function(sx,sy,x,y){
this.path.push(LINE_TO,x,y);},


onBezierCurve:function(sx,sy,p1x,p1y,p2x,p2y,x,y){
this.path.push(CURVE_TO,p1x,p1y,p2x,p2y,x,y);},


_arcToBezier:Path.prototype.onArc,

onArc:function(sx,sy,ex,ey,cx,cy,rx,ry,sa,ea,ccw,rotation){
if(rx!==ry||rotation){
return this._arcToBezier(
sx,sy,ex,ey,cx,cy,rx,ry,sa,ea,ccw,rotation);}


this.path.push(ARC,cx,cy,rx,sa,ea,ccw?0:1);},


onClose:function(){
this.path.push(CLOSE);},


toJSON:function(){
return this.path;}});




module.exports=SerializablePath;
});
__d('art/core/class.js',function(global, require, module, exports) {  module.exports=function(mixins){
var proto={};
for(var i=0,l=arguments.length;i<l;i++){
var mixin=arguments[i];
if(typeof mixin=='function')mixin=mixin.prototype;
for(var key in mixin){proto[key]=mixin[key];}}

if(!proto.initialize)proto.initialize=function(){};
proto.constructor=function(a,b,c,d,e,f,g,h){
return new proto.initialize(a,b,c,d,e,f,g,h);};

proto.constructor.prototype=proto.initialize.prototype=proto;
return proto.constructor;};
});
__d('art/core/path.js',function(global, require, module, exports) {  var Class=require('art/core/class.js');

module.exports=Class({

initialize:function(path){
this.reset().push(path);},




push:function(){
var p=Array.prototype.join.call(arguments,' ').
match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
if(!p)return this;

var last,cmd=p[0],i=1;
while(cmd){
switch(cmd){
case 'm':this.move(p[i++],p[i++]);break;
case 'l':this.line(p[i++],p[i++]);break;
case 'c':this.curve(p[i++],p[i++],p[i++],p[i++],p[i++],p[i++]);break;
case 's':this.curve(p[i++],p[i++],null,null,p[i++],p[i++]);break;
case 'q':this.curve(p[i++],p[i++],p[i++],p[i++]);break;
case 't':this.curve(p[i++],p[i++]);break;
case 'a':this.arc(p[i+5],p[i+6],p[i],p[i+1],p[i+3],! +p[i+4],p[i+2]);i+=7;break;
case 'h':this.line(p[i++],0);break;
case 'v':this.line(0,p[i++]);break;

case 'M':this.moveTo(p[i++],p[i++]);break;
case 'L':this.lineTo(p[i++],p[i++]);break;
case 'C':this.curveTo(p[i++],p[i++],p[i++],p[i++],p[i++],p[i++]);break;
case 'S':this.curveTo(p[i++],p[i++],null,null,p[i++],p[i++]);break;
case 'Q':this.curveTo(p[i++],p[i++],p[i++],p[i++]);break;
case 'T':this.curveTo(p[i++],p[i++]);break;
case 'A':this.arcTo(p[i+5],p[i+6],p[i],p[i+1],p[i+3],! +p[i+4],p[i+2]);i+=7;break;
case 'H':this.lineTo(p[i++],this.penY);break;
case 'V':this.lineTo(this.penX,p[i++]);break;

case 'Z':case 'z':this.close();break;
default:cmd=last;i--;continue;}


last=cmd;
if(last=='m')last='l';else 
if(last=='M')last='L';
cmd=p[i++];}

return this;},




reset:function(){
this.penX=this.penY=0;
this.penDownX=this.penDownY=null;
this._pivotX=this._pivotY=0;
this.onReset();
return this;},


move:function(x,y){
this.onMove(this.penX,this.penY,this._pivotX=this.penX+=+x,this._pivotY=this.penY+=+y);
return this;},

moveTo:function(x,y){
this.onMove(this.penX,this.penY,this._pivotX=this.penX=+x,this._pivotY=this.penY=+y);
return this;},


line:function(x,y){
return this.lineTo(this.penX+ +x,this.penY+ +y);},

lineTo:function(x,y){
if(this.penDownX==null){this.penDownX=this.penX;this.penDownY=this.penY;}
this.onLine(this.penX,this.penY,this._pivotX=this.penX=+x,this._pivotY=this.penY=+y);
return this;},


curve:function(c1x,c1y,c2x,c2y,ex,ey){
var x=this.penX,y=this.penY;
return this.curveTo(
x+ +c1x,y+ +c1y,
c2x==null?null:x+ +c2x,
c2y==null?null:y+ +c2y,
ex==null?null:x+ +ex,
ey==null?null:y+ +ey);},


curveTo:function(c1x,c1y,c2x,c2y,ex,ey){
var x=this.penX,y=this.penY;
if(c2x==null){
c2x=+c1x;c2y=+c1y;
c1x=x*2-(this._pivotX||0);c1y=y*2-(this._pivotY||0);}

if(ex==null){
this._pivotX=+c1x;this._pivotY=+c1y;
ex=+c2x;ey=+c2y;
c2x=(ex+ +c1x*2)/3;c2y=(ey+ +c1y*2)/3;
c1x=(x+ +c1x*2)/3;c1y=(y+ +c1y*2)/3;}else 
{
this._pivotX=+c2x;this._pivotY=+c2y;}

if(this.penDownX==null){this.penDownX=x;this.penDownY=y;}
this.onBezierCurve(x,y,+c1x,+c1y,+c2x,+c2y,this.penX=+ex,this.penY=+ey);
return this;},


arc:function(x,y,rx,ry,outer,counterClockwise,rotation){
return this.arcTo(this.penX+ +x,this.penY+ +y,rx,ry,outer,counterClockwise,rotation);},

arcTo:function(x,y,rx,ry,outer,counterClockwise,rotation){
ry=Math.abs(+ry||+rx||+y-this.penY);
rx=Math.abs(+rx||+x-this.penX);

if(!rx||!ry||x==this.penX&&y==this.penY)return this.lineTo(x,y);

var tX=this.penX,tY=this.penY,clockwise=! +counterClockwise,large=!! +outer;

var rad=rotation?rotation*Math.PI/180:0,cos=Math.cos(rad),sin=Math.sin(rad);
x-=tX;y-=tY;


var cx=cos*x/2+sin*y/2,
cy=-sin*x/2+cos*y/2,
rxry=rx*rx*ry*ry,
rycx=ry*ry*cx*cx,
rxcy=rx*rx*cy*cy,
a=rxry-rxcy-rycx;

if(a<0){
a=Math.sqrt(1-a/rxry);
rx*=a;ry*=a;
cx=x/2;cy=y/2;}else 
{
a=Math.sqrt(a/(rxcy+rycx));
if(large==clockwise)a=-a;
var cxd=-a*cy*rx/ry,
cyd=a*cx*ry/rx;
cx=cos*cxd-sin*cyd+x/2;
cy=sin*cxd+cos*cyd+y/2;}



var xx=cos/rx,yx=sin/rx,
xy=-sin/ry,yy=cos/ry;


var sa=Math.atan2(xy*-cx+yy*-cy,xx*-cx+yx*-cy),
ea=Math.atan2(xy*(x-cx)+yy*(y-cy),xx*(x-cx)+yx*(y-cy));

cx+=tX;cy+=tY;
x+=tX;y+=tY;


if(this.penDownX==null){this.penDownX=this.penX;this.penDownY=this.penY;}
this.onArc(
tX,tY,this._pivotX=this.penX=x,this._pivotY=this.penY=y,
cx,cy,rx,ry,sa,ea,!clockwise,rotation);

return this;},


counterArc:function(x,y,rx,ry,outer){
return this.arc(x,y,rx,ry,outer,true);},

counterArcTo:function(x,y,rx,ry,outer){
return this.arcTo(x,y,rx,ry,outer,true);},


close:function(){
if(this.penDownX!=null){
this.onClose(this.penX,this.penY,this.penX=this.penDownX,this.penY=this.penDownY);
this.penDownX=null;}

return this;},




onReset:function(){},


onMove:function(sx,sy,ex,ey){},


onLine:function(sx,sy,ex,ey){
this.onBezierCurve(sx,sy,sx,sy,ex,ey,ex,ey);},


onBezierCurve:function(sx,sy,c1x,c1y,c2x,c2y,ex,ey){
var gx=ex-sx,gy=ey-sy,
g=gx*gx+gy*gy,
v1,v2,cx,cy,u;

cx=c1x-sx;cy=c1y-sy;
u=cx*gx+cy*gy;

if(u>g){
cx-=gx;
cy-=gy;}else 
if(u>0&&g!=0){
cx-=u/g*gx;
cy-=u/g*gy;}


v1=cx*cx+cy*cy;

cx=c2x-sx;cy=c2y-sy;
u=cx*gx+cy*gy;

if(u>g){
cx-=gx;
cy-=gy;}else 
if(u>0&&g!=0){
cx-=u/g*gx;
cy-=u/g*gy;}


v2=cx*cx+cy*cy;

if(v1<0.01&&v2<0.01){
this.onLine(sx,sy,ex,ey);
return;}



if(isNaN(v1)||isNaN(v2)){
throw new Error('Bad input');}



var s1x=(c1x+c2x)*0.5,s1y=(c1y+c2y)*0.5,
l1x=(c1x+sx)*0.5,l1y=(c1y+sy)*0.5,
l2x=(l1x+s1x)*0.5,l2y=(l1y+s1y)*0.5,
r2x=(ex+c2x)*0.5,r2y=(ey+c2y)*0.5,
r1x=(r2x+s1x)*0.5,r1y=(r2y+s1y)*0.5,
l2r1x=(l2x+r1x)*0.5,l2r1y=(l2y+r1y)*0.5;


this.onBezierCurve(sx,sy,l1x,l1y,l2x,l2y,l2r1x,l2r1y);
this.onBezierCurve(l2r1x,l2r1y,r1x,r1y,r2x,r2y,ex,ey);},


onArc:function(sx,sy,ex,ey,cx,cy,rx,ry,sa,ea,ccw,rotation){

var rad=rotation?rotation*Math.PI/180:0,cos=Math.cos(rad),sin=Math.sin(rad),
xx=cos*rx,yx=-sin*ry,
xy=sin*rx,yy=cos*ry;


var arc=ea-sa;
if(arc<0&&!ccw)arc+=Math.PI*2;else 
if(arc>0&&ccw)arc-=Math.PI*2;

var n=Math.ceil(Math.abs(arc/(Math.PI/2))),
step=arc/n,
k=4/3*Math.tan(step/4);

var x=Math.cos(sa),y=Math.sin(sa);

for(var i=0;i<n;i++){
var cp1x=x-k*y,cp1y=y+k*x;

sa+=step;
x=Math.cos(sa);y=Math.sin(sa);

var cp2x=x+k*y,cp2y=y-k*x;

this.onBezierCurve(
sx,sy,
cx+xx*cp1x+yx*cp1y,cy+xy*cp1x+yy*cp1y,
cx+xx*cp2x+yx*cp2y,cy+xy*cp2x+yy*cp2y,
sx=cx+xx*x+yx*y,sy=cy+xy*x+yy*y);}},




onClose:function(sx,sy,ex,ey){
this.onLine(sx,sy,ex,ey);}});
});
__d('art/core/transform.js',function(global, require, module, exports) {  var Class=require('art/core/class.js');

function Transform(xx,yx,xy,yy,x,y){
if(xx&&typeof xx=='object'){
yx=xx.yx;yy=xx.yy;y=xx.y;
xy=xx.xy;x=xx.x;xx=xx.xx;}

this.xx=xx==null?1:xx;
this.yx=yx||0;
this.xy=xy||0;
this.yy=yy==null?1:yy;
this.x=(x==null?this.x:x)||0;
this.y=(y==null?this.y:y)||0;
this._transform();
return this;}
;

module.exports=Class({

initialize:Transform,

_transform:function(){},

xx:1,yx:0,x:0,
xy:0,yy:1,y:0,

transform:function(xx,yx,xy,yy,x,y){
var m=this;
if(xx&&typeof xx=='object'){
yx=xx.yx;yy=xx.yy;y=xx.y;
xy=xx.xy;x=xx.x;xx=xx.xx;}

if(!x)x=0;
if(!y)y=0;
return this.transformTo(
m.xx*xx+m.xy*yx,
m.yx*xx+m.yy*yx,
m.xx*xy+m.xy*yy,
m.yx*xy+m.yy*yy,
m.xx*x+m.xy*y+m.x,
m.yx*x+m.yy*y+m.y);},



transformTo:Transform,

translate:function(x,y){
return this.transform(1,0,0,1,x,y);},


move:function(x,y){
this.x+=x||0;
this.y+=y||0;
this._transform();
return this;},


scale:function(x,y){
if(y==null)y=x;
return this.transform(x,0,0,y,0,0);},


rotate:function(deg,x,y){
if(x==null||y==null){
x=(this.left||0)+(this.width||0)/2;
y=(this.top||0)+(this.height||0)/2;}


var rad=deg*Math.PI/180,sin=Math.sin(rad),cos=Math.cos(rad);

this.transform(1,0,0,1,x,y);
var m=this;

return this.transformTo(
cos*m.xx-sin*m.yx,
sin*m.xx+cos*m.yx,
cos*m.xy-sin*m.yy,
sin*m.xy+cos*m.yy,
m.x,
m.y).
transform(1,0,0,1,-x,-y);},


moveTo:function(x,y){
var m=this;
return this.transformTo(m.xx,m.yx,m.xy,m.yy,x,y);},


rotateTo:function(deg,x,y){
var m=this;
var flip=m.yx/m.xx>m.yy/m.xy?-1:1;
if(m.xx<0?m.xy>=0:m.xy<0)flip=-flip;
return this.rotate(deg-Math.atan2(flip*m.yx,flip*m.xx)*180/Math.PI,x,y);},


scaleTo:function(x,y){

var m=this;

var h=Math.sqrt(m.xx*m.xx+m.yx*m.yx);
m.xx/=h;m.yx/=h;

h=Math.sqrt(m.yy*m.yy+m.xy*m.xy);
m.yy/=h;m.xy/=h;

return this.scale(x,y);},


resizeTo:function(width,height){
var w=this.width,h=this.height;
if(!w||!h)return this;
return this.scaleTo(width/w,height/h);},
















inversePoint:function(x,y){
var a=this.xx,b=this.yx,
c=this.xy,d=this.yy,
e=this.x,f=this.y;
var det=b*c-a*d;
if(det==0)return null;
return {
x:(d*(e-x)+c*(y-f))/det,
y:(a*(f-y)+b*(x-e))/det};},



point:function(x,y){
var m=this;
return {
x:m.xx*x+m.xy*y+m.x,
y:m.yx*x+m.yy*y+m.y};}});
});
__d('DatePickerIOS',function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');














var DatePickerIOS=React.createClass({displayName:'DatePickerIOS',

_picker:undefined,

mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number}),


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange&&this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange&&this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(this._picker&&nativeTimeStamp!==propsTimeStamp){
this._picker.setNativeProps({
date:propsTimeStamp});}},




render:function(){var _this=this;
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:function(picker){return _this._picker=picker;},
style:styles.datePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:props.mode,
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS,{
nativeOnly:{onChange:true}});


module.exports=DatePickerIOS;
});
__d('DrawerLayoutAndroid',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('Image',function(global, require, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var warning=require('warning');

























var Image=React.createClass({displayName:'Image',
propTypes:{
style:StyleSheetPropType(ImageStylePropTypes),





source:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]),





defaultSource:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]),





accessible:PropTypes.bool,





accessibilityLabel:PropTypes.string,








capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),




testID:PropTypes.string,




onLayout:PropTypes.func,



onLoadStart:PropTypes.func,




onProgress:PropTypes.func,




onError:PropTypes.func,



onLoad:PropTypes.func,



onLoadEnd:PropTypes.func},


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


contextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var source=resolveAssetSource(this.props.source)||{};var 
width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style])||{};

var isNetwork=source.uri&&source.uri.match(/^https?:/);
var RawImage=isNetwork?RCTNetworkImageView:RCTImageView;
var resizeMode=this.props.resizeMode||(style||{}).resizeMode||'cover';
var tintColor=(style||{}).tintColor;



if(isNetwork&&tintColor){
RawImage=RCTImageView;}


if(this.context.isInAParentText){
return React.createElement(RCTVirtualImage,{source:source});}else 
{
return (
React.createElement(RawImage,babelHelpers.extends({},
this.props,{
style:style,
resizeMode:resizeMode,
tintColor:tintColor,
source:source})));}}});






var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var RCTImageView=requireNativeComponent('RCTImageView',Image);
var RCTNetworkImageView=NativeModules.NetworkImageViewManager?requireNativeComponent('RCTNetworkImageView',Image):RCTImageView;
var RCTVirtualImage=requireNativeComponent('RCTVirtualImage',Image);

module.exports=Image;
});
__d('EdgeInsetsPropType',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports=EdgeInsetsPropType;
});
__d('ListView',function(global, require, module, exports) {  'use strict';



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView',
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:babelHelpers.extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,








renderSeparator:PropTypes.func,











renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,






renderScrollComponent:React.PropTypes.func.isRequired,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentLength:this.scrollProperties.contentLength,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF]&&
this.refs[SCROLLVIEW_REF].getScrollResponder&&
this.refs[SCROLLVIEW_REF].getScrollResponder();},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
renderScrollComponent:function(props){return React.createElement(ScrollView,props);},
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



getInnerViewNode:function(){
return this.refs[SCROLLVIEW_REF].getInnerViewNode();},


componentWillMount:function(){

this.scrollProperties={
visibleLength:null,
contentLength:null,
offset:0};

this._childFrames=[];
this._visibleRows={};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource!==nextProps.dataSource){
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount+props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0,
curRenderedRowsCount:rowsToRender};});}},





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader&&this.props.renderHeader();
var footer=this.props.renderFooter&&this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length===0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount>=this.state.prevRenderedRowsCount&&
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_'+sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx<rowIDs.length;rowIdx++){
var rowID=rowIDs[rowIdx];
var comboID=sectionID+'_'+rowID;
var shouldUpdateRow=rowCount>=this.state.prevRenderedRowsCount&&
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_'+comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator&&(
rowIdx!==rowIDs.length-1||sectionIdx===allRowIDs.length-1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID===sectionID&&(
this.state.highlightedRow.rowID===rowID||
this.state.highlightedRow.rowID===rowIDs[rowIdx+1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount===this.state.curRenderedRowsCount){
break;}}


if(rowCount>=this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=babelHelpers.objectWithoutProperties(_props,['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle=DEFAULT_SCROLL_CALLBACK_THROTTLE;}

if(props.removeClippedSubviews===undefined){
props.removeClippedSubviews=true;}

babelHelpers.extends(props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices,



onKeyboardWillShow:undefined,
onKeyboardWillHide:undefined,
onKeyboardDidShow:undefined,
onKeyboardDidHide:undefined});




return React.cloneElement(renderScrollComponent(props),{
ref:SCROLLVIEW_REF,
onContentSizeChange:this._onContentSizeChange,
onLayout:this._onLayout},
header,bodyComponents,footer);},






_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent||!scrollComponent.getInnerViewNode){
return;}




RCTScrollViewManager&&RCTScrollViewManager.calculateChildFrames&&
RCTScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent),
this._updateChildFrames);},



_onContentSizeChange:function(width,height){
this.scrollProperties.contentLength=!this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_onLayout:function(event){var _event$nativeEvent$la=
event.nativeEvent.layout;var width=_event$nativeEvent$la.width;var height=_event$nativeEvent$la.height;
this.scrollProperties.visibleLength=!this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_setScrollVisibleLength:function(left,top,width,height){
this.scrollProperties.visibleLength=!this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);},


_maybeCallOnEndReached:function(event){
if(this.props.onEndReached&&
this.scrollProperties.contentLength!==this._sentEndForContentLength&&
this._getDistanceFromEnd(this.scrollProperties)<this.props.onEndReachedThreshold&&
this.state.curRenderedRowsCount===this.props.dataSource.getRowCount()){
this._sentEndForContentLength=this.scrollProperties.contentLength;
this.props.onEndReached(event);
return true;}

return false;},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentLength===null||
this.scrollProperties.visibleLength===null||
this.state.curRenderedRowsCount===this.props.dataSource.getRowCount()){
this._maybeCallOnEndReached();
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd<this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this3=this;
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount+props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender};},

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});},




_getDistanceFromEnd:function(scrollProperties){
var maxLength=Math.max(
scrollProperties.contentLength,
scrollProperties.visibleLength);

return maxLength-scrollProperties.visibleLength-scrollProperties.offset;},


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index]=merge(newFrame);});}


var isVertical=!this.props.horizontal;
var dataSource=this.props.dataSource;
var visibleMin=this.scrollProperties.offset;
var visibleMax=visibleMin+this.scrollProperties.visibleLength;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader&&this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length===0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection={};}

for(var rowIdx=0;rowIdx<rowIDs.length;rowIdx++){
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var min=isVertical?frame.y:frame.x;
var max=min+(isVertical?frame.height:frame.width);
if(min>visibleMax||max<visibleMin){
if(rowVisible){
visibilityChanged=true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID]={};}

changedRows[sectionID][rowID]=false;}}else 

if(!rowVisible){
visibilityChanged=true;
visibleSection[rowID]=true;
if(!changedRows[sectionID]){
changedRows[sectionID]={};}

changedRows[sectionID][rowID]=true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID]=visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged&&this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
var isVertical=!this.props.horizontal;
this.scrollProperties.visibleLength=e.nativeEvent.layoutMeasurement[
isVertical?'height':'width'];

this.scrollProperties.contentLength=e.nativeEvent.contentSize[
isVertical?'height':'width'];

this.scrollProperties.offset=e.nativeEvent.contentOffset[
isVertical?'y':'x'];

this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
if(!this._maybeCallOnEndReached(e)){
this._renderMoreRowsIfNeeded();}


if(this.props.onEndReached&&
this._getDistanceFromEnd(this.scrollProperties)>this.props.onEndReachedThreshold){

this._sentEndForContentLength=null;}


this.props.onScroll&&this.props.onScroll(e);}});



module.exports=ListView;
});
__d('ListViewDataSource',function(global, require, module, exports) {  'use strict';





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=function(){


























function ListViewDataSource(params){babelHelpers.classCallCheck(this,ListViewDataSource);
invariant(
params&&typeof params.rowHasChanged==='function',
'Must provide a rowHasChanged function.');

this._rowHasChanged=params.rowHasChanged;
this._getRowData=params.getRowData||defaultGetRowData;
this._sectionHeaderHasChanged=params.sectionHeaderHasChanged;
this._getSectionHeaderData=
params.getSectionHeaderData||defaultGetSectionHeaderData;

this._dataBlob=null;
this._dirtyRows=[];
this._dirtySections=[];
this._cachedRowCount=0;



this.rowIdentities=[];
this.sectionIdentities=[];}babelHelpers.createClass(ListViewDataSource,[{key:'cloneWithRows',value:function cloneWithRows(



















dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged=function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:function cloneWithRowsAndSections(














dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged==='function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob=dataBlob;
if(sectionIdentities){
newSource.sectionIdentities=sectionIdentities;}else 
{
newSource.sectionIdentities=Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities=rowIdentities;}else 
{
newSource.rowIdentities=[];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount=countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:function getRowCount()


{
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:function rowShouldUpdate(





sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate!==undefined,
'missing dirtyBit for section, row: '+sectionIndex+', '+rowIndex);
return needsUpdate;}},{key:'getRowData',value:function getRowData(





sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID!==undefined&&rowID!==undefined,
'rendering invalid section, row: '+sectionIndex+', '+rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:function getRowIDForFlatIndex(






index){
var accessIndex=index;
for(var ii=0;ii<this.sectionIdentities.length;ii++){
if(accessIndex>=this.rowIdentities[ii].length){
accessIndex-=this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:function getSectionIDForFlatIndex(






index){
var accessIndex=index;
for(var ii=0;ii<this.sectionIdentities.length;ii++){
if(accessIndex>=this.rowIdentities[ii].length){
accessIndex-=this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:function getSectionLengths()





{
var results=[];
for(var ii=0;ii<this.sectionIdentities.length;ii++){
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:function sectionHeaderShouldUpdate(





sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate!==undefined,
'missing dirtyBit for section: '+sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:function getSectionHeaderData(





sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID!==undefined,
'renderSection called on invalid section: '+sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:function _calculateDirtyArrays(






















prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii<prevRowIDs.length;ii++){
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: '+sectionID);

prevRowsHash[sectionID]=keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections=[];
this._dirtyRows=[];

var dirty;
for(var sIndex=0;sIndex<this.sectionIdentities.length;sIndex++){
var sectionID=this.sectionIdentities[sIndex];

dirty=!prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty&&sectionHeaderHasChanged){
dirty=sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex]=[];
for(var rIndex=0;rIndex<this.rowIdentities[sIndex].length;rIndex++){
var rowID=this.rowIdentities[sIndex][rIndex];

dirty=
!prevSectionsHash[sectionID]||
!prevRowsHash[sectionID][rowID]||
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;}();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx<allRowIDs.length;sectionIdx++){
var rowIDs=allRowIDs[sectionIdx];
totalRows+=rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii<arr.length;ii++){
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: '+key);
result[key]=true;}

return result;}



module.exports=ListViewDataSource;
});
__d('isEmpty',function(global, require, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length===0;}else 
if(typeof obj==='object'){
for(var i in obj){
return false;}

return true;}else 
{
return !obj;}}



module.exports=isEmpty;
});
__d('ScrollView',function(global, require, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var deepDiffer=require('deepDiffer');
var dismissKeyboard=require('dismissKeyboard');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';
















var ScrollView=React.createClass({displayName:'ScrollView',
propTypes:babelHelpers.extends({},
View.propTypes,{






automaticallyAdjustContentInsets:PropTypes.bool,





contentInset:EdgeInsetsPropType,





contentOffset:PointPropType,







bounces:PropTypes.bool,






bouncesZoom:PropTypes.bool,






alwaysBounceHorizontal:PropTypes.bool,






alwaysBounceVertical:PropTypes.bool,







centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),







decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,





directionalLockEnabled:PropTypes.bool,





canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,




maximumZoomScale:PropTypes.number,




minimumZoomScale:PropTypes.number,




onScroll:PropTypes.func,




onScrollAnimationEnd:PropTypes.func,





onContentSizeChange:PropTypes.func,






pagingEnabled:PropTypes.bool,





scrollEnabled:PropTypes.bool,









scrollEventThrottle:PropTypes.number,






scrollIndicatorInsets:EdgeInsetsPropType,





scrollsToTop:PropTypes.bool,



showsHorizontalScrollIndicator:PropTypes.bool,



showsVerticalScrollIndicator:PropTypes.bool,








stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),
style:StyleSheetPropType(ViewStylePropTypes),







snapToInterval:PropTypes.number,








snapToAlignment:PropTypes.oneOf([
'start',
'center',
'end']),







removeClippedSubviews:PropTypes.bool,




zoomScale:PropTypes.number,













onRefreshStart:PropTypes.func}),



mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},


endRefreshing:function(){
RCTScrollViewManager.endRefreshing(
React.findNodeHandle(this));},









getScrollResponder:function(){
return this;},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollTo(destX||0,destY||0);},


scrollWithoutAnimationTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollWithouthAnimationTo(
destX||0,
destY||0);},



handleScroll:function(e){
if(__DEV__){
if(this.props.onScroll&&!this.props.scrollEventThrottle){
console.log(
'You specified `onScroll` on a <ScrollView> but not '+
'`scrollEventThrottle`. You will only receive one event. '+
'Using `16` you get all the events but be aware that it may '+
'cause frame drops, use a bigger number if you don\'t need as '+
'much precision.');}}



if(Platform.OS==='android'){
if(this.props.keyboardDismissMode==='on-drag'){
dismissKeyboard();}}


this.scrollResponderHandleScroll(e);},


_handleContentOnLayout:function(e){var _e$nativeEvent$layout=
e.nativeEvent.layout;var width=_e$nativeEvent$layout.width;var height=_e$nativeEvent$layout.height;
this.props.onContentSizeChange&&this.props.onContentSizeChange(width,height);},


render:function(){
var contentContainerStyle=[
this.props.horizontal&&styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__&&this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style&&style[prop]!==undefined;});
invariant(
childLayoutProps.length===0,
'ScrollView child layout ('+JSON.stringify(childLayoutProps)+
') must by applied through the contentContainerStyle prop.');}



var contentSizeChangeProps={};
if(this.props.onContentSizeChange){
contentSizeChangeProps={
onLayout:this._handleContentOnLayout};}



var contentContainer=
React.createElement(View,babelHelpers.extends({},
contentSizeChangeProps,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews,
collapsable:false}),
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal!==undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical!==undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=babelHelpers.extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.handleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var onRefreshStart=this.props.onRefreshStart;


props.onRefreshStart=onRefreshStart?
function(){onRefreshStart&&onRefreshStart(this.endRefreshing);}.bind(this):
null;

var ScrollViewClass;
if(Platform.OS==='ios'){
ScrollViewClass=RCTScrollView;}else 
if(Platform.OS==='android'){
if(this.props.horizontal){
ScrollViewClass=AndroidHorizontalScrollView;}else 
{
ScrollViewClass=AndroidScrollView;}}


invariant(
ScrollViewClass!==undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,babelHelpers.extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=babelHelpers.extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
snapToInterval:true,
snapToAlignment:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS==='android'){
var AndroidScrollView=requireNativeComponent('RCTScrollView',ScrollView);
var AndroidHorizontalScrollView=requireNativeComponent(
'AndroidHorizontalScrollView',
ScrollView);}else 

if(Platform.OS==='ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports=ScrollView;
});
__d('PointPropType',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports=PointPropType;
});
__d('ScrollResponder',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');var _require=

require('NativeModules');var UIManager=_require.UIManager;var ScrollViewManager=_require.ScrollViewManager;

var invariant=require('invariant');
var warning=require('warning');

















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps&&
currentlyFocusedTextInput!=null&&
e.target!==currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching=nativeEvent.touches.length!==0;
this.props.onTouchEnd&&this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease&&this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps&&
currentlyFocusedTextInput!=null&&
e.target!==currentlyFocusedTextInput&&
!this.state.observedScrollSinceBecomingResponder&&
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed&&
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder=true;
this.props.onScroll&&this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder=false;
this.props.onResponderGrant&&this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating=this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag&&this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag&&this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime=Date.now();
this.props.onMomentumScrollBegin&&this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime=Date.now();
this.props.onMomentumScrollEnd&&this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching=true;
this.props.onTouchStart&&this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove&&this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now-this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd<IS_ANIMATING_TOUCH_START_THRESHOLD_MS||
this.state.lastMomentumScrollEndTime<this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.RCTScrollView.Commands.scrollTo,
[Math.round(offsetX),Math.round(offsetY)]);}else 

{
ScrollViewManager.scrollTo(
React.findNodeHandle(this),
{x:offsetX,y:offsetY});}},








scrollResponderScrollWithouthAnimationTo:function(offsetX,offsetY){
if(Platform.OS==='android'){
UIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
UIManager.RCTScrollView.Commands.scrollWithoutAnimationTo,
[offsetX,offsetY]);}else 

{
ScrollViewManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
{x:offsetX,y:offsetY});}},








scrollResponderZoomTo:function(rect){
if(Platform.OS==='android'){
invariant('zoomToRect is not implemented');}else 
{
ScrollViewManager.zoomToRect(React.findNodeHandle(this),rect);}},













scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset=additionalOffset||0;
this.preventNegativeScrollOffset=!!preventNegativeScrollOffset;
UIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this.getInnerViewNode()),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
var keyboardScreenY=Dimensions.get('window').height;
if(this.keyboardWillOpenTo){
keyboardScreenY=this.keyboardWillOpenTo.endCoordinates.screenY;}

var scrollOffsetY=top-keyboardScreenY+height+this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY=Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);

this.additionalOffset=0;
this.preventNegativeScrollOffset=false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo=null;
this.additionalScrollOffset=0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo=e;
this.props.onKeyboardWillShow&&this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo=null;
this.props.onKeyboardWillHide&&this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(e){


if(e){
this.keyboardWillOpenTo=e;}

this.props.onKeyboardDidShow&&this.props.onKeyboardDidShow(e);},


scrollResponderKeyboardDidHide:function(e){
this.keyboardWillOpenTo=null;
this.props.onKeyboardDidHide&&this.props.onKeyboardDidHide(e);}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports=ScrollResponder;
});
__d('Subscribable',function(global, require, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin={

componentWillMount:function(){
this._subscribableSubscriptions=[];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions=null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports=Subscribable;
});
__d('dismissKeyboard',function(global, require, module, exports) {  'use strict';








var TextInputState=require('TextInputState');

function dismissKeyboard(){
TextInputState.blurTextInput(TextInputState.currentlyFocusedField());}


module.exports=dismissKeyboard;
});
__d('StaticRenderer',function(global, require, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer',
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports=StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window==='undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter(function(){
_clearer.call(this,id);
callback.apply(this,arguments);}.
bind(this),delta);

if(!this[array]){
this[array]=[id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index!==-1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts]&&this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts]=null;
this[_intervals]&&this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals]=null;
this[_immediates]&&this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates]=null;
this[_rafs]&&this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs]=null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports=TimerMixin;
});
__d('MapView',function(global, require, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var RCTMap=require('UIManager').RCTMap;
var RCTMapConstants=RCTMap&&RCTMap.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var processColor=require('processColor');
var resolveAssetSource=require('resolveAssetSource');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView',
mixins:[NativeMethodsMixin],

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id=encodeURIComponent(JSON.stringify(annotation));}

return annotation;});


this.setState({
annotations:newAnnotations});},



checkOverlayIds:function(overlays){

var newOverlays=overlays.map(function(overlay){
if(!overlay.id){

overlay.id=encodeURIComponent(JSON.stringify(overlay));}

return overlay;});


this.setState({
overlays:newOverlays});},



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}

if(this.props.overlays){
this.checkOverlayIds(this.props.overlays);}},



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}

if(nextProps.overlays){
this.checkOverlayIds(nextProps.overlays);}},



propTypes:babelHelpers.extends({},
View.propTypes,{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,






showsPointsOfInterest:React.PropTypes.bool,






showsCompass:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,








mapType:React.PropTypes.oneOf([
'standard',
'satellite',
'hybrid']),








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




animateDrop:React.PropTypes.bool,




title:React.PropTypes.string,
subtitle:React.PropTypes.string,




hasLeftCallout:React.PropTypes.bool,
hasRightCallout:React.PropTypes.bool,




onLeftCalloutPress:React.PropTypes.func,
onRightCalloutPress:React.PropTypes.func,











tintColor:React.PropTypes.string,





image:Image.propTypes.source,




id:React.PropTypes.string})),





overlays:React.PropTypes.arrayOf(React.PropTypes.shape({



coordinates:React.PropTypes.arrayOf(React.PropTypes.shape({
latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired})),





lineWidth:React.PropTypes.number,
strokeColor:React.PropTypes.string,
fillColor:React.PropTypes.string,




id:React.PropTypes.string})),





maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func,




onAnnotationPress:React.PropTypes.func,




active:React.PropTypes.bool}),


render:function(){var _this=this;var _props=

this.props;var annotations=_props.annotations;var overlays=_props.overlays;
annotations=annotations&&annotations.map(function(annotation){var 
tintColor=annotation.tintColor;var image=annotation.image;
return babelHelpers.extends({},
annotation,{
tintColor:tintColor&&processColor(tintColor),
image:image&&resolveAssetSource(image)});});


overlays=overlays&&overlays.map(function(overlay){var 
strokeColor=overlay.strokeColor;var fillColor=overlay.fillColor;
return babelHelpers.extends({},
overlay,{
strokeColor:strokeColor&&processColor(strokeColor),
fillColor:fillColor&&processColor(fillColor)});});




if(annotations){
var onPress=function(event){
if(!annotations){
return;}

if(event.nativeEvent.action==='annotation-click'){
_this.props.onAnnotationPress&&
_this.props.onAnnotationPress(event.nativeEvent.annotation);}else 
if(event.nativeEvent.action==='callout-click'){

for(var i=0,l=annotations.length;i<l;i++){
var annotation=annotations[i];
if(annotation.id===event.nativeEvent.annotationId){

if(event.nativeEvent.side==='left'){
annotation.onLeftCalloutPress&&
annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side==='right'){
annotation.onRightCalloutPress&&
annotation.onRightCalloutPress(event.nativeEvent);}

break;}}}};}







if(this.props.onRegionChange||this.props.onRegionChangeComplete){
var onChange=function(event){
if(event.nativeEvent.continuous){
_this.props.onRegionChange&&
_this.props.onRegionChange(event.nativeEvent.region);}else 
{
_this.props.onRegionChangeComplete&&
_this.props.onRegionChangeComplete(event.nativeEvent.region);}};}




return (
React.createElement(RCTMap,babelHelpers.extends({},
this.props,{
annotations:annotations,
overlays:overlays,
onPress:onPress,
onChange:onChange})));}});












var PinColors=RCTMapConstants&&RCTMapConstants.PinColors;
MapView.PinColors=PinColors&&{
RED:PinColors.RED,
GREEN:PinColors.GREEN,
PURPLE:PinColors.PURPLE};


var RCTMap=requireNativeComponent('RCTMap',MapView,{
nativeOnly:{onChange:true,onPress:true}});


module.exports=MapView;
});
__d('Modal',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var RCTModalHostView=requireNativeComponent('RCTModalHostView',null);var 
















Modal=function(_React$Component){babelHelpers.inherits(Modal,_React$Component);function Modal(){babelHelpers.classCallCheck(this,Modal);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Modal).apply(this,arguments));}babelHelpers.createClass(Modal,[{key:'render',value:function render()
{
if(this.props.visible===false){
return null;}


if(this.props.transparent){
var containerBackgroundColor={backgroundColor:'transparent'};}


return (
React.createElement(RCTModalHostView,{
animated:this.props.animated,
transparent:this.props.transparent,
onDismiss:this.props.onDismiss,
style:styles.modal},
React.createElement(View,{style:[styles.container,containerBackgroundColor]},
this.props.children)));}}]);return Modal;}(React.Component);






Modal.propTypes={
animated:PropTypes.bool,
transparent:PropTypes.bool,
visible:PropTypes.bool,
onDismiss:PropTypes.func};


Modal.defaultProps={
visible:true};


var styles=StyleSheet.create({
modal:{
position:'absolute'},

container:{
left:0,
position:'absolute',
top:0}});



module.exports=Modal;
});
__d('Navigator',function(global, require, module, exports) {  'use strict';




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
pointerEvents:'none',
style:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}


function getRouteID(route){
if(route===null||typeof route!=='object'){
return String(route);}


var key='__navigatorRouteID';

if(!route.hasOwnProperty(key)){
Object.defineProperty(route,key,{
enumerable:false,
configurable:false,
writable:false,
value:getuid()});}


return route[key];}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];





























































var Navigator=React.createClass({displayName:'Navigator',

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),







onWillFocus:PropTypes.func,








onDidFocus:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
this._navigationBarNavigator=this.props.navigationBarNavigator||this;

this._renderedSceneMap=new Map();

var routeStack=this.props.initialRouteStack||[this.props.initialRoute];
invariant(
routeStack.length>=1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length-1;
if(this.props.initialRoute){
initialRouteIndex=routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex!==-1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

routeStack:routeStack,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext',this._getNavigationContext);

this._subRouteFocus=[];
this.parentNavigator=this.props.navigator;
this._handlers={};
this.springSystem=new rebound.SpringSystem();
this.spring=this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle=_this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture=PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._interactionHandle=null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);},


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext=null;}


this.spring.destroy();

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length-1;
this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex===this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex!==null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex=this.state.presentedIndex;
this.state.presentedIndex=destIndex;
this.state.transitionCb=cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex]||
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index '+this.state.transitionFromIndex);

if(jumpSpringTo!=null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction=sceneConfig.springFriction;
this.spring.getSpringConfig().tension=sceneConfig.springTension;
this.spring.setVelocity(velocity||sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);},






_handleSpringUpdate:function(){
if(!this.isMounted()){
return;}


if(this.state.transitionFromIndex!=null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture!=null){
var presentedToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(!this.isMounted()){
return;}


if(this.spring.getCurrentValue()!==1&&this.spring.getCurrentValue()!==0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress=null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex]||this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex=null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb=null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle=null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}},



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});

var navBar=this._navBar;
if(navBar&&navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i<this.state.routeStack.length;i++){
if(i===this.state.presentedIndex||
i===this.state.transitionFromIndex||
i===gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_'+sceneIndex]&&
this.refs['scene_'+sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
pointerEvents:'auto',
style:{
top:sceneStyle.top,
bottom:sceneStyle.bottom}};


if(sceneIndex!==this.state.transitionFromIndex&&
sceneIndex!==this.state.presentedIndex){


enabledSceneNativeProps.style.opacity=0;}

this.refs['scene_'+sceneIndex]&&
this.refs['scene_'+sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex!=null){
fromIndex=this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHardwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHardwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar&&navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length-1;
for(var index=0;index<=max;index++){
this._setRenderSceneToHardwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar&&navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHardwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_'+sceneIndex];
if(viewAtIndex===null||viewAtIndex===undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures=GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(!sceneConfig){
return false;}

this._expectingGestureGrant=
this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex<=0&&(
gestureName==='pop'||gestureName==='jumpBack');
var wouldOverswipeForward=this.state.presentedIndex>=this.state.routeStack.length-1&&
gestureName==='jumpForward';
return wouldOverswipeForward||wouldOverswipeBack;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action '+gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue()===0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction==='top-to-bottom'||releaseGesture.direction==='bottom-to-top';
var isTravelInverted=releaseGesture.direction==='right-to-left'||releaseGesture.direction==='bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity=isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance=isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity=isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance=isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity)<releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance>releaseGesture.fullDistance*releaseGesture.stillCompletionRatio;
transitionVelocity=hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity<0||this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex==null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex=destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1-this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction==='pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
if(this.state.activeGesture==null){
return;}

var destIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex=destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1-this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture=gestureId;
var gesturingToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture=null;
this.state.pendingGestureProgress=null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
if(this._isMoveGestureAttached!==undefined){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant=undefined;}


var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction==='top-to-bottom'||gesture.direction==='bottom-to-top';
var isTravelInverted=gesture.direction==='right-to-left'||gesture.direction==='bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance=isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance-gestureDetectMovement)/(
gesture.fullDistance-gestureDetectMovement);
if(nextProgress<0&&gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex+this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress!=null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1/(frictionConstant+Math.abs(nextProgress)*frictionByDistance);
nextProgress*=frictionRatio;}

nextProgress=clamp(0,nextProgress,1);
if(this.state.transitionFromIndex!=null){
this.state.pendingGestureProgress=nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe==null&&_this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction==='top-to-bottom'||gesture.direction==='bottom-to-top';
var isTravelInverted=gesture.direction==='right-to-left'||gesture.direction==='bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc=-currentLoc;
travelDist=-travelDist;
oppositeAxisTravelDist=-oppositeAxisTravelDist;
edgeHitWidth=isTravelVertical?
-(SCREEN_HEIGHT-edgeHitWidth):
-(SCREEN_WIDTH-edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth==null||
currentLoc<edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist>=gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist)>Math.abs(oppositeAxisTravelDist)*gesture.directionRatio;
if(directionIsCorrect){
matchedGesture=gestureName;
return true;}else 
{
_this5._eligibleGestures=_this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture||null;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_'+index];
if(viewAtIndex===null||viewAtIndex===undefined){
return;}


var sceneConfigIndex=fromIndex<toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig=this.state.sceneConfigStack[sceneConfigIndex-1];}

var styleToUse={};
var useFn=index<fromIndex||index<toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex<toIndex?progress:1-progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar&&navBar.updateProgress&&toIndex>=0&&fromIndex>=0){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex+n;
invariant(
destIndex>=0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length-1;
invariant(
maxIndex>=destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex!==-1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex-this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex+1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length-1;
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack},
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});},



_popN:function(n){var _this7=this;
if(n===0){
return;}

invariant(
this.state.presentedIndex-n>=0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex-n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
if(this.state.transitionQueue.length){






return;}


if(this.state.presentedIndex>0){
this._popN(1);}},









replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index<0){
index+=this.state.routeStack.length;}


if(this.state.routeStack.length<=index){
return;}


var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextRouteStack[index]=route;
nextAnimationModeStack[index]=this.props.configureScene(route);

if(index===this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack},
function(){
if(index===_this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb&&cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex-1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute!==-1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex-indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length<2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex>0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){

return this.state.routeStack.slice();},


_cleanScenesPastIndex:function(index){
var newStackLength=index+1;

if(newStackLength<this.state.routeStack.length){
this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)});}},




_renderScene:function(route,i){var _this10=this;
var disabledSceneStyle=null;
var disabledScenePointerEvents='auto';
if(i!==this.state.presentedIndex){
disabledSceneStyle=styles.disabledScene;
disabledScenePointerEvents='none';}

return (
React.createElement(View,{
key:'scene_'+getRouteID(route),
ref:'scene_'+i,
onStartShouldSetResponderCapture:function(){
return _this10.state.transitionFromIndex!=null||_this10.state.transitionFromIndex!=null;},

pointerEvents:disabledScenePointerEvents,
style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
this.props.renderScene(
route,
this)));},





_renderNavigationBar:function(){var _this11=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){
_this11.props.navigationBar.ref instanceof Function&&_this11.props.navigationBar.ref(navBar);
_this11._navBar=navBar;},

navigator:this._navigationBarNavigator,
navState:this.state});},



render:function(){var _this12=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route,index){
var renderedScene;
if(_this12._renderedSceneMap.has(route)&&
index!==_this12.state.presentedIndex){
renderedScene=_this12._renderedSceneMap.get(route);}else 
{
renderedScene=_this12._renderScene(route,index);}

newRenderedSceneMap.set(route,renderedScene);
return renderedScene;});

this._renderedSceneMap=newRenderedSceneMap;
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(View,babelHelpers.extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

scenes),

this._renderNavigationBar()));},




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext=new NavigationContext();}

return this._navigationContext;}});



module.exports=Navigator;
});
__d('InteractionMixin',function(global, require, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length){
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles=this._interactionMixinHandles.filter(
function(handle){return handle!==clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports=InteractionMixin;
});
__d('NavigationContext',function(global, require, module, exports) {  'use strict';




























var NavigationEvent=require('NavigationEvent');
var NavigationEventEmitter=require('NavigationEventEmitter');
var NavigationTreeNode=require('NavigationTreeNode');

var Set=require('Set');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 




AT_TARGET=


NavigationEvent.AT_TARGET;var BUBBLING_PHASE=NavigationEvent.BUBBLING_PHASE;var CAPTURING_PHASE=NavigationEvent.CAPTURING_PHASE;



var LegacyEventTypes=new Set([
'willfocus',
'didfocus']);var 





NavigationContext=function(){







function NavigationContext(){babelHelpers.classCallCheck(this,NavigationContext);
this._bubbleEventEmitter=new NavigationEventEmitter(this);
this._captureEventEmitter=new NavigationEventEmitter(this);
this._currentRoute=null;


this.__node=new NavigationTreeNode(this);

this._emitCounter=0;
this._emitQueue=[];

this.addListener('willfocus',this._onFocus);
this.addListener('didfocus',this._onFocus);}babelHelpers.createClass(NavigationContext,[{key:'appendChild',value:function appendChild(
























childContext){
this.__node.appendChild(childContext.__node);}},{key:'addListener',value:function addListener(



eventType,
listener,
useCapture)
{
if(LegacyEventTypes.has(eventType)){
useCapture=false;}


var emitter=useCapture?
this._captureEventEmitter:
this._bubbleEventEmitter;

if(emitter){
return emitter.addListener(eventType,listener,this);}else 
{
return {remove:emptyFunction};}}},{key:'emit',value:function emit(



eventType,data,didEmitCallback){var _this=this;
if(this._emitCounter>0){


var args=Array.prototype.slice.call(arguments);
this._emitQueue.push(args);
return;}


this._emitCounter++;

if(LegacyEventTypes.has(eventType)){

this.__emit(
eventType,
data,
null,
{
defaultPrevented:false,
eventPhase:AT_TARGET,
propagationStopped:true,
target:this});}else 


{
var targets=[this];
var parentTarget=this.parent;
while(parentTarget){
targets.unshift(parentTarget);
parentTarget=parentTarget.parent;}


var propagationStopped=false;
var defaultPrevented=false;
var callback=function(event){
propagationStopped=propagationStopped||event.isPropagationStopped();
defaultPrevented=defaultPrevented||event.defaultPrevented;};



targets.some(function(currentTarget){
if(propagationStopped){
return true;}


var extraInfo={
defaultPrevented:defaultPrevented,
eventPhase:CAPTURING_PHASE,
propagationStopped:propagationStopped,
target:_this};


currentTarget.__emit(eventType,data,callback,extraInfo);},
this);


targets.reverse().some(function(currentTarget){
if(propagationStopped){
return true;}

var extraInfo={
defaultPrevented:defaultPrevented,
eventPhase:BUBBLING_PHASE,
propagationStopped:propagationStopped,
target:_this};

currentTarget.__emit(eventType,data,callback,extraInfo);},
this);}


if(didEmitCallback){
var event=NavigationEvent.pool(eventType,this,data);
propagationStopped&&event.stopPropagation();
defaultPrevented&&event.preventDefault();
didEmitCallback.call(this,event);
event.dispose();}


this._emitCounter--;
while(this._emitQueue.length){
var args=this._emitQueue.shift();
this.emit.apply(this,args);}}},{key:'dispose',value:function dispose()



{

this._bubbleEventEmitter&&this._bubbleEventEmitter.removeAllListeners();
this._captureEventEmitter&&this._captureEventEmitter.removeAllListeners();
this._bubbleEventEmitter=null;
this._captureEventEmitter=null;
this._currentRoute=null;}},{key:'__emit',value:function __emit(




eventType,
data,
didEmitCallback,
extraInfo)
{
var emitter;
switch(extraInfo.eventPhase){
case CAPTURING_PHASE:
emitter=this._captureEventEmitter;
break;

case AT_TARGET:
emitter=this._bubbleEventEmitter;
break;

case BUBBLING_PHASE:
emitter=this._bubbleEventEmitter;
break;

default:
invariant(false,'invalid event phase %s',extraInfo.eventPhase);}


if(extraInfo.target===this){

extraInfo.eventPhase=AT_TARGET;}


if(emitter){
emitter.emit(
eventType,
data,
didEmitCallback,
extraInfo);}}},{key:'_onFocus',value:function _onFocus(




event){
invariant(
event.data&&event.data.hasOwnProperty('route'),
'event type "%s" should provide route',
event.type);


this._currentRoute=event.data.route;}},{key:'parent',get:function(){var parent=this.__node.getParent();return parent?parent.getValue():null;}},{key:'top',get:function(){var result=null;var parentNode=this.__node.getParent();while(parentNode){result=parentNode.getValue();parentNode=parentNode.getParent();}return result;}},{key:'currentRoute',get:function(){return this._currentRoute;}}]);return NavigationContext;}();



module.exports=NavigationContext;
});
__d('NavigationEvent',function(global, require, module, exports) {  'use strict';




























var invariant=require('invariant');var 

NavigationEventPool=function(){


function NavigationEventPool(){babelHelpers.classCallCheck(this,NavigationEventPool);
this._list=[];}babelHelpers.createClass(NavigationEventPool,[{key:'get',value:function get(


type,currentTarget,data){
var event;
if(this._list.length>0){
event=this._list.pop();
event.constructor.call(event,type,currentTarget,data);}else 
{
event=new NavigationEvent(type,currentTarget,data);}

return event;}},{key:'put',value:function put(


event){
this._list.push(event);}}]);return NavigationEventPool;}();



var _navigationEventPool=new NavigationEventPool();var 























NavigationEvent=function(){babelHelpers.createClass(NavigationEvent,null,[{key:'pool',value:function pool(


















type,currentTarget,data){
return _navigationEventPool.get(type,currentTarget,data);}}]);


function NavigationEvent(type,currentTarget,data){babelHelpers.classCallCheck(this,NavigationEvent);
this.target=currentTarget;
this.eventPhase=NavigationEvent.NONE;

this._type=type;
this._currentTarget=currentTarget;
this._data=data;
this._defaultPrevented=false;
this._disposed=false;
this._propagationStopped=false;}babelHelpers.createClass(NavigationEvent,[{key:'preventDefault',value:function preventDefault()






















{
this._defaultPrevented=true;}},{key:'stopPropagation',value:function stopPropagation()


{
this._propagationStopped=true;}},{key:'stop',value:function stop()


{
this.preventDefault();
this.stopPropagation();}},{key:'isPropagationStopped',value:function isPropagationStopped()


{
return this._propagationStopped;}},{key:'dispose',value:function dispose()







{
invariant(!this._disposed,'NavigationEvent is already disposed');
this._disposed=true;


this.target=null;
this.eventPhase=NavigationEvent.NONE;
this._type=null;
this._currentTarget=null;
this._data=null;
this._defaultPrevented=false;


_navigationEventPool.put(this);}},{key:'type',get:function(){return this._type;}},{key:'currentTarget',get:function(){return this._currentTarget;}},{key:'data',get:function(){return this._data;}},{key:'defaultPrevented',get:function(){return this._defaultPrevented;}}]);return NavigationEvent;}();










NavigationEvent.NONE=0;


NavigationEvent.CAPTURING_PHASE=1;



NavigationEvent.AT_TARGET=2;





NavigationEvent.BUBBLING_PHASE=3;

module.exports=NavigationEvent;
});
__d('NavigationEventEmitter',function(global, require, module, exports) {  'use strict';




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 








NavigationEventEmitter=function(_EventEmitter){babelHelpers.inherits(NavigationEventEmitter,_EventEmitter);




function NavigationEventEmitter(target){babelHelpers.classCallCheck(this,NavigationEventEmitter);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(NavigationEventEmitter).call(this));

_this._emitting=false;
_this._emitQueue=[];
_this._target=target;return _this;}babelHelpers.createClass(NavigationEventEmitter,[{key:'emit',value:function emit(



eventType,
data,
didEmitCallback,
extraInfo)
{
if(this._emitting){


var args=Array.prototype.slice.call(arguments);
this._emitQueue.unshift(args);
return;}


this._emitting=true;

var event=NavigationEvent.pool(eventType,this._target,data);

if(extraInfo){
if(extraInfo.target){
event.target=extraInfo.target;}


if(extraInfo.eventPhase){
event.eventPhase=extraInfo.eventPhase;}


if(extraInfo.defaultPrevented){
event.preventDefault();}


if(extraInfo.propagationStopped){
event.stopPropagation();}}





babelHelpers.get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'emit',this).call(this,String(eventType),event);

if(typeof didEmitCallback==='function'){
didEmitCallback.call(this._target,event);}

event.dispose();

this._emitting=false;

while(this._emitQueue.length){
var args=this._emitQueue.shift();
this.emit.apply(this,args);}}}]);return NavigationEventEmitter;}(EventEmitter);




module.exports=NavigationEventEmitter;
});
__d('NavigationTreeNode',function(global, require, module, exports) {  'use strict';









var invariant=require('invariant');
var immutable=require('immutable/dist/immutable.js');var 

List=immutable.List;var 






NavigationTreeNode=function(){






function NavigationTreeNode(value){babelHelpers.classCallCheck(this,NavigationTreeNode);
this.__parent=null;
this._children=new List();
this._value=value;}babelHelpers.createClass(NavigationTreeNode,[{key:'getValue',value:function getValue()


{
return this._value;}},{key:'getParent',value:function getParent()


{
return this.__parent;}},{key:'getChildrenCount',value:function getChildrenCount()


{
return this._children.size;}},{key:'getChildAt',value:function getChildAt(


index){
return index>-1&&index<this._children.size?
this._children.get(index):
null;}},{key:'appendChild',value:function appendChild(


child){
if(child.__parent){
child.__parent.removeChild(child);}

child.__parent=this;
this._children=this._children.push(child);}},{key:'removeChild',value:function removeChild(


child){
var index=this._children.indexOf(child);

invariant(
index>-1,
'The node to be removed is not a child of this node.');


child.__parent=null;

this._children=this._children.splice(index,1);}},{key:'indexOf',value:function indexOf(


child){
return this._children.indexOf(child);}},{key:'forEach',value:function forEach(


callback,context){
this._children.forEach(callback,context);}},{key:'map',value:function map(


callback,context){
return this._children.map(callback,context).toJS();}},{key:'some',value:function some(


callback,context){
return this._children.some(callback,context);}}]);return NavigationTreeNode;}();




module.exports=NavigationTreeNode;
});
__d('immutable/dist/immutable.js',function(global, require, module, exports) {  (








function(global,factory){
typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():
typeof define==='function'&&define.amd?define(factory):
global.Immutable=factory();})(
this,function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor,superClass){
if(superClass){
ctor.prototype=Object.create(superClass.prototype);}

ctor.prototype.constructor=ctor;}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable,Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable,Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable,Iterable);
function SetIterable(value){
return isIterable(value)&&!isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable&&maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed&&maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed&&maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative)||isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered&&maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable=isIterable;
Iterable.isKeyed=isKeyed;
Iterable.isIndexed=isIndexed;
Iterable.isAssociative=isAssociative;
Iterable.isOrdered=isOrdered;

Iterable.Keyed=KeyedIterable;
Iterable.Indexed=IndexedIterable;
Iterable.Set=SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';


var DELETE='delete';


var SHIFT=5;
var SIZE=1<<SHIFT;
var MASK=SIZE-1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value=false;
return ref;}


function SetRef(ref){
ref&&(ref.value=true);}





function OwnerID(){}


function arrCopy(arr,offset){
offset=offset||0;
var len=Math.max(0,arr.length-offset);
var newArr=new Array(len);
for(var ii=0;ii<len;ii++){
newArr[ii]=arr[ii+offset];}

return newArr;}


function ensureSize(iter){
if(iter.size===undefined){
iter.size=iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter,index){







if(typeof index!=='number'){
var uint32Index=index>>>0;
if(''+uint32Index!==index||uint32Index===4294967295){
return NaN;}

index=uint32Index;}

return index<0?ensureSize(iter)+index:index;}


function returnTrue(){
return true;}


function wholeSlice(begin,end,size){
return (begin===0||size!==undefined&&begin<=-size)&&(
end===undefined||size!==undefined&&end>=size);}


function resolveBegin(begin,size){
return resolveIndex(begin,size,0);}


function resolveEnd(end,size){
return resolveIndex(end,size,size);}


function resolveIndex(index,size,defaultIndex){
return index===undefined?
defaultIndex:
index<0?
Math.max(0,size+index):
size===undefined?
index:
Math.min(size,index);}




var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol==='function'&&Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL||FAUX_ITERATOR_SYMBOL;


function Iterator(next){
this.next=next;}


Iterator.prototype.toString=function(){
return '[Iterator]';};



Iterator.KEYS=ITERATE_KEYS;
Iterator.VALUES=ITERATE_VALUES;
Iterator.ENTRIES=ITERATE_ENTRIES;

Iterator.prototype.inspect=
Iterator.prototype.toSource=function(){return this.toString();};
Iterator.prototype[ITERATOR_SYMBOL]=function(){
return this;};



function iteratorValue(type,k,v,iteratorResult){
var value=type===0?k:type===1?v:[k,v];
iteratorResult?iteratorResult.value=value:iteratorResult={
value:value,done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined,done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator&&typeof maybeIterator.next==='function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn&&iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable&&(
REAL_ITERATOR_SYMBOL&&iterable[REAL_ITERATOR_SYMBOL]||
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn==='function'){
return iteratorFn;}}



function isArrayLike(value){
return value&&typeof value.length==='number';}


createClass(Seq,Iterable);
function Seq(value){
return value===null||value===undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of=function(){
return Seq(arguments);};


Seq.prototype.toSeq=function(){
return this;};


Seq.prototype.toString=function(){
return this.__toString('Seq {','}');};


Seq.prototype.cacheResult=function(){
if(!this._cache&&this.__iterateUncached){
this._cache=this.entrySeq().toArray();
this.size=this._cache.length;}

return this;};




Seq.prototype.__iterate=function(fn,reverse){
return seqIterate(this,fn,reverse,true);};




Seq.prototype.__iterator=function(type,reverse){
return seqIterator(this,type,reverse,true);};




createClass(KeyedSeq,Seq);
function KeyedSeq(value){
return value===null||value===undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq=function(){
return this;};




createClass(IndexedSeq,Seq);
function IndexedSeq(value){
return value===null||value===undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of=function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq=function(){
return this;};


IndexedSeq.prototype.toString=function(){
return this.__toString('Seq [',']');};


IndexedSeq.prototype.__iterate=function(fn,reverse){
return seqIterate(this,fn,reverse,false);};


IndexedSeq.prototype.__iterator=function(type,reverse){
return seqIterator(this,type,reverse,false);};




createClass(SetSeq,Seq);
function SetSeq(value){
return (
value===null||value===undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of=function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq=function(){
return this;};




Seq.isSeq=isSeq;
Seq.Keyed=KeyedSeq;
Seq.Set=SetSeq;
Seq.Indexed=IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL]=true;



createClass(ArraySeq,IndexedSeq);
function ArraySeq(array){
this._array=array;
this.size=array.length;}


ArraySeq.prototype.get=function(index,notSetValue){
return this.has(index)?this._array[wrapIndex(this,index)]:notSetValue;};


ArraySeq.prototype.__iterate=function(fn,reverse){
var array=this._array;
var maxIndex=array.length-1;
for(var ii=0;ii<=maxIndex;ii++){
if(fn(array[reverse?maxIndex-ii:ii],ii,this)===false){
return ii+1;}}


return ii;};


ArraySeq.prototype.__iterator=function(type,reverse){
var array=this._array;
var maxIndex=array.length-1;
var ii=0;
return new Iterator(function()
{return ii>maxIndex?
iteratorDone():
iteratorValue(type,ii,array[reverse?maxIndex-ii++:ii++]);});};





createClass(ObjectSeq,KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object=object;
this._keys=keys;
this.size=keys.length;}


ObjectSeq.prototype.get=function(key,notSetValue){
if(notSetValue!==undefined&&!this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has=function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate=function(fn,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length-1;
for(var ii=0;ii<=maxIndex;ii++){
var key=keys[reverse?maxIndex-ii:ii];
if(fn(object[key],key,this)===false){
return ii+1;}}


return ii;};


ObjectSeq.prototype.__iterator=function(type,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length-1;
var ii=0;
return new Iterator(function(){
var key=keys[reverse?maxIndex-ii:ii];
return ii++>maxIndex?
iteratorDone():
iteratorValue(type,key,object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL]=true;


createClass(IterableSeq,IndexedSeq);
function IterableSeq(iterable){
this._iterable=iterable;
this.size=iterable.length||iterable.size;}


IterableSeq.prototype.__iterateUncached=function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step=iterator.next()).done){
if(fn(step.value,iterations++,this)===false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached=function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new Iterator(iteratorDone);}

var iterations=0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type,iterations++,step.value);});};





createClass(IteratorSeq,IndexedSeq);
function IteratorSeq(iterator){
this._iterator=iterator;
this._iteratorCache=[];}


IteratorSeq.prototype.__iterateUncached=function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations<cache.length){
if(fn(cache[iterations],iterations++,this)===false){
return iterations;}}


var step;
while(!(step=iterator.next()).done){
var val=step.value;
cache[iterations]=val;
if(fn(val,iterations++,this)===false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached=function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new Iterator(function(){
if(iterations>=cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations]=step.value;}

return iteratorValue(type,iterations,cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq&&maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ||(EMPTY_SEQ=new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value==='object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, '+
'or keyed object: '+value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: '+value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value)||
typeof value==='object'&&new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: '+value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq,fn,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length-1;
for(var ii=0;ii<=maxIndex;ii++){
var entry=cache[reverse?maxIndex-ii:ii];
if(fn(entry[1],useKeys?entry[0]:ii,seq)===false){
return ii+1;}}


return ii;}

return seq.__iterateUncached(fn,reverse);}


function seqIterator(seq,type,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length-1;
var ii=0;
return new Iterator(function(){
var entry=cache[reverse?maxIndex-ii:ii];
return ii++>maxIndex?
iteratorDone():
iteratorValue(type,useKeys?entry[0]:ii-1,entry[1]);});}


return seq.__iteratorUncached(type,reverse);}


function fromJS(json,converter){
return converter?
fromJSWith(converter,json,'',{'':json}):
fromJSDefault(json);}


function fromJSWith(converter,json,key,parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON,key,IndexedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON,key,KeyedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value&&(value.constructor===Object||value.constructor===undefined);}
























































function is(valueA,valueB){
if(valueA===valueB||valueA!==valueA&&valueB!==valueB){
return true;}

if(!valueA||!valueB){
return false;}

if(typeof valueA.valueOf==='function'&&
typeof valueB.valueOf==='function'){
valueA=valueA.valueOf();
valueB=valueB.valueOf();
if(valueA===valueB||valueA!==valueA&&valueB!==valueB){
return true;}

if(!valueA||!valueB){
return false;}}


if(typeof valueA.equals==='function'&&
typeof valueB.equals==='function'&&
valueA.equals(valueB)){
return true;}

return false;}


function deepEqual(a,b){
if(a===b){
return true;}


if(
!isIterable(b)||
a.size!==undefined&&b.size!==undefined&&a.size!==b.size||
a.__hash!==undefined&&b.__hash!==undefined&&a.__hash!==b.__hash||
isKeyed(a)!==isKeyed(b)||
isIndexed(a)!==isIndexed(b)||
isOrdered(a)!==isOrdered(b))
{
return false;}


if(a.size===0&&b.size===0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v,k){
var entry=entries.next().value;
return entry&&is(entry[1],v)&&(notAssociative||is(entry[0],k));})&&
entries.next().done;}


var flipped=false;

if(a.size===undefined){
if(b.size===undefined){
if(typeof a.cacheResult==='function'){
a.cacheResult();}}else 

{
flipped=true;
var _=a;
a=b;
b=_;}}



var allEqual=true;
var bSize=b.__iterate(function(v,k){
if(notAssociative?!a.has(v):
flipped?!is(v,a.get(k,NOT_SET)):!is(a.get(k,NOT_SET),v)){
allEqual=false;
return false;}});



return allEqual&&a.size===bSize;}


createClass(Repeat,IndexedSeq);

function Repeat(value,times){
if(!(this instanceof Repeat)){
return new Repeat(value,times);}

this._value=value;
this.size=times===undefined?Infinity:Math.max(0,times);
if(this.size===0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT=this;}}



Repeat.prototype.toString=function(){
if(this.size===0){
return 'Repeat []';}

return 'Repeat [ '+this._value+' '+this.size+' times ]';};


Repeat.prototype.get=function(index,notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes=function(searchValue){
return is(this._value,searchValue);};


Repeat.prototype.slice=function(begin,end){
var size=this.size;
return wholeSlice(begin,end,size)?this:
new Repeat(this._value,resolveEnd(end,size)-resolveBegin(begin,size));};


Repeat.prototype.reverse=function(){
return this;};


Repeat.prototype.indexOf=function(searchValue){
if(is(this._value,searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf=function(searchValue){
if(is(this._value,searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate=function(fn,reverse){
for(var ii=0;ii<this.size;ii++){
if(fn(this._value,ii,this)===false){
return ii+1;}}


return ii;};


Repeat.prototype.__iterator=function(type,reverse){var this$0=this;
var ii=0;
return new Iterator(function()
{return ii<this$0.size?iteratorValue(type,ii++,this$0._value):iteratorDone();});};



Repeat.prototype.equals=function(other){
return other instanceof Repeat?
is(this._value,other._value):
deepEqual(other);};



var EMPTY_REPEAT;

function invariant(condition,error){
if(!condition)throw new Error(error);}


createClass(Range,IndexedSeq);

function Range(start,end,step){
if(!(this instanceof Range)){
return new Range(start,end,step);}

invariant(step!==0,'Cannot step a Range by 0');
start=start||0;
if(end===undefined){
end=Infinity;}

step=step===undefined?1:Math.abs(step);
if(end<start){
step=-step;}

this._start=start;
this._end=end;
this._step=step;
this.size=Math.max(0,Math.ceil((end-start)/step-1)+1);
if(this.size===0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE=this;}}



Range.prototype.toString=function(){
if(this.size===0){
return 'Range []';}

return 'Range [ '+
this._start+'...'+this._end+(
this._step>1?' by '+this._step:'')+
' ]';};


Range.prototype.get=function(index,notSetValue){
return this.has(index)?
this._start+wrapIndex(this,index)*this._step:
notSetValue;};


Range.prototype.includes=function(searchValue){
var possibleIndex=(searchValue-this._start)/this._step;
return possibleIndex>=0&&
possibleIndex<this.size&&
possibleIndex===Math.floor(possibleIndex);};


Range.prototype.slice=function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

begin=resolveBegin(begin,this.size);
end=resolveEnd(end,this.size);
if(end<=begin){
return new Range(0,0);}

return new Range(this.get(begin,this._end),this.get(end,this._end),this._step);};


Range.prototype.indexOf=function(searchValue){
var offsetValue=searchValue-this._start;
if(offsetValue%this._step===0){
var index=offsetValue/this._step;
if(index>=0&&index<this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf=function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate=function(fn,reverse){
var maxIndex=this.size-1;
var step=this._step;
var value=reverse?this._start+maxIndex*step:this._start;
for(var ii=0;ii<=maxIndex;ii++){
if(fn(value,ii,this)===false){
return ii+1;}

value+=reverse?-step:step;}

return ii;};


Range.prototype.__iterator=function(type,reverse){
var maxIndex=this.size-1;
var step=this._step;
var value=reverse?this._start+maxIndex*step:this._start;
var ii=0;
return new Iterator(function(){
var v=value;
value+=reverse?-step:step;
return ii>maxIndex?iteratorDone():iteratorValue(type,ii++,v);});};



Range.prototype.equals=function(other){
return other instanceof Range?
this._start===other._start&&
this._end===other._end&&
this._step===other._step:
deepEqual(this,other);};



var EMPTY_RANGE;

createClass(Collection,Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection,Collection);function KeyedCollection(){}

createClass(IndexedCollection,Collection);function IndexedCollection(){}

createClass(SetCollection,Collection);function SetCollection(){}


Collection.Keyed=KeyedCollection;
Collection.Indexed=IndexedCollection;
Collection.Set=SetCollection;

var imul=
typeof Math.imul==='function'&&Math.imul(0xffffffff,2)===-2?
Math.imul:
function imul(a,b){
a=a|0;
b=b|0;
var c=a&0xffff;
var d=b&0xffff;

return c*d+((a>>>16)*d+c*(b>>>16)<<16>>>0)|0;};






function smi(i32){
return i32>>>1&0x40000000|i32&0xBFFFFFFF;}


function hash(o){
if(o===false||o===null||o===undefined){
return 0;}

if(typeof o.valueOf==='function'){
o=o.valueOf();
if(o===false||o===null||o===undefined){
return 0;}}


if(o===true){
return 1;}

var type=typeof o;
if(type==='number'){
var h=o|0;
if(h!==o){
h^=o*0xFFFFFFFF;}

while(o>0xFFFFFFFF){
o/=0xFFFFFFFF;
h^=o;}

return smi(h);}

if(type==='string'){
return o.length>STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode==='function'){
return o.hashCode();}

if(type==='object'){
return hashJSObj(o);}

if(typeof o.toString==='function'){
return hashString(o.toString());}

throw new Error('Value type '+type+' cannot be hashed.');}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash===undefined){
hash=hashString(string);
if(STRING_HASH_CACHE_SIZE===STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE=0;
stringHashCache={};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string]=hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0;ii<string.length;ii++){
hash=31*hash+string.charCodeAt(ii)|0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash=weakMap.get(obj);
if(hash!==undefined){
return hash;}}



hash=obj[UID_HASH_KEY];
if(hash!==undefined){
return hash;}


if(!canDefineProperty){
hash=obj.propertyIsEnumerable&&obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash!==undefined){
return hash;}


hash=getIENodeHash(obj);
if(hash!==undefined){
return hash;}}



hash=++objHashUID;
if(objHashUID&0x40000000){
objHashUID=0;}


if(usingWeakMap){
weakMap.set(obj,hash);}else 
if(isExtensible!==undefined&&isExtensible(obj)===false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj,UID_HASH_KEY,{
'enumerable':false,
'configurable':false,
'writable':false,
'value':hash});}else 

if(obj.propertyIsEnumerable!==undefined&&
obj.propertyIsEnumerable===obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable=function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY]=hash;}else 
if(obj.nodeType!==undefined){




obj[UID_HASH_KEY]=hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=function(){
try{
Object.defineProperty({},'@',{});
return true;}
catch(e){
return false;}}();





function getIENodeHash(node){
if(node&&node.nodeType>0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement&&node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap==='function';
var weakMap;
if(usingWeakMap){
weakMap=new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol==='function'){
UID_HASH_KEY=Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function assertNotInfinite(size){
invariant(
size!==Infinity,
'Cannot perform this action with an infinite size.');}



createClass(Map,KeyedCollection);



function Map(value){
return value===null||value===undefined?emptyMap():
isMap(value)&&!isOrdered(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



Map.prototype.toString=function(){
return this.__toString('Map {','}');};




Map.prototype.get=function(k,notSetValue){
return this._root?
this._root.get(0,undefined,k,notSetValue):
notSetValue;};




Map.prototype.set=function(k,v){
return updateMap(this,k,v);};


Map.prototype.setIn=function(keyPath,v){
return this.updateIn(keyPath,NOT_SET,function(){return v;});};


Map.prototype.remove=function(k){
return updateMap(this,k,NOT_SET);};


Map.prototype.deleteIn=function(keyPath){
return this.updateIn(keyPath,function(){return NOT_SET;});};


Map.prototype.update=function(k,notSetValue,updater){
return arguments.length===1?
k(this):
this.updateIn([k],notSetValue,updater);};


Map.prototype.updateIn=function(keyPath,notSetValue,updater){
if(!updater){
updater=notSetValue;
notSetValue=undefined;}

var updatedValue=updateInDeepMap(
this,
forceIterator(keyPath),
notSetValue,
updater);

return updatedValue===NOT_SET?undefined:updatedValue;};


Map.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._root=null;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyMap();};




Map.prototype.merge=function(){
return mergeIntoMapWith(this,undefined,arguments);};


Map.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,merger,iters);};


Map.prototype.mergeIn=function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.merge==='function'?
m.merge.apply(m,iters):
iters[iters.length-1];});};



Map.prototype.mergeDeep=function(){
return mergeIntoMapWith(this,deepMerger,arguments);};


Map.prototype.mergeDeepWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,deepMergerWith(merger),iters);};


Map.prototype.mergeDeepIn=function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.mergeDeep==='function'?
m.mergeDeep.apply(m,iters):
iters[iters.length-1];});};



Map.prototype.sort=function(comparator){

return OrderedMap(sortFactory(this,comparator));};


Map.prototype.sortBy=function(mapper,comparator){

return OrderedMap(sortFactory(this,comparator,mapper));};




Map.prototype.withMutations=function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


Map.prototype.asMutable=function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


Map.prototype.asImmutable=function(){
return this.__ensureOwner();};


Map.prototype.wasAltered=function(){
return this.__altered;};


Map.prototype.__iterator=function(type,reverse){
return new MapIterator(this,type,reverse);};


Map.prototype.__iterate=function(fn,reverse){var this$0=this;
var iterations=0;
this._root&&this._root.iterate(function(entry){
iterations++;
return fn(entry[1],entry[0],this$0);},
reverse);
return iterations;};


Map.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
this.__altered=false;
return this;}

return makeMap(this.size,this._root,ownerID,this.__hash);};



function isMap(maybeMap){
return !!(maybeMap&&maybeMap[IS_MAP_SENTINEL]);}


Map.isMap=isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=Map.prototype;
MapPrototype[IS_MAP_SENTINEL]=true;
MapPrototype[DELETE]=MapPrototype.remove;
MapPrototype.removeIn=MapPrototype.deleteIn;






function ArrayMapNode(ownerID,entries){
this.ownerID=ownerID;
this.entries=entries;}


ArrayMapNode.prototype.get=function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii<len;ii++){
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value===NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length;idx<len;idx++){
if(is(key,entries[idx][0])){
break;}}


var exists=idx<len;

if(exists?entries[idx][1]===value:removed){
return this;}


SetRef(didAlter);
(removed||!exists)&&SetRef(didChangeSize);

if(removed&&entries.length===1){
return;}


if(!exists&&!removed&&entries.length>=MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID,entries,key,value);}


var isEditable=ownerID&&ownerID===this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx===len-1?newEntries.pop():newEntries[idx]=newEntries.pop();}else 
{
newEntries[idx]=[key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries=newEntries;
return this;}


return new ArrayMapNode(ownerID,newEntries);};





function BitmapIndexedNode(ownerID,bitmap,nodes){
this.ownerID=ownerID;
this.bitmap=bitmap;
this.nodes=nodes;}


BitmapIndexedNode.prototype.get=function(shift,keyHash,key,notSetValue){
if(keyHash===undefined){
keyHash=hash(key);}

var bit=1<<((shift===0?keyHash:keyHash>>>shift)&MASK);
var bitmap=this.bitmap;
return (bitmap&bit)===0?notSetValue:
this.nodes[popCount(bitmap&bit-1)].get(shift+SHIFT,keyHash,key,notSetValue);};


BitmapIndexedNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}

var keyHashFrag=(shift===0?keyHash:keyHash>>>shift)&MASK;
var bit=1<<keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap&bit)!==0;

if(!exists&&value===NOT_SET){
return this;}


var idx=popCount(bitmap&bit-1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node,ownerID,shift+SHIFT,keyHash,key,value,didChangeSize,didAlter);

if(newNode===node){
return this;}


if(!exists&&newNode&&nodes.length>=MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID,nodes,bitmap,keyHashFrag,newNode);}


if(exists&&!newNode&&nodes.length===2&&isLeafNode(nodes[idx^1])){
return nodes[idx^1];}


if(exists&&newNode&&nodes.length===1&&isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID&&ownerID===this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap^bit:bitmap|bit;
var newNodes=exists?newNode?
setIn(nodes,idx,newNode,isEditable):
spliceOut(nodes,idx,isEditable):
spliceIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.bitmap=newBitmap;
this.nodes=newNodes;
return this;}


return new BitmapIndexedNode(ownerID,newBitmap,newNodes);};





function HashArrayMapNode(ownerID,count,nodes){
this.ownerID=ownerID;
this.count=count;
this.nodes=nodes;}


HashArrayMapNode.prototype.get=function(shift,keyHash,key,notSetValue){
if(keyHash===undefined){
keyHash=hash(key);}

var idx=(shift===0?keyHash:keyHash>>>shift)&MASK;
var node=this.nodes[idx];
return node?node.get(shift+SHIFT,keyHash,key,notSetValue):notSetValue;};


HashArrayMapNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}

var idx=(shift===0?keyHash:keyHash>>>shift)&MASK;
var removed=value===NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed&&!node){
return this;}


var newNode=updateNode(node,ownerID,shift+SHIFT,keyHash,key,value,didChangeSize,didAlter);
if(newNode===node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount<MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID,nodes,newCount,idx);}}



var isEditable=ownerID&&ownerID===this.ownerID;
var newNodes=setIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.count=newCount;
this.nodes=newNodes;
return this;}


return new HashArrayMapNode(ownerID,newCount,newNodes);};





function HashCollisionNode(ownerID,keyHash,entries){
this.ownerID=ownerID;
this.keyHash=keyHash;
this.entries=entries;}


HashCollisionNode.prototype.get=function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii<len;ii++){
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}


var removed=value===NOT_SET;

if(keyHash!==this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,keyHash,[key,value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length;idx<len;idx++){
if(is(key,entries[idx][0])){
break;}}


var exists=idx<len;

if(exists?entries[idx][1]===value:removed){
return this;}


SetRef(didAlter);
(removed||!exists)&&SetRef(didChangeSize);

if(removed&&len===2){
return new ValueNode(ownerID,this.keyHash,entries[idx^1]);}


var isEditable=ownerID&&ownerID===this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx===len-1?newEntries.pop():newEntries[idx]=newEntries.pop();}else 
{
newEntries[idx]=[key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries=newEntries;
return this;}


return new HashCollisionNode(ownerID,this.keyHash,newEntries);};





function ValueNode(ownerID,keyHash,entry){
this.ownerID=ownerID;
this.keyHash=keyHash;
this.entry=entry;}


ValueNode.prototype.get=function(shift,keyHash,key,notSetValue){
return is(key,this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value===NOT_SET;
var keyMatch=is(key,this.entry[0]);
if(keyMatch?value===this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID&&ownerID===this.ownerID){
this.entry[1]=value;
return this;}

return new ValueNode(ownerID,this.keyHash,[key,value]);}


SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,hash(key),[key,value]);};






ArrayMapNode.prototype.iterate=
HashCollisionNode.prototype.iterate=function(fn,reverse){
var entries=this.entries;
for(var ii=0,maxIndex=entries.length-1;ii<=maxIndex;ii++){
if(fn(entries[reverse?maxIndex-ii:ii])===false){
return false;}}};




BitmapIndexedNode.prototype.iterate=
HashArrayMapNode.prototype.iterate=function(fn,reverse){
var nodes=this.nodes;
for(var ii=0,maxIndex=nodes.length-1;ii<=maxIndex;ii++){
var node=nodes[reverse?maxIndex-ii:ii];
if(node&&node.iterate(fn,reverse)===false){
return false;}}};




ValueNode.prototype.iterate=function(fn,reverse){
return fn(this.entry);};


createClass(MapIterator,Iterator);

function MapIterator(map,type,reverse){
this._type=type;
this._reverse=reverse;
this._stack=map._root&&mapIteratorFrame(map._root);}


MapIterator.prototype.next=function(){
var type=this._type;
var stack=this._stack;
while(stack){
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index===0){
return mapIteratorValue(type,node.entry);}}else 

if(node.entries){
maxIndex=node.entries.length-1;
if(index<=maxIndex){
return mapIteratorValue(type,node.entries[this._reverse?maxIndex-index:index]);}}else 

{
maxIndex=node.nodes.length-1;
if(index<=maxIndex){
var subNode=node.nodes[this._reverse?maxIndex-index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type,subNode.entry);}

stack=this._stack=mapIteratorFrame(subNode,stack);}

continue;}}


stack=this._stack=this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type,entry){
return iteratorValue(type,entry[0],entry[1]);}


function mapIteratorFrame(node,prev){
return {
node:node,
index:0,
__prev:prev};}



function makeMap(size,root,ownerID,hash){
var map=Object.create(MapPrototype);
map.size=size;
map._root=root;
map.__ownerID=ownerID;
map.__hash=hash;
map.__altered=false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP||(EMPTY_MAP=makeMap(0));}


function updateMap(map,k,v){
var newRoot;
var newSize;
if(!map._root){
if(v===NOT_SET){
return map;}

newSize=1;
newRoot=new ArrayMapNode(map.__ownerID,[[k,v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot=updateNode(map._root,map.__ownerID,0,undefined,k,v,didChangeSize,didAlter);
if(!didAlter.value){
return map;}

newSize=map.size+(didChangeSize.value?v===NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size=newSize;
map._root=newRoot;
map.__hash=undefined;
map.__altered=true;
return map;}

return newRoot?makeMap(newSize,newRoot):emptyMap();}


function updateNode(node,ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(!node){
if(value===NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID,keyHash,[key,value]);}

return node.update(ownerID,shift,keyHash,key,value,didChangeSize,didAlter);}


function isLeafNode(node){
return node.constructor===ValueNode||node.constructor===HashCollisionNode;}


function mergeIntoNode(node,ownerID,shift,keyHash,entry){
if(node.keyHash===keyHash){
return new HashCollisionNode(ownerID,keyHash,[node.entry,entry]);}


var idx1=(shift===0?node.keyHash:node.keyHash>>>shift)&MASK;
var idx2=(shift===0?keyHash:keyHash>>>shift)&MASK;

var newNode;
var nodes=idx1===idx2?
[mergeIntoNode(node,ownerID,shift+SHIFT,keyHash,entry)]:(
newNode=new ValueNode(ownerID,keyHash,entry),idx1<idx2?[node,newNode]:[newNode,node]);

return new BitmapIndexedNode(ownerID,1<<idx1|1<<idx2,nodes);}


function createNodes(ownerID,entries,key,value){
if(!ownerID){
ownerID=new OwnerID();}

var node=new ValueNode(ownerID,hash(key),[key,value]);
for(var ii=0;ii<entries.length;ii++){
var entry=entries[ii];
node=node.update(ownerID,0,undefined,entry[0],entry[1]);}

return node;}


function packNodes(ownerID,nodes,count,excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0,bit=1,len=nodes.length;ii<len;ii++,bit<<=1){
var node=nodes[ii];
if(node!==undefined&&ii!==excluding){
bitmap|=bit;
packedNodes[packedII++]=node;}}


return new BitmapIndexedNode(ownerID,bitmap,packedNodes);}


function expandNodes(ownerID,nodes,bitmap,including,node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0;bitmap!==0;ii++,bitmap>>>=1){
expandedNodes[ii]=bitmap&1?nodes[count++]:undefined;}

expandedNodes[including]=node;
return new HashArrayMapNode(ownerID,count+1,expandedNodes);}


function mergeIntoMapWith(map,merger,iterables){
var iters=[];
for(var ii=0;ii<iterables.length;ii++){
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter=iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map,merger,iters);}


function deepMerger(existing,value,key){
return existing&&existing.mergeDeep&&isIterable(value)?
existing.mergeDeep(value):
is(existing,value)?existing:value;}


function deepMergerWith(merger){
return function(existing,value,key){
if(existing&&existing.mergeDeepWith&&isIterable(value)){
return existing.mergeDeepWith(merger,value);}

var nextValue=merger(existing,value,key);
return is(existing,nextValue)?existing:nextValue;};}



function mergeIntoCollectionWith(collection,merger,iters){
iters=iters.filter(function(x){return x.size!==0;});
if(iters.length===0){
return collection;}

if(collection.size===0&&!collection.__ownerID&&iters.length===1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value,key){
collection.update(key,NOT_SET,function(existing)
{return existing===NOT_SET?value:merger(existing,value,key);});}:


function(value,key){
collection.set(key,value);};

for(var ii=0;ii<iters.length;ii++){
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing,keyPathIter,notSetValue,updater){
var isNotSet=existing===NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue===existingValue?existing:newValue;}

invariant(
isNotSet||existing&&existing.set,
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key,NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting,
keyPathIter,
notSetValue,
updater);

return nextUpdated===nextExisting?existing:
nextUpdated===NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key,nextUpdated);}


function popCount(x){
x=x-(x>>1&0x55555555);
x=(x&0x33333333)+(x>>2&0x33333333);
x=x+(x>>4)&0x0f0f0f0f;
x=x+(x>>8);
x=x+(x>>16);
return x&0x7f;}


function setIn(array,idx,val,canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx]=val;
return newArray;}


function spliceIn(array,idx,val,canEdit){
var newLen=array.length+1;
if(canEdit&&idx+1===newLen){
array[idx]=val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii<newLen;ii++){
if(ii===idx){
newArray[ii]=val;
after=-1;}else 
{
newArray[ii]=array[ii+after];}}


return newArray;}


function spliceOut(array,idx,canEdit){
var newLen=array.length-1;
if(canEdit&&idx===newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii<newLen;ii++){
if(ii===idx){
after=1;}

newArray[ii]=array[ii+after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE/4;
var MAX_BITMAP_INDEXED_SIZE=SIZE/2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE/4;

createClass(List,IndexedCollection);



function List(value){
var empty=emptyList();
if(value===null||value===undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size===0){
return empty;}

assertNotInfinite(size);
if(size>0&&size<SIZE){
return makeList(0,size,SHIFT,null,new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v,i){return list.set(i,v);});});}



List.of=function(){
return this(arguments);};


List.prototype.toString=function(){
return this.__toString('List [',']');};




List.prototype.get=function(index,notSetValue){
index=wrapIndex(this,index);
if(index>=0&&index<this.size){
index+=this._origin;
var node=listNodeFor(this,index);
return node&&node.array[index&MASK];}

return notSetValue;};




List.prototype.set=function(index,value){
return updateList(this,index,value);};


List.prototype.remove=function(index){
return !this.has(index)?this:
index===0?this.shift():
index===this.size-1?this.pop():
this.splice(index,1);};


List.prototype.insert=function(index,value){
return this.splice(index,0,value);};


List.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=this._origin=this._capacity=0;
this._level=SHIFT;
this._root=this._tail=null;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyList();};


List.prototype.push=function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list,0,oldSize+values.length);
for(var ii=0;ii<values.length;ii++){
list.set(oldSize+ii,values[ii]);}});};




List.prototype.pop=function(){
return setListBounds(this,0,-1);};


List.prototype.unshift=function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list,-values.length);
for(var ii=0;ii<values.length;ii++){
list.set(ii,values[ii]);}});};




List.prototype.shift=function(){
return setListBounds(this,1);};




List.prototype.merge=function(){
return mergeIntoListWith(this,undefined,arguments);};


List.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,merger,iters);};


List.prototype.mergeDeep=function(){
return mergeIntoListWith(this,deepMerger,arguments);};


List.prototype.mergeDeepWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,deepMergerWith(merger),iters);};


List.prototype.setSize=function(size){
return setListBounds(this,0,size);};




List.prototype.slice=function(begin,end){
var size=this.size;
if(wholeSlice(begin,end,size)){
return this;}

return setListBounds(
this,
resolveBegin(begin,size),
resolveEnd(end,size));};



List.prototype.__iterator=function(type,reverse){
var index=0;
var values=iterateList(this,reverse);
return new Iterator(function(){
var value=values();
return value===DONE?
iteratorDone():
iteratorValue(type,index++,value);});};



List.prototype.__iterate=function(fn,reverse){
var index=0;
var values=iterateList(this,reverse);
var value;
while((value=values())!==DONE){
if(fn(value,index++,this)===false){
break;}}


return index;};


List.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
return this;}

return makeList(this._origin,this._capacity,this._level,this._root,this._tail,ownerID,this.__hash);};



function isList(maybeList){
return !!(maybeList&&maybeList[IS_LIST_SENTINEL]);}


List.isList=isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL]=true;
ListPrototype[DELETE]=ListPrototype.remove;
ListPrototype.setIn=MapPrototype.setIn;
ListPrototype.deleteIn=
ListPrototype.removeIn=MapPrototype.removeIn;
ListPrototype.update=MapPrototype.update;
ListPrototype.updateIn=MapPrototype.updateIn;
ListPrototype.mergeIn=MapPrototype.mergeIn;
ListPrototype.mergeDeepIn=MapPrototype.mergeDeepIn;
ListPrototype.withMutations=MapPrototype.withMutations;
ListPrototype.asMutable=MapPrototype.asMutable;
ListPrototype.asImmutable=MapPrototype.asImmutable;
ListPrototype.wasAltered=MapPrototype.wasAltered;



function VNode(array,ownerID){
this.array=array;
this.ownerID=ownerID;}




VNode.prototype.removeBefore=function(ownerID,level,index){
if(index===level?1<<level:0||this.array.length===0){
return this;}

var originIndex=index>>>level&MASK;
if(originIndex>=this.array.length){
return new VNode([],ownerID);}

var removingFirst=originIndex===0;
var newChild;
if(level>0){
var oldChild=this.array[originIndex];
newChild=oldChild&&oldChild.removeBefore(ownerID,level-SHIFT,index);
if(newChild===oldChild&&removingFirst){
return this;}}


if(removingFirst&&!newChild){
return this;}

var editable=editableVNode(this,ownerID);
if(!removingFirst){
for(var ii=0;ii<originIndex;ii++){
editable.array[ii]=undefined;}}


if(newChild){
editable.array[originIndex]=newChild;}

return editable;};


VNode.prototype.removeAfter=function(ownerID,level,index){
if(index===(level?1<<level:0)||this.array.length===0){
return this;}

var sizeIndex=index-1>>>level&MASK;
if(sizeIndex>=this.array.length){
return this;}


var newChild;
if(level>0){
var oldChild=this.array[sizeIndex];
newChild=oldChild&&oldChild.removeAfter(ownerID,level-SHIFT,index);
if(newChild===oldChild&&sizeIndex===this.array.length-1){
return this;}}



var editable=editableVNode(this,ownerID);
editable.array.splice(sizeIndex+1);
if(newChild){
editable.array[sizeIndex]=newChild;}

return editable;};




var DONE={};

function iterateList(list,reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root,list._level,0);

function iterateNodeOrLeaf(node,level,offset){
return level===0?
iterateLeaf(node,offset):
iterateNode(node,level,offset);}


function iterateLeaf(node,offset){
var array=offset===tailPos?tail&&tail.array:node&&node.array;
var from=offset>left?0:left-offset;
var to=right-offset;
if(to>SIZE){
to=SIZE;}

return function(){
if(from===to){
return DONE;}

var idx=reverse?--to:from++;
return array&&array[idx];};}



function iterateNode(node,level,offset){
var values;
var array=node&&node.array;
var from=offset>left?0:left-offset>>level;
var to=(right-offset>>level)+1;
if(to>SIZE){
to=SIZE;}

return function(){
do {
if(values){
var value=values();
if(value!==DONE){
return value;}

values=null;}

if(from===to){
return DONE;}

var idx=reverse?--to:from++;
values=iterateNodeOrLeaf(
array&&array[idx],level-SHIFT,offset+(idx<<level));}while(

true);};}}




function makeList(origin,capacity,level,root,tail,ownerID,hash){
var list=Object.create(ListPrototype);
list.size=capacity-origin;
list._origin=origin;
list._capacity=capacity;
list._level=level;
list._root=root;
list._tail=tail;
list.__ownerID=ownerID;
list.__hash=hash;
list.__altered=false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST||(EMPTY_LIST=makeList(0,0,SHIFT));}


function updateList(list,index,value){
index=wrapIndex(list,index);

if(index!==index){
return list;}


if(index>=list.size||index<0){
return list.withMutations(function(list){
index<0?
setListBounds(list,index).set(0,value):
setListBounds(list,0,index+1).set(index,value);});}



index+=list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index>=getTailOffset(list._capacity)){
newTail=updateVNode(newTail,list.__ownerID,0,index,value,didAlter);}else 
{
newRoot=updateVNode(newRoot,list.__ownerID,list._level,index,value,didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root=newRoot;
list._tail=newTail;
list.__hash=undefined;
list.__altered=true;
return list;}

return makeList(list._origin,list._capacity,list._level,newRoot,newTail);}


function updateVNode(node,ownerID,level,index,value,didAlter){
var idx=index>>>level&MASK;
var nodeHas=node&&idx<node.array.length;
if(!nodeHas&&value===undefined){
return node;}


var newNode;

if(level>0){
var lowerNode=node&&node.array[idx];
var newLowerNode=updateVNode(lowerNode,ownerID,level-SHIFT,index,value,didAlter);
if(newLowerNode===lowerNode){
return node;}

newNode=editableVNode(node,ownerID);
newNode.array[idx]=newLowerNode;
return newNode;}


if(nodeHas&&node.array[idx]===value){
return node;}


SetRef(didAlter);

newNode=editableVNode(node,ownerID);
if(value===undefined&&idx===newNode.array.length-1){
newNode.array.pop();}else 
{
newNode.array[idx]=value;}

return newNode;}


function editableVNode(node,ownerID){
if(ownerID&&node&&ownerID===node.ownerID){
return node;}

return new VNode(node?node.array.slice():[],ownerID);}


function listNodeFor(list,rawIndex){
if(rawIndex>=getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex<1<<list._level+SHIFT){
var node=list._root;
var level=list._level;
while(node&&level>0){
node=node.array[rawIndex>>>level&MASK];
level-=SHIFT;}

return node;}}



function setListBounds(list,begin,end){


if(begin!==undefined){
begin=begin|0;}

if(end!==undefined){
end=end|0;}

var owner=list.__ownerID||new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin+begin;
var newCapacity=end===undefined?oldCapacity:end<0?oldCapacity+end:oldOrigin+end;
if(newOrigin===oldOrigin&&newCapacity===oldCapacity){
return list;}



if(newOrigin>=newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin+offsetShift<0){
newRoot=new VNode(newRoot&&newRoot.array.length?[undefined,newRoot]:[],owner);
newLevel+=SHIFT;
offsetShift+=1<<newLevel;}

if(offsetShift){
newOrigin+=offsetShift;
oldOrigin+=offsetShift;
newCapacity+=offsetShift;
oldCapacity+=offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset>=1<<newLevel+SHIFT){
newRoot=new VNode(newRoot&&newRoot.array.length?[newRoot]:[],owner);
newLevel+=SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset<oldTailOffset?
listNodeFor(list,newCapacity-1):
newTailOffset>oldTailOffset?new VNode([],owner):oldTail;


if(oldTail&&newTailOffset>oldTailOffset&&newOrigin<oldCapacity&&oldTail.array.length){
newRoot=editableVNode(newRoot,owner);
var node=newRoot;
for(var level=newLevel;level>SHIFT;level-=SHIFT){
var idx=oldTailOffset>>>level&MASK;
node=node.array[idx]=editableVNode(node.array[idx],owner);}

node.array[oldTailOffset>>>SHIFT&MASK]=oldTail;}



if(newCapacity<oldCapacity){
newTail=newTail&&newTail.removeAfter(owner,0,newCapacity);}



if(newOrigin>=newTailOffset){
newOrigin-=newTailOffset;
newCapacity-=newTailOffset;
newLevel=SHIFT;
newRoot=null;
newTail=newTail&&newTail.removeBefore(owner,0,newOrigin);}else 


if(newOrigin>oldOrigin||newTailOffset<oldTailOffset){
offsetShift=0;


while(newRoot){
var beginIndex=newOrigin>>>newLevel&MASK;
if(beginIndex!==newTailOffset>>>newLevel&MASK){
break;}

if(beginIndex){
offsetShift+=(1<<newLevel)*beginIndex;}

newLevel-=SHIFT;
newRoot=newRoot.array[beginIndex];}



if(newRoot&&newOrigin>oldOrigin){
newRoot=newRoot.removeBefore(owner,newLevel,newOrigin-offsetShift);}

if(newRoot&&newTailOffset<oldTailOffset){
newRoot=newRoot.removeAfter(owner,newLevel,newTailOffset-offsetShift);}

if(offsetShift){
newOrigin-=offsetShift;
newCapacity-=offsetShift;}}



if(list.__ownerID){
list.size=newCapacity-newOrigin;
list._origin=newOrigin;
list._capacity=newCapacity;
list._level=newLevel;
list._root=newRoot;
list._tail=newTail;
list.__hash=undefined;
list.__altered=true;
return list;}

return makeList(newOrigin,newCapacity,newLevel,newRoot,newTail);}


function mergeIntoListWith(list,merger,iterables){
var iters=[];
var maxSize=0;
for(var ii=0;ii<iterables.length;ii++){
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size>maxSize){
maxSize=iter.size;}

if(!isIterable(value)){
iter=iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize>list.size){
list=list.setSize(maxSize);}

return mergeIntoCollectionWith(list,merger,iters);}


function getTailOffset(size){
return size<SIZE?0:size-1>>>SHIFT<<SHIFT;}


createClass(OrderedMap,Map);



function OrderedMap(value){
return value===null||value===undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



OrderedMap.of=function(){
return this(arguments);};


OrderedMap.prototype.toString=function(){
return this.__toString('OrderedMap {','}');};




OrderedMap.prototype.get=function(k,notSetValue){
var index=this._map.get(k);
return index!==undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set=function(k,v){
return updateOrderedMap(this,k,v);};


OrderedMap.prototype.remove=function(k){
return updateOrderedMap(this,k,NOT_SET);};


OrderedMap.prototype.wasAltered=function(){
return this._map.wasAltered()||this._list.wasAltered();};


OrderedMap.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry&&fn(entry[1],entry[0],this$0);},
reverse);};



OrderedMap.prototype.__iterator=function(type,reverse){
return this._list.fromEntrySeq().__iterator(type,reverse);};


OrderedMap.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
this._list=newList;
return this;}

return makeOrderedMap(newMap,newList,ownerID,this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap)&&isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap=isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL]=true;
OrderedMap.prototype[DELETE]=OrderedMap.prototype.remove;



function makeOrderedMap(map,list,ownerID,hash){
var omap=Object.create(OrderedMap.prototype);
omap.size=map?map.size:0;
omap._map=map;
omap._list=list;
omap.__ownerID=ownerID;
omap.__hash=hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP||(EMPTY_ORDERED_MAP=makeOrderedMap(emptyMap(),emptyList()));}


function updateOrderedMap(omap,k,v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i!==undefined;
var newMap;
var newList;
if(v===NOT_SET){
if(!has){
return omap;}

if(list.size>=SIZE&&list.size>=map.size*2){
newList=list.filter(function(entry,idx){return entry!==undefined&&i!==idx;});
newMap=newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID=newList.__ownerID=omap.__ownerID;}}else 

{
newMap=map.remove(k);
newList=i===list.size-1?list.pop():list.set(i,undefined);}}else 

{
if(has){
if(v===list.get(i)[1]){
return omap;}

newMap=map;
newList=list.set(i,[k,v]);}else 
{
newMap=map.set(k,list.size);
newList=list.set(list.size,[k,v]);}}


if(omap.__ownerID){
omap.size=newMap.size;
omap._map=newMap;
omap._list=newList;
omap.__hash=undefined;
return omap;}

return makeOrderedMap(newMap,newList);}


createClass(ToKeyedSequence,KeyedSeq);
function ToKeyedSequence(indexed,useKeys){
this._iter=indexed;
this._useKeys=useKeys;
this.size=indexed.size;}


ToKeyedSequence.prototype.get=function(key,notSetValue){
return this._iter.get(key,notSetValue);};


ToKeyedSequence.prototype.has=function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq=function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse=function(){var this$0=this;
var reversedSequence=reverseFactory(this,true);
if(!this._useKeys){
reversedSequence.valueSeq=function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map=function(mapper,context){var this$0=this;
var mappedSequence=mapFactory(this,mapper,context);
if(!this._useKeys){
mappedSequence.valueSeq=function(){return this$0._iter.toSeq().map(mapper,context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v,k){return fn(v,k,this$0);}:(
ii=reverse?resolveSize(this):0,
function(v){return fn(v,reverse?--ii:ii++,this$0);}),
reverse);};



ToKeyedSequence.prototype.__iterator=function(type,reverse){
if(this._useKeys){
return this._iter.__iterator(type,reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var ii=reverse?resolveSize(this):0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,reverse?--ii:ii++,step.value,step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL]=true;


createClass(ToIndexedSequence,IndexedSeq);
function ToIndexedSequence(iter){
this._iter=iter;
this.size=iter.size;}


ToIndexedSequence.prototype.includes=function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v,iterations++,this$0);},reverse);};


ToIndexedSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,iterations++,step.value,step);});};





createClass(ToSetSequence,SetSeq);
function ToSetSequence(iter){
this._iter=iter;
this.size=iter.size;}


ToSetSequence.prototype.has=function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v,v,this$0);},reverse);};


ToSetSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,step.value,step.value,step);});};





createClass(FromEntriesSequence,KeyedSeq);
function FromEntriesSequence(entries){
this._iter=entries;
this.size=entries.size;}


FromEntriesSequence.prototype.entrySeq=function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1],
indexedIterable?entry.get(0):entry[0],
this$0);}},


reverse);};


FromEntriesSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new Iterator(function(){
while(true){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type,
indexedIterable?entry.get(0):entry[0],
indexedIterable?entry.get(1):entry[1],
step);}}});};







ToIndexedSequence.prototype.cacheResult=
ToKeyedSequence.prototype.cacheResult=
ToSetSequence.prototype.cacheResult=
FromEntriesSequence.prototype.cacheResult=
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter=iterable;
flipSequence.size=iterable.size;
flipSequence.flip=function(){return iterable;};
flipSequence.reverse=function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip=function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has=function(key){return iterable.includes(key);};
flipSequence.includes=function(key){return iterable.has(key);};
flipSequence.cacheResult=cacheResultThrough;
flipSequence.__iterateUncached=function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(k,v,this$0)!==false;},reverse);};

flipSequence.__iteratorUncached=function(type,reverse){
if(type===ITERATE_ENTRIES){
var iterator=iterable.__iterator(type,reverse);
return new Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0]=step.value[1];
step.value[1]=k;}

return step;});}


return iterable.__iterator(
type===ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES,
reverse);};


return flipSequence;}



function mapFactory(iterable,mapper,context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size=iterable.size;
mappedSequence.has=function(key){return iterable.has(key);};
mappedSequence.get=function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v===NOT_SET?
notSetValue:
mapper.call(context,v,key,iterable);};

mappedSequence.__iterateUncached=function(fn,reverse){var this$0=this;
return iterable.__iterate(
function(v,k,c){return fn(mapper.call(context,v,k,c),k,this$0)!==false;},
reverse);};


mappedSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
return new Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type,
key,
mapper.call(context,entry[1],key,iterable),
step);});};



return mappedSequence;}



function reverseFactory(iterable,useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter=iterable;
reversedSequence.size=iterable.size;
reversedSequence.reverse=function(){return iterable;};
if(iterable.flip){
reversedSequence.flip=function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse=function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get=function(key,notSetValue)
{return iterable.get(useKeys?key:-1-key,notSetValue);};
reversedSequence.has=function(key)
{return iterable.has(useKeys?key:-1-key);};
reversedSequence.includes=function(value){return iterable.includes(value);};
reversedSequence.cacheResult=cacheResultThrough;
reversedSequence.__iterate=function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(v,k,this$0);},!reverse);};

reversedSequence.__iterator=
function(type,reverse){return iterable.__iterator(type,!reverse);};
return reversedSequence;}



function filterFactory(iterable,predicate,context,useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has=function(key){
var v=iterable.get(key,NOT_SET);
return v!==NOT_SET&&!!predicate.call(context,v,key,iterable);};

filterSequence.get=function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v!==NOT_SET&&predicate.call(context,v,key,iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached=function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0);}},

reverse);
return iterations;};

filterSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterations=0;
return new Iterator(function(){
while(true){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context,value,key,iterable)){
return iteratorValue(type,useKeys?key:iterations++,value,step);}}});};




return filterSequence;}



function countByFactory(iterable,grouper,context){
var groups=Map().asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
0,
function(a){return a+1;});});


return groups.asImmutable();}



function groupByFactory(iterable,grouper,context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():Map()).asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
function(a){return a=a||[],a.push(isKeyedIter?[k,v]:v),a;});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable,coerce(arr));});}



function sliceFactory(iterable,begin,end,useKeys){
var originalSize=iterable.size;



if(begin!==undefined){
begin=begin|0;}

if(end!==undefined){
end=end|0;}


if(wholeSlice(begin,end,originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin,originalSize);
var resolvedEnd=resolveEnd(end,originalSize);




if(resolvedBegin!==resolvedBegin||resolvedEnd!==resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(),begin,end,useKeys);}






var resolvedSize=resolvedEnd-resolvedBegin;
var sliceSize;
if(resolvedSize===resolvedSize){
sliceSize=resolvedSize<0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);



sliceSeq.size=sliceSize===0?sliceSize:iterable.size&&sliceSize||undefined;

if(!useKeys&&isSeq(iterable)&&sliceSize>=0){
sliceSeq.get=function(index,notSetValue){
index=wrapIndex(this,index);
return index>=0&&index<sliceSize?
iterable.get(index+resolvedBegin,notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached=function(fn,reverse){var this$0=this;
if(sliceSize===0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k){
if(!(isSkipping&&(isSkipping=skipped++<resolvedBegin))){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0)!==false&&
iterations!==sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached=function(type,reverse){
if(sliceSize!==0&&reverse){
return this.cacheResult().__iterator(type,reverse);}


var iterator=sliceSize!==0&&iterable.__iterator(type,reverse);
var skipped=0;
var iterations=0;
return new Iterator(function(){
while(skipped++<resolvedBegin){
iterator.next();}

if(++iterations>sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys||type===ITERATE_VALUES){
return step;}else 
if(type===ITERATE_KEYS){
return iteratorValue(type,iterations-1,undefined,step);}else 
{
return iteratorValue(type,iterations-1,step.value[1],step);}});};




return sliceSeq;}



function takeWhileFactory(iterable,predicate,context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached=function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterations=0;
iterable.__iterate(function(v,k,c)
{return predicate.call(context,v,k,c)&&++iterations&&fn(v,k,this$0);});

return iterations;};

takeSequence.__iteratorUncached=function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterating=true;
return new Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context,v,k,this$0)){
iterating=false;
return iteratorDone();}

return type===ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return takeSequence;}



function skipWhileFactory(iterable,predicate,context,useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached=function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(!(isSkipping&&(isSkipping=predicate.call(context,v,k,c)))){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0);}});


return iterations;};

skipSequence.__iteratorUncached=function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var skipping=true;
var iterations=0;
return new Iterator(function(){
var step,k,v;
do {
step=iterator.next();
if(step.done){
if(useKeys||type===ITERATE_VALUES){
return step;}else 
if(type===ITERATE_KEYS){
return iteratorValue(type,iterations++,undefined,step);}else 
{
return iteratorValue(type,iterations++,step.value[1],step);}}


var entry=step.value;
k=entry[0];
v=entry[1];
skipping&&(skipping=predicate.call(context,v,k,this$0));}while(
skipping);
return type===ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return skipSequence;}



function concatFactory(iterable,values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v=isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v=KeyedIterable(v);}

return v;}).
filter(function(v){return v.size!==0;});

if(iters.length===0){
return iterable;}


if(iters.length===1){
var singleton=iters[0];
if(singleton===iterable||
isKeyedIterable&&isKeyed(singleton)||
isIndexed(iterable)&&isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq=concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq=concatSeq.toSetSeq();}

concatSeq=concatSeq.flatten(true);
concatSeq.size=iters.reduce(
function(sum,seq){
if(sum!==undefined){
var size=seq.size;
if(size!==undefined){
return sum+size;}}},



0);

return concatSeq;}



function flattenFactory(iterable,depth,useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached=function(fn,reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter,currentDepth){var this$0=this;
iter.__iterate(function(v,k){
if((!depth||currentDepth<depth)&&isIterable(v)){
flatDeep(v,currentDepth+1);}else 
if(fn(v,useKeys?k:iterations++,this$0)===false){
stopped=true;}

return !stopped;},
reverse);}

flatDeep(iterable,0);
return iterations;};

flatSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(type,reverse);
var stack=[];
var iterations=0;
return new Iterator(function(){
while(iterator){
var step=iterator.next();
if(step.done!==false){
iterator=stack.pop();
continue;}

var v=step.value;
if(type===ITERATE_ENTRIES){
v=v[1];}

if((!depth||stack.length<depth)&&isIterable(v)){
stack.push(iterator);
iterator=v.__iterator(type,reverse);}else 
{
return useKeys?step:iteratorValue(type,iterations++,v,step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable,mapper,context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v,k){return coerce(mapper.call(context,v,k,iterable));}).
flatten(true);}



function interposeFactory(iterable,separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size=iterable.size&&iterable.size*2-1;
interposedSequence.__iterateUncached=function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k)
{return (!iterations||fn(separator,iterations++,this$0)!==false)&&
fn(v,iterations++,this$0)!==false;},
reverse);

return iterations;};

interposedSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
var step;
return new Iterator(function(){
if(!step||iterations%2){
step=iterator.next();
if(step.done){
return step;}}


return iterations%2?
iteratorValue(type,iterations++,separator):
iteratorValue(type,iterations++,step.value,step);});};


return interposedSequence;}



function sortFactory(iterable,comparator,mapper){
if(!comparator){
comparator=defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v,k){return [k,v,index++,mapper?mapper(v,k,iterable):v];}).
toArray();
entries.sort(function(a,b){return comparator(a[3],b[3])||a[2]-b[2];}).forEach(
isKeyedIterable?
function(v,i){entries[i].length=2;}:
function(v,i){entries[i]=v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable,comparator,mapper){
if(!comparator){
comparator=defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v,k){return [v,mapper(v,k,iterable)];}).
reduce(function(a,b){return maxCompare(comparator,a[1],b[1])?b:a;});
return entry&&entry[0];}else 
{
return iterable.reduce(function(a,b){return maxCompare(comparator,a,b)?b:a;});}}



function maxCompare(comparator,a,b){
var comp=comparator(b,a);


return comp===0&&b!==a&&(b===undefined||b===null||b!==b)||comp>0;}



function zipWithFactory(keyIter,zipper,iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size=new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate=function(fn,reverse){













var iterator=this.__iterator(ITERATE_VALUES,reverse);
var step;
var iterations=0;
while(!(step=iterator.next()).done){
if(fn(step.value,iterations++,this)===false){
break;}}


return iterations;};

zipSequence.__iteratorUncached=function(type,reverse){
var iterators=iters.map(function(i)
{return i=Iterable(i),getIterator(reverse?i.reverse():i);});

var iterations=0;
var isDone=false;
return new Iterator(function(){
var steps;
if(!isDone){
steps=iterators.map(function(i){return i.next();});
isDone=steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type,
iterations++,
zipper.apply(null,steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter,seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry!==Object(entry)){
throw new TypeError('Expected [K, V] tuple: '+entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size=this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a,b){
return a>b?1:a<b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: '+keyPath);}

iter=getIterator(Iterable(keyPath));}

return iter;}


createClass(Record,KeyedCollection);

function Record(defaultValues,name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized=true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype,keys);
RecordTypePrototype.size=keys.length;
RecordTypePrototype._name=name;
RecordTypePrototype._keys=keys;
RecordTypePrototype._defaultValues=defaultValues;}

this._map=Map(values);};


var RecordTypePrototype=RecordType.prototype=Object.create(RecordPrototype);
RecordTypePrototype.constructor=RecordType;

return RecordType;}


Record.prototype.toString=function(){
return this.__toString(recordName(this)+' {','}');};




Record.prototype.has=function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get=function(k,notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k,defaultVal):defaultVal;};




Record.prototype.clear=function(){
if(this.__ownerID){
this._map&&this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty||(RecordType._empty=makeRecord(this,emptyMap()));};


Record.prototype.set=function(k,v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "'+k+'" on '+recordName(this));}

var newMap=this._map&&this._map.set(k,v);
if(this.__ownerID||newMap===this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.remove=function(k){
if(!this.has(k)){
return this;}

var newMap=this._map&&this._map.remove(k);
if(this.__ownerID||newMap===this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.wasAltered=function(){
return this._map.wasAltered();};


Record.prototype.__iterator=function(type,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterator(type,reverse);};


Record.prototype.__iterate=function(fn,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterate(fn,reverse);};


Record.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map&&this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
return this;}

return makeRecord(this,newMap,ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE]=RecordPrototype.remove;
RecordPrototype.deleteIn=
RecordPrototype.removeIn=MapPrototype.removeIn;
RecordPrototype.merge=MapPrototype.merge;
RecordPrototype.mergeWith=MapPrototype.mergeWith;
RecordPrototype.mergeIn=MapPrototype.mergeIn;
RecordPrototype.mergeDeep=MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith=MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn=MapPrototype.mergeDeepIn;
RecordPrototype.setIn=MapPrototype.setIn;
RecordPrototype.update=MapPrototype.update;
RecordPrototype.updateIn=MapPrototype.updateIn;
RecordPrototype.withMutations=MapPrototype.withMutations;
RecordPrototype.asMutable=MapPrototype.asMutable;
RecordPrototype.asImmutable=MapPrototype.asImmutable;


function makeRecord(likeRecord,map,ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map=map;
record.__ownerID=ownerID;
return record;}


function recordName(record){
return record._name||record.constructor.name||'Record';}


function setProps(prototype,names){
try{
names.forEach(setProp.bind(undefined,prototype));}
catch(error){}}




function setProp(prototype,name){
Object.defineProperty(prototype,name,{
get:function(){
return this.get(name);},

set:function(value){
invariant(this.__ownerID,'Cannot set on an immutable record.');
this.set(name,value);}});}




createClass(Set,SetCollection);



function Set(value){
return value===null||value===undefined?emptySet():
isSet(value)&&!isOrdered(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



Set.of=function(){
return this(arguments);};


Set.fromKeys=function(value){
return this(KeyedIterable(value).keySeq());};


Set.prototype.toString=function(){
return this.__toString('Set {','}');};




Set.prototype.has=function(value){
return this._map.has(value);};




Set.prototype.add=function(value){
return updateSet(this,this._map.set(value,true));};


Set.prototype.remove=function(value){
return updateSet(this,this._map.remove(value));};


Set.prototype.clear=function(){
return updateSet(this,this._map.clear());};




Set.prototype.union=function(){var iters=SLICE$0.call(arguments,0);
iters=iters.filter(function(x){return x.size!==0;});
if(iters.length===0){
return this;}

if(this.size===0&&!this.__ownerID&&iters.length===1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0;ii<iters.length;ii++){
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




Set.prototype.intersect=function(){var iters=SLICE$0.call(arguments,0);
if(iters.length===0){
return this;}

iters=iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





Set.prototype.subtract=function(){var iters=SLICE$0.call(arguments,0);
if(iters.length===0){
return this;}

iters=iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





Set.prototype.merge=function(){
return this.union.apply(this,arguments);};


Set.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return this.union.apply(this,iters);};


Set.prototype.sort=function(comparator){

return OrderedSet(sortFactory(this,comparator));};


Set.prototype.sortBy=function(mapper,comparator){

return OrderedSet(sortFactory(this,comparator,mapper));};


Set.prototype.wasAltered=function(){
return this._map.wasAltered();};


Set.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._map.__iterate(function(_,k){return fn(k,k,this$0);},reverse);};


Set.prototype.__iterator=function(type,reverse){
return this._map.map(function(_,k){return k;}).__iterator(type,reverse);};


Set.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
return this;}

return this.__make(newMap,ownerID);};



function isSet(maybeSet){
return !!(maybeSet&&maybeSet[IS_SET_SENTINEL]);}


Set.isSet=isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=Set.prototype;
SetPrototype[IS_SET_SENTINEL]=true;
SetPrototype[DELETE]=SetPrototype.remove;
SetPrototype.mergeDeep=SetPrototype.merge;
SetPrototype.mergeDeepWith=SetPrototype.mergeWith;
SetPrototype.withMutations=MapPrototype.withMutations;
SetPrototype.asMutable=MapPrototype.asMutable;
SetPrototype.asImmutable=MapPrototype.asImmutable;

SetPrototype.__empty=emptySet;
SetPrototype.__make=makeSet;

function updateSet(set,newMap){
if(set.__ownerID){
set.size=newMap.size;
set._map=newMap;
return set;}

return newMap===set._map?set:
newMap.size===0?set.__empty():
set.__make(newMap);}


function makeSet(map,ownerID){
var set=Object.create(SetPrototype);
set.size=map?map.size:0;
set._map=map;
set.__ownerID=ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET||(EMPTY_SET=makeSet(emptyMap()));}


createClass(OrderedSet,Set);



function OrderedSet(value){
return value===null||value===undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of=function(){
return this(arguments);};


OrderedSet.fromKeys=function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString=function(){
return this.__toString('OrderedSet {','}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet)&&isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet=isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL]=true;

OrderedSetPrototype.__empty=emptyOrderedSet;
OrderedSetPrototype.__make=makeOrderedSet;

function makeOrderedSet(map,ownerID){
var set=Object.create(OrderedSetPrototype);
set.size=map?map.size:0;
set._map=map;
set.__ownerID=ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET||(EMPTY_ORDERED_SET=makeOrderedSet(emptyOrderedMap()));}


createClass(Stack,IndexedCollection);



function Stack(value){
return value===null||value===undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of=function(){
return this(arguments);};


Stack.prototype.toString=function(){
return this.__toString('Stack [',']');};




Stack.prototype.get=function(index,notSetValue){
var head=this._head;
index=wrapIndex(this,index);
while(head&&index--){
head=head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek=function(){
return this._head&&this._head.value;};




Stack.prototype.push=function(){
if(arguments.length===0){
return this;}

var newSize=this.size+arguments.length;
var head=this._head;
for(var ii=arguments.length-1;ii>=0;ii--){
head={
value:arguments[ii],
next:head};}


if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pushAll=function(iter){
iter=IndexedIterable(iter);
if(iter.size===0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head={
value:value,
next:head};});


if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pop=function(){
return this.slice(1);};


Stack.prototype.unshift=function(){
return this.push.apply(this,arguments);};


Stack.prototype.unshiftAll=function(iter){
return this.pushAll(iter);};


Stack.prototype.shift=function(){
return this.pop.apply(this,arguments);};


Stack.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._head=undefined;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyStack();};


Stack.prototype.slice=function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

var resolvedBegin=resolveBegin(begin,this.size);
var resolvedEnd=resolveEnd(end,this.size);
if(resolvedEnd!==this.size){

return IndexedCollection.prototype.slice.call(this,begin,end);}

var newSize=this.size-resolvedBegin;
var head=this._head;
while(resolvedBegin--){
head=head.next;}

if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};




Stack.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
this.__altered=false;
return this;}

return makeStack(this.size,this._head,ownerID,this.__hash);};




Stack.prototype.__iterate=function(fn,reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node){
if(fn(node.value,iterations++,this)===false){
break;}

node=node.next;}

return iterations;};


Stack.prototype.__iterator=function(type,reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new Iterator(function(){
if(node){
var value=node.value;
node=node.next;
return iteratorValue(type,iterations++,value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack&&maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack=isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL]=true;
StackPrototype.withMutations=MapPrototype.withMutations;
StackPrototype.asMutable=MapPrototype.asMutable;
StackPrototype.asImmutable=MapPrototype.asImmutable;
StackPrototype.wasAltered=MapPrototype.wasAltered;


function makeStack(size,head,ownerID,hash){
var map=Object.create(StackPrototype);
map.size=size;
map._head=head;
map.__ownerID=ownerID;
map.__hash=hash;
map.__altered=false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK||(EMPTY_STACK=makeStack(0));}





function mixin(ctor,methods){
var keyCopier=function(key){ctor.prototype[key]=methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols&&
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator=Iterator;

mixin(Iterable,{



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size||0);
this.valueSeq().__iterate(function(v,i){array[i]=v;});
return array;},


toIndexedSeq:function(){
return new ToIndexedSequence(this);},


toJS:function(){
return this.toSeq().map(
function(value){return value&&typeof value.toJS==='function'?value.toJS():value;}).
__toJS();},


toJSON:function(){
return this.toSeq().map(
function(value){return value&&typeof value.toJSON==='function'?value.toJSON():value;}).
__toJS();},


toKeyedSeq:function(){
return new ToKeyedSequence(this,true);},


toMap:function(){

return Map(this.toKeyedSeq());},


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v,k){object[k]=v;});
return object;},


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());},


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);},


toSet:function(){

return Set(isKeyed(this)?this.valueSeq():this);},


toSetSeq:function(){
return new ToSetSequence(this);},


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();},


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);},


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);},





toString:function(){
return '[Iterable]';},


__toString:function(head,tail){
if(this.size===0){
return head+tail;}

return head+' '+this.toSeq().map(this.__toStringMapper).join(', ')+' '+tail;},





concat:function(){var values=SLICE$0.call(arguments,0);
return reify(this,concatFactory(this,values));},


includes:function(searchValue){
return this.some(function(value){return is(value,searchValue);});},


entries:function(){
return this.__iterator(ITERATE_ENTRIES);},


every:function(predicate,context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v,k,c){
if(!predicate.call(context,v,k,c)){
returnValue=false;
return false;}});


return returnValue;},


filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,true));},


find:function(predicate,context,notSetValue){
var entry=this.findEntry(predicate,context);
return entry?entry[1]:notSetValue;},


findEntry:function(predicate,context){
var found;
this.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
found=[k,v];
return false;}});


return found;},


findLastEntry:function(predicate,context){
return this.toSeq().reverse().findEntry(predicate,context);},


forEach:function(sideEffect,context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);},


join:function(separator){
assertNotInfinite(this.size);
separator=separator!==undefined?''+separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst=false:joined+=separator;
joined+=v!==null&&v!==undefined?v.toString():'';});

return joined;},


keys:function(){
return this.__iterator(ITERATE_KEYS);},


map:function(mapper,context){
return reify(this,mapFactory(this,mapper,context));},


reduce:function(reducer,initialReduction,context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length<2){
useFirst=true;}else 
{
reduction=initialReduction;}

this.__iterate(function(v,k,c){
if(useFirst){
useFirst=false;
reduction=v;}else 
{
reduction=reducer.call(context,reduction,v,k,c);}});


return reduction;},


reduceRight:function(reducer,initialReduction,context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed,arguments);},


reverse:function(){
return reify(this,reverseFactory(this,true));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,true));},


some:function(predicate,context){
return !this.every(not(predicate),context);},


sort:function(comparator){
return reify(this,sortFactory(this,comparator));},


values:function(){
return this.__iterator(ITERATE_VALUES);},





butLast:function(){
return this.slice(0,-1);},


isEmpty:function(){
return this.size!==undefined?this.size===0:!this.some(function(){return true;});},


count:function(predicate,context){
return ensureSize(
predicate?this.toSeq().filter(predicate,context):this);},



countBy:function(grouper,context){
return countByFactory(this,grouper,context);},


equals:function(other){
return deepEqual(this,other);},


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq=function(){return iterable.toSeq();};
return entriesSequence;},


filterNot:function(predicate,context){
return this.filter(not(predicate),context);},


findLast:function(predicate,context,notSetValue){
return this.toKeyedSeq().reverse().find(predicate,context,notSetValue);},


first:function(){
return this.find(returnTrue);},


flatMap:function(mapper,context){
return reify(this,flatMapFactory(this,mapper,context));},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,true));},


fromEntrySeq:function(){
return new FromEntriesSequence(this);},


get:function(searchKey,notSetValue){
return this.find(function(_,key){return is(key,searchKey);},undefined,notSetValue);},


getIn:function(searchKeyPath,notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step=iter.next()).done){
var key=step.value;
nested=nested&&nested.get?nested.get(key,NOT_SET):NOT_SET;
if(nested===NOT_SET){
return notSetValue;}}


return nested;},


groupBy:function(grouper,context){
return groupByFactory(this,grouper,context);},


has:function(searchKey){
return this.get(searchKey,NOT_SET)!==NOT_SET;},


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath,NOT_SET)!==NOT_SET;},


isSubset:function(iter){
iter=typeof iter.includes==='function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});},


isSuperset:function(iter){
iter=typeof iter.isSubset==='function'?iter:Iterable(iter);
return iter.isSubset(this);},


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();},


last:function(){
return this.toSeq().reverse().first();},


max:function(comparator){
return maxFactory(this,comparator);},


maxBy:function(mapper,comparator){
return maxFactory(this,comparator,mapper);},


min:function(comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator);},


minBy:function(mapper,comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator,mapper);},


rest:function(){
return this.slice(1);},


skip:function(amount){
return this.slice(Math.max(0,amount));},


skipLast:function(amount){
return reify(this,this.toSeq().reverse().skip(amount).reverse());},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,true));},


skipUntil:function(predicate,context){
return this.skipWhile(not(predicate),context);},


sortBy:function(mapper,comparator){
return reify(this,sortFactory(this,comparator,mapper));},


take:function(amount){
return this.slice(0,Math.max(0,amount));},


takeLast:function(amount){
return reify(this,this.toSeq().reverse().take(amount).reverse());},


takeWhile:function(predicate,context){
return reify(this,takeWhileFactory(this,predicate,context));},


takeUntil:function(predicate,context){
return this.takeWhile(not(predicate),context);},


valueSeq:function(){
return this.toIndexedSeq();},





hashCode:function(){
return this.__hash||(this.__hash=hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL]=true;
IterablePrototype[ITERATOR_SYMBOL]=IterablePrototype.values;
IterablePrototype.__toJS=IterablePrototype.toArray;
IterablePrototype.__toStringMapper=quoteString;
IterablePrototype.inspect=
IterablePrototype.toSource=function(){return this.toString();};
IterablePrototype.chain=IterablePrototype.flatMap;
IterablePrototype.contains=IterablePrototype.includes;


(function(){
try{
Object.defineProperty(IterablePrototype,'length',{
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error){
stack=error.stack;}

if(stack.indexOf('_wrapObject')===-1){
console&&console.warn&&console.warn(
'iterable.length has been deprecated, '+
'use iterable.size or iterable.count(). '+
'This warning will become a silent error in a future version. '+
stack);

return this.size;}}}});}




catch(e){}})();




mixin(KeyedIterable,{



flip:function(){
return reify(this,flipFactory(this));},


findKey:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry&&entry[0];},


findLastKey:function(predicate,context){
return this.toSeq().reverse().findKey(predicate,context);},


keyOf:function(searchValue){
return this.findKey(function(value){return is(value,searchValue);});},


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value,searchValue);});},


mapEntries:function(mapper,context){var this$0=this;
var iterations=0;
return reify(this,
this.toSeq().map(
function(v,k){return mapper.call(context,[k,v],iterations++,this$0);}).
fromEntrySeq());},



mapKeys:function(mapper,context){var this$0=this;
return reify(this,
this.toSeq().flip().map(
function(k,v){return mapper.call(context,k,v,this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL]=true;
KeyedIterablePrototype[ITERATOR_SYMBOL]=IterablePrototype.entries;
KeyedIterablePrototype.__toJS=IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper=function(v,k){return JSON.stringify(k)+': '+quoteString(v);};



mixin(IndexedIterable,{



toKeyedSeq:function(){
return new ToKeyedSequence(this,false);},





filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,false));},


findIndex:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry?entry[0]:-1;},


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key===undefined?-1:key;},


lastIndexOf:function(searchValue){
var key=this.toKeyedSeq().reverse().keyOf(searchValue);
return key===undefined?-1:key;},





reverse:function(){
return reify(this,reverseFactory(this,false));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,false));},


splice:function(index,removeNum){
var numArgs=arguments.length;
removeNum=Math.max(removeNum|0,0);
if(numArgs===0||numArgs===2&&!removeNum){
return this;}




index=resolveBegin(index,index<0?this.count():this.size);
var spliced=this.slice(0,index);
return reify(
this,
numArgs===1?
spliced:
spliced.concat(arrCopy(arguments,2),this.slice(index+removeNum)));},






findLastIndex:function(predicate,context){
var key=this.toKeyedSeq().findLastKey(predicate,context);
return key===undefined?-1:key;},


first:function(){
return this.get(0);},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,false));},


get:function(index,notSetValue){
index=wrapIndex(this,index);
return index<0||this.size===Infinity||
this.size!==undefined&&index>this.size?
notSetValue:
this.find(function(_,key){return key===index;},undefined,notSetValue);},


has:function(index){
index=wrapIndex(this,index);
return index>=0&&(this.size!==undefined?
this.size===Infinity||index<this.size:
this.indexOf(index)!==-1);},



interpose:function(separator){
return reify(this,interposeFactory(this,separator));},


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(),IndexedSeq.of,iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size=zipped.size*iterables.length;}

return reify(this,interleaved);},


last:function(){
return this.get(-1);},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,false));},


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this,zipWithFactory(this,defaultZipper,iterables));},


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0]=this;
return reify(this,zipWithFactory(this,zipper,iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL]=true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL]=true;



mixin(SetIterable,{



get:function(value,notSetValue){
return this.has(value)?value:notSetValue;},


includes:function(value){
return this.has(value);},





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has=IterablePrototype.includes;




mixin(KeyedSeq,KeyedIterable.prototype);
mixin(IndexedSeq,IndexedIterable.prototype);
mixin(SetSeq,SetIterable.prototype);

mixin(KeyedCollection,KeyedIterable.prototype);
mixin(IndexedCollection,IndexedIterable.prototype);
mixin(SetCollection,SetIterable.prototype);




function keyMapper(v,k){
return k;}


function entryMapper(v,k){
return [k,v];}


function not(predicate){
return function(){
return !predicate.apply(this,arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this,arguments);};}



function quoteString(value){
return typeof value==='string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a,b){
return a<b?1:a>b?-1:0;}


function hashIterable(iterable){
if(iterable.size===Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v,k){h=31*h+hashMerge(hash(v),hash(k))|0;}:
function(v,k){h=h+hashMerge(hash(v),hash(k))|0;}:
ordered?
function(v){h=31*h+hash(v)|0;}:
function(v){h=h+hash(v)|0;});

return murmurHashOfSize(size,h);}


function murmurHashOfSize(size,h){
h=imul(h,0xCC9E2D51);
h=imul(h<<15|h>>>-15,0x1B873593);
h=imul(h<<13|h>>>-13,5);
h=(h+0xE6546B64|0)^size;
h=imul(h^h>>>16,0x85EBCA6B);
h=imul(h^h>>>13,0xC2B2AE35);
h=smi(h^h>>>16);
return h;}


function hashMerge(a,b){
return a^b+0x9E3779B9+(a<<6)+(a>>2)|0;}


var Immutable={

Iterable:Iterable,

Seq:Seq,
Collection:Collection,
Map:Map,
OrderedMap:OrderedMap,
List:List,
Stack:Stack,
Set:Set,
OrderedSet:OrderedSet,

Record:Record,
Range:Range,
Repeat:Repeat,

is:is,
fromJS:fromJS};



return Immutable;});
});
__d('NavigatorBreadcrumbNavigationBar',function(global, require, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var NavigatorNavigationBarStyles=Platform.OS==='android'?
NavigatorNavigationBarStylesAndroid:NavigatorNavigationBarStylesIOS;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex!==undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index===presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index<presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar',
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex>fromIndex?progress:1-progress;
var oldDistToCenter=index-fromIndex;
var newDistToCenter=index-toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for '+index);

if(oldDistToCenter>0&&newDistToCenter===0||
newDistToCenter>0&&oldDistToCenter===0){
interpolate=Interpolators[index].RightToCenter;}else 
if(oldDistToCenter<0&&newDistToCenter===0||
newDistToCenter<0&&oldDistToCenter===0){
interpolate=Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter===newDistToCenter){
interpolate=Interpolators[index].RightToCenter;}else 
{
interpolate=Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this._setPropsIfExists('crumb_'+index,CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this._setPropsIfExists('icon_'+index,ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this._setPropsIfExists('separator_'+index,SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this._setPropsIfExists('title_'+index,TITLE_PROPS[index]);}

var right=this.refs['right_'+index];
if(right&&
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index<=max;index++){
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index<=max;index++){
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length-1;
for(var index=0;index<=max;index++){
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this._setPropsIfExists('icon_'+index,props);
this._setPropsIfExists('separator_'+index,props);
this._setPropsIfExists('title_'+index,props);
this._setPropsIfExists('right_'+index,props);},


componentWillMount:function(){
this._descriptors={
crumb:new Map(),
title:new Map(),
right:new Map()};},



render:function(){
var navState=this.props.navState;
var icons=navState&&navState.routeStack.map(this._getBreadcrumb);
var titles=navState.routeStack.map(this._getTitle);
var buttons=navState.routeStack.map(this._getRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_getBreadcrumb:function(route,index){
if(this._descriptors.crumb.has(route)){
return this._descriptors.crumb.get(route);}


var navBarRouteMapper=this.props.routeMapper;
var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var breadcrumbDescriptor=
React.createElement(View,{
key:'crumb_'+index,
ref:'crumb_'+index,
style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_'+index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,this.props.navigator)),

React.createElement(View,{ref:'separator_'+index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,this.props.navigator)));




this._descriptors.crumb=this._descriptors.crumb.set(route,breadcrumbDescriptor);
return breadcrumbDescriptor;},


_getTitle:function(route,index){
if(this._descriptors.title.has(route)){
return this._descriptors.title.get(route);}


var titleContent=this.props.routeMapper.titleContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var titleDescriptor=
React.createElement(View,{
key:'title_'+index,
ref:'title_'+index,
style:firstStyles.Title},
titleContent);


this._descriptors.title=this._descriptors.title.set(route,titleDescriptor);
return titleDescriptor;},


_getRightButton:function(route,index){
if(this._descriptors.right.has(route)){
return this._descriptors.right.get(route);}

var rightContent=this.props.routeMapper.rightContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

if(!rightContent){
this._descriptors.right=this._descriptors.right.set(route,null);
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
var rightButtonDescriptor=
React.createElement(View,{
key:'right_'+index,
ref:'right_'+index,
style:firstStyles.RightItem},
rightContent);


this._descriptors.right=this._descriptors.right.set(route,rightButtonDescriptor);
return rightButtonDescriptor;},


_setPropsIfExists:function(ref,props){
var ref=this.refs[ref];
ref&&ref.setNativeProps(props);}});



var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports=NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStylesIOS.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStylesIOS.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH+SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i<MAX_BREADCRUMBS;i++){
var crumbLeft=CRUMB_WIDTH*i+SPACING;
LEFT[i]={
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i]={
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft+ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH-100;
RIGHT[i]={
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight+ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0]={
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH/4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title=merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH/4,opacity:0});
RIGHT[0].Title=merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports={
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStylesIOS',function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT+STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:0,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH/2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH/3,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH/3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2*SCREEN_WIDTH/3-0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH/2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports={
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',function(global, require, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(')+1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE)||
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b'+paramName+'\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{')+1,fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0=matVar[0];
m1=matVar[1];
m2=matVar[2];
m3=matVar[3];
m4=matVar[4];
m5=matVar[5];
m6=matVar[6];
m7=matVar[7];
m8=matVar[8];
m9=matVar[9];
m10=matVar[10];
m11=matVar[11];
m12=matVar[12];
m13=matVar[13];
m14=matVar[14];
m15=matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar=retVar||
m0!==matVar[0]||
m1!==matVar[1]||
m2!==matVar[2]||
m3!==matVar[3]||
m4!==matVar[4]||
m5!==matVar[5]||
m6!==matVar[6]||
m7!==matVar[7]||
m8!==matVar[8]||
m9!==matVar[9]||
m10!==matVar[10]||
m11!==matVar[11]||
m12!==matVar[12]||
m13!==matVar[13]||
m14!==matVar[14]||
m15!==matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0]=matVar[0]*x;
matVar[1]=matVar[1]*x;
matVar[2]=matVar[2]*x;
matVar[3]=matVar[3]*x;
matVar[4]=matVar[4]*y;
matVar[5]=matVar[5]*y;
matVar[6]=matVar[6]*y;
matVar[7]=matVar[7]*y;
matVar[8]=matVar[8]*z;
matVar[9]=matVar[9]*z;
matVar[10]=matVar[10]*z;
matVar[11]=matVar[11]*z;
matVar[12]=matVar[12];
matVar[13]=matVar[13];
matVar[14]=matVar[14];
matVar[15]=matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12]=matVar[0]*x+matVar[4]*y+matVar[8]*z+matVar[12];
matVar[13]=matVar[1]*x+matVar[5]*y+matVar[9]*z+matVar[13];
matVar[14]=matVar[2]*x+matVar[6]*y+matVar[10]*z+matVar[14];
matVar[15]=matVar[3]*x+matVar[7]*y+matVar[11]*z+matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat+xQuat;
var y2Quat=yQuat+yQuat;
var z2Quat=zQuat+zQuat;
var xxQuat=xQuat*x2Quat;
var xyQuat=xQuat*y2Quat;
var xzQuat=xQuat*z2Quat;
var yyQuat=yQuat*y2Quat;
var yzQuat=yQuat*z2Quat;
var zzQuat=zQuat*z2Quat;
var wxQuat=wQuat*x2Quat;
var wyQuat=wQuat*y2Quat;
var wzQuat=wQuat*z2Quat;

var quatMat0=1-(yyQuat+zzQuat);
var quatMat1=xyQuat+wzQuat;
var quatMat2=xzQuat-wyQuat;
var quatMat4=xyQuat-wzQuat;
var quatMat5=1-(xxQuat+zzQuat);
var quatMat6=yzQuat+wxQuat;
var quatMat8=xzQuat+wyQuat;
var quatMat9=yzQuat-wxQuat;
var quatMat10=1-(xxQuat+yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0]=b0*a00+b1*a10+b2*a20;
matVar[1]=b0*a01+b1*a11+b2*a21;
matVar[2]=b0*a02+b1*a12+b2*a22;
matVar[3]=b0*a03+b1*a13+b2*a23;
b0=quatMat4;b1=quatMat5;b2=quatMat6;
matVar[4]=b0*a00+b1*a10+b2*a20;
matVar[5]=b0*a01+b1*a11+b2*a21;
matVar[6]=b0*a02+b1*a12+b2*a22;
matVar[7]=b0*a03+b1*a13+b2*a23;
b0=quatMat8;b1=quatMat9;b2=quatMat10;
matVar[8]=b0*a00+b1*a10+b2*a20;
matVar[9]=b0*a01+b1*a11+b2*a21;
matVar[10]=b0*a02+b1*a12+b2*a22;
matVar[11]=b0*a03+b1*a13+b2*a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0]=opVar[0];
matVar[1]=0;
matVar[2]=0;
matVar[3]=0;
matVar[4]=0;
matVar[5]=opVar[1];
matVar[6]=0;
matVar[7]=0;
matVar[8]=0;
matVar[9]=0;
matVar[10]=opVar[2];
matVar[11]=0;
matVar[12]=0;
matVar[13]=0;
matVar[14]=0;
matVar[15]=1;},


transformTranslate:function(matVar,opVar){

matVar[0]=1;
matVar[1]=0;
matVar[2]=0;
matVar[3]=0;
matVar[4]=0;
matVar[5]=1;
matVar[6]=0;
matVar[7]=0;
matVar[8]=0;
matVar[9]=0;
matVar[10]=1;
matVar[11]=0;
matVar[12]=opVar[0];
matVar[13]=opVar[1];
matVar[14]=opVar[2];
matVar[15]=1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat+xQuat;
var y2Quat=yQuat+yQuat;
var z2Quat=zQuat+zQuat;
var xxQuat=xQuat*x2Quat;
var xyQuat=xQuat*y2Quat;
var xzQuat=xQuat*z2Quat;
var yyQuat=yQuat*y2Quat;
var yzQuat=yQuat*z2Quat;
var zzQuat=zQuat*z2Quat;
var wxQuat=wQuat*x2Quat;
var wyQuat=wQuat*y2Quat;
var wzQuat=wQuat*z2Quat;

var quatMat0=1-(yyQuat+zzQuat);
var quatMat1=xyQuat+wzQuat;
var quatMat2=xzQuat-wyQuat;
var quatMat4=xyQuat-wzQuat;
var quatMat5=1-(xxQuat+zzQuat);
var quatMat6=yzQuat+wxQuat;
var quatMat8=xzQuat+wyQuat;
var quatMat9=yzQuat-wxQuat;
var quatMat10=1-(xxQuat+yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0]=b0;
matVar[1]=b1;
matVar[2]=b2;
matVar[3]=0;
b0=quatMat4;b1=quatMat5;b2=quatMat6;
matVar[4]=b0;
matVar[5]=b1;
matVar[6]=b2;
matVar[7]=0;
b0=quatMat8;b1=quatMat9;b2=quatMat10;
matVar[8]=b0;
matVar[9]=b1;
matVar[10]=b2;
matVar[11]=0;
matVar[12]=0;
matVar[13]=0;
matVar[14]=0;
matVar[15]=1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n'+
'    var prevVal = result.'+name+';\n'+
'    result.'+name+' = '+tmpVarName+';\n'+
'    didChange = didChange  || ('+tmpVarName+' !== prevVal);\n'+
'  } else {\n'+
'    result.'+name+' = '+tmpVarName+';\n'+
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio='round' in anim;
var roundRatio=anim.round;
var fn='  ratio = (value - '+anim.min+') / '+(anim.max-anim.min)+';\n';
if(!anim.extrapolate){
fn+='  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round('+roundRatio+' * ':'';
var roundClose=hasRoundRatio?') / '+roundRatio:'';
fn+=
'  '+tmpVarName+' = '+
roundOpen+
'('+from+' * (1 - ratio) + '+to+' * ratio)'+
roundClose+';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = '+constantExpression+';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= '+(
anim.threshold+' ? '+anim.to+' : '+anim.from)+';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name+'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims){
if(ShouldAllocateReusableOperationVars[name]){
ret+='var '+operationVar(name)+' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n'+statements.join('\n')+'\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name)+'['+index+']';
if(anim.from[dimension]!==undefined&&anim.to[dimension]!==undefined){
return '  '+anim.from[dimension]!==anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess+' = '+anim.from[dimension]+';';}else 
{
return '  '+fieldAccess+' = '+InitialOperationField[name][index]+';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex<16;varIndex++){
unrolledVars.push('m'+varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? '+
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i<orderedMatrixOperations.length;i++){
var opName=orderedMatrixOperations[i];
if(i===0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn+=createReusableOperationVars(anims);
fn+='return function(result, value) {\n';
fn+='  var didChange = false;\n';
fn+='  var nextScalarVal;\n';
fn+='  var ratio;\n';

for(var name in anims){
var anim=anims[name];
if(anim.type==='linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name===TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn+=newlines(setOperations);}else 
{
fn+=computeNextValLinearScalar(anim,'nextScalarVal');
fn+=setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type==='constant'){
fn+=computeNextValConstant(anim);
fn+=setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type==='step'){
fn+=computeNextValStep(anim);
fn+=setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type==='identity'){
fn+=computeNextValIdentity(anim);
fn+=setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn+=newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn+='  return didChange;\n';
fn+='};\n';
fn+='})()';
return fn;};







var buildStyleInterpolator=function(anims){

var interpolator=null;
function lazyStyleInterpolator(result,value){
if(interpolator===null){
interpolator=Function(createFunctionString(anims))();}

return interpolator(result,value);}

return lazyStyleInterpolator;};


module.exports=buildStyleInterpolator;
});
__d('NavigatorNavigationBarStylesAndroid',function(global, require, module, exports) {  'use strict';



























var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');


var NAV_BAR_HEIGHT=56;
var TITLE_LEFT=72;
var BUTTON_SIZE=24;
var TOUCH_TARGT_SIZE=48;
var BUTTON_HORIZONTAL_MARGIN=16;

var BUTTON_EFFECTIVE_MARGIN=BUTTON_HORIZONTAL_MARGIN-(TOUCH_TARGT_SIZE-BUTTON_SIZE)/2;
var NAV_ELEMENT_HEIGHT=NAV_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
bottom:0,
left:0,
right:0,
alignItems:'flex-start',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent',
marginLeft:TITLE_LEFT},

LeftButton:{
position:'absolute',
top:0,
left:BUTTON_EFFECTIVE_MARGIN,
overflow:'hidden',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:0,
right:BUTTON_EFFECTIVE_MARGIN,
overflow:'hidden',
alignItems:'flex-end',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports={
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:0,
TotalNavHeight:NAV_BAR_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('NavigatorNavigationBar',function(global, require, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');
var Platform=require('Platform');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var NavigatorNavigationBarStyles=Platform.OS==='android'?
NavigatorNavigationBarStylesAndroid:NavigatorNavigationBarStylesIOS;

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex!==undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar',

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}).
isRequired,
navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

navigationStyles:React.PropTypes.object,
style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles,
StylesAndroid:NavigatorNavigationBarStylesAndroid,
StylesIOS:NavigatorNavigationBarStylesIOS},


getDefaultProps:function(){
return {
navigationStyles:NavigatorNavigationBarStyles};},



componentWillMount:function(){var _this=this;
this._components={};
this._descriptors={};

COMPONENT_NAMES.forEach(function(componentName){
_this._components[componentName]=new Map();
_this._descriptors[componentName]=new Map();});},



_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps={};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack=this._reusableProps[componentName]=[];}

var props=propStack[index];
if(!props){
props=propStack[index]={style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex>fromIndex?progress:1-progress;
var oldDistToCenter=index-fromIndex;
var newDistToCenter=index-toIndex;
var interpolate;
if(oldDistToCenter>0&&newDistToCenter===0||
newDistToCenter>0&&oldDistToCenter===0){
interpolate=this.props.navigationStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter<0&&newDistToCenter===0||
newDistToCenter<0&&oldDistToCenter===0){
interpolate=this.props.navigationStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter===newDistToCenter){
interpolate=this.props.navigationStyles.Interpolators.RightToCenter;}else 
{
interpolate=this.props.navigationStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this._components[componentName].get(this.props.navState.routeStack[index]);
var props=this._getReusableProps(componentName,index);
if(component&&interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index<=max;index++){
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navBarStyle={
height:this.props.navigationStyles.General.TotalNavHeight};

var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._getComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,navBarStyle,this.props.style]},
components));},




_getComponent:function(
componentName,
route,
index)
{var _this2=this;
if(this._descriptors[componentName].includes(route)){
return this._descriptors[componentName].get(route);}


var rendered=null;

var content=this.props.routeMapper[componentName](
this.props.navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index===navStatePresentedIndex(this.props.navState)?
this.props.navigationStyles.Stages.Center:
this.props.navigationStyles.Stages.Left;
rendered=
React.createElement(View,{
ref:function(ref){
_this2._components[componentName]=_this2._components[componentName].set(route,ref);},

style:initialStage[componentName]},
content);



this._descriptors[componentName]=this._descriptors[componentName].set(route,rendered);
return rendered;}});





var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports=NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width*0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width*0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=babelHelpers.extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH*0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH*0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheUp={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:-Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:-Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheDown={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=babelHelpers.extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheDown=babelHelpers.extends({},
FromTheRight,{
transformTranslate:{
from:{y:SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheTop=babelHelpers.extends({},
FromTheRight,{
transformTranslate:{
from:{y:-SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:-SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:100,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:100,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3/5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=babelHelpers.extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseDownUpGesture=babelHelpers.extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'down-to-up'});


var BaseUpDownGesture=babelHelpers.extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'up-to-down'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:babelHelpers.extends({},
BaseConfig),


FloatFromRight:babelHelpers.extends({},
BaseConfig),


FloatFromLeft:babelHelpers.extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:babelHelpers.extends({},
BaseConfig,{
gestures:{
pop:babelHelpers.extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:babelHelpers.extends({},
BaseConfig,{
gestures:null,
defaultTransitionVelocity:3,
springFriction:20,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:babelHelpers.extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:babelHelpers.extends({},
BaseConfig,{
gestures:{
jumpBack:babelHelpers.extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:babelHelpers.extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}}),


VerticalUpSwipeJump:babelHelpers.extends({},
BaseConfig,{
gestures:{
jumpBack:babelHelpers.extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:babelHelpers.extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheDown),
out:buildStyleInterpolator(ToTheUp)}}),


VerticalDownSwipeJump:babelHelpers.extends({},
BaseConfig,{
gestures:{
jumpBack:babelHelpers.extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:babelHelpers.extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheTop),
out:buildStyleInterpolator(ToTheDown)}})};




module.exports=NavigatorSceneConfigs;
});
__d('PanResponder',function(global, require, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX=0;
gestureState.moveY=0;
gestureState.x0=0;
gestureState.y0=0;
gestureState.dx=0;
gestureState.dy=0;
gestureState.vx=0;
gestureState.vy=0;
gestureState.numberActiveTouches=0;

gestureState._accountsForMovesUpTo=0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
gestureState.moveX=currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY=currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx+(x-prevX);
var nextDY=gestureState.dy+(y-prevY);


var dt=
touchHistory.mostRecentTimeStamp-gestureState._accountsForMovesUpTo;
gestureState.vx=(nextDX-gestureState.dx)/dt;
gestureState.vy=(nextDY-gestureState.dy)/dt;

gestureState.dx=nextDX;
gestureState.dy=nextDY;
gestureState._accountsForMovesUpTo=touchHistory.mostRecentTimeStamp;},


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder===undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder===undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length===1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches=e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture!==undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo===touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetPanResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0=currentCentroidX(e.touchHistory);
gestureState.y0=currentCentroidY(e.touchHistory);
gestureState.dx=0;
gestureState.dy=0;
config.onPanResponderGrant&&config.onPanResponderGrant(e,gestureState);

return config.onShouldBlockNativeResponder===undefined?true:
config.onShouldBlockNativeResponder();},


onResponderReject:function(e){
config.onPanResponderReject&&config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease&&config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
config.onPanResponderStart&&config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo===touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove&&config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches=touchHistory.numberActiveTouches;
config.onPanResponderEnd&&config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate&&
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest===undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports=PanResponder;
});
__d('TouchHistoryMath',function(global, require, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches===1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData!==null){
if(oneTouchData.touchActive&&oneTouchData.currentTimeStamp>touchesChangedAfter){
total+=ofCurrent&&isXAxis?oneTouchData.currentPageX:
ofCurrent&&!isXAxis?oneTouchData.currentPageY:
!ofCurrent&&isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count=1;}}else 

{
for(var i=0;i<touchBank.length;i++){
var touchTrack=touchBank[i];
if(touchTrack!==null&&
touchTrack!==undefined&&
touchTrack.touchActive&&
touchTrack.currentTimeStamp>=touchesChangedAfter){
var toAdd;
if(ofCurrent&&isXAxis){
toAdd=touchTrack.currentPageX;}else 
if(ofCurrent&&!isXAxis){
toAdd=touchTrack.currentPageY;}else 
if(!ofCurrent&&isXAxis){
toAdd=touchTrack.previousPageX;}else 
{
toAdd=touchTrack.previousPageY;}

total+=toAdd;
count++;}}}



return count>0?total/count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports=TouchHistoryMath;
});
__d('clamp',function(global, require, module, exports) {  function 























clamp(min,value,max){
if(value<min){
return min;}

if(value>max){
return max;}

return value;}


module.exports=clamp;
});
__d('rebound/rebound.js',function(global, require, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util={};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind=function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend=function extend(target,source){
for(var key in source){
if(source.hasOwnProperty(key)){
target[key]=source[key];}}};









var SpringSystem=rebound.SpringSystem=function SpringSystem(looper){
this._springRegistry={};
this._activeSprings=[];
this.listeners=[];
this._idleSpringIndices=[];
this.looper=looper||new AnimationLooper();
this.looper.springSystem=this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper=looper;
looper.springSystem=this;},






createSpring:function(tension,friction){
var springConfig;
if(tension===undefined||friction===undefined){
springConfig=SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig=
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness===undefined||speed===undefined){
springConfig=SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig=
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry){
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()]=spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length>0){this._idleSpringIndices.pop();}
for(var i=0,len=this._activeSprings.length;i<len;i++){
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time/1000.0,deltaTime/1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length>0){
var idx=this._idleSpringIndices.pop();
idx>=0&&this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis===-1){
this._lastTimeMillis=currentTimeMillis-1;}

var ellapsedMillis=currentTimeMillis-this._lastTimeMillis;
this._lastTimeMillis=currentTimeMillis;

var i=0,len=this.listeners.length;
for(i=0;i<len;i++){
listener=this.listeners[i];
listener.onBeforeIntegrate&&listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length===0){
this._isIdle=true;
this._lastTimeMillis=-1;}


for(i=0;i<len;i++){
listener=this.listeners[i];
listener.onAfterIntegrate&&listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring)==-1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle=false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners=[];}});


















var Spring=rebound.Spring=function Spring(springSystem){
this._id='s'+Spring._ID++;
this._springSystem=springSystem;
this.listeners=[];
this._currentState=new PhysicsState();
this._previousState=new PhysicsState();
this._tempState=new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners=[];
this.frames=[];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig=springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue=currentValue;
this._currentState.position=currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue-state.position);},








setEndValue:function(endValue){
if(this._endValue==endValue&&this.isAtRest()){
return this;}

this._startValue=this.getCurrentValue();
this._endValue=endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i<len;i++){
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange&&onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity===this._currentState.velocity){
return this;}

this._currentState.velocity=velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold=restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold=displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled=enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension>0&&(
start<end&&this.getCurrentValue()>end||
start>end&&this.getCurrentValue()<end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest&&this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime>Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime=Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator+=adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator>=Spring.SOLVER_TIMESTEP_SEC){

this._timeAccumulator-=Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator<Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position=position;
this._previousState.velocity=velocity;}


aVelocity=velocity;
aAcceleration=
tension*(this._endValue-tempPosition)-friction*velocity;

tempPosition=position+aVelocity*Spring.SOLVER_TIMESTEP_SEC*0.5;
tempVelocity=
velocity+aAcceleration*Spring.SOLVER_TIMESTEP_SEC*0.5;
bVelocity=tempVelocity;
bAcceleration=
tension*(this._endValue-tempPosition)-friction*tempVelocity;

tempPosition=position+bVelocity*Spring.SOLVER_TIMESTEP_SEC*0.5;
tempVelocity=
velocity+bAcceleration*Spring.SOLVER_TIMESTEP_SEC*0.5;
cVelocity=tempVelocity;
cAcceleration=
tension*(this._endValue-tempPosition)-friction*tempVelocity;

tempPosition=position+cVelocity*Spring.SOLVER_TIMESTEP_SEC*0.5;
tempVelocity=
velocity+cAcceleration*Spring.SOLVER_TIMESTEP_SEC*0.5;
dVelocity=tempVelocity;
dAcceleration=
tension*(this._endValue-tempPosition)-friction*tempVelocity;

dxdt=
1.0/6.0*(aVelocity+2.0*(bVelocity+cVelocity)+dVelocity);
dvdt=1.0/6.0*(
aAcceleration+2.0*(bAcceleration+cAcceleration)+dAcceleration);


position+=dxdt*Spring.SOLVER_TIMESTEP_SEC;
velocity+=dvdt*Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position=tempPosition;
this._tempState.velocity=tempVelocity;

this._currentState.position=position;
this._currentState.velocity=velocity;

if(this._timeAccumulator>0){
this._interpolate(this._timeAccumulator/Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest()||
this._overshootClampingEnabled&&this.isOvershooting()){

if(this._springConfig.tension>0){
this._startValue=this._endValue;
this._currentState.position=this._endValue;}else 
{
this._endValue=this._currentState.position;
this._startValue=this._endValue;}

this.setVelocity(0);
isAtRest=true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest=false;
notifyActivate=true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest=true;
notifyAtRest=true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i<len;i++){
var listener=this.listeners[i];
if(notifyActivate&&listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest&&listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest()||!this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity)<this._restSpeedThreshold&&(
this.getDisplacementDistanceForState(this._currentState)<=
this._displacementFromRestThreshold||
this._springConfig.tension===0);},






setAtRest:function(){
this._endValue=this._currentState.position;
this._tempState.position=this._currentState.position;
this._currentState.velocity=0;
return this;},


_interpolate:function(alpha){
this._currentState.position=this._currentState.position*
alpha+this._previousState.position*(1-alpha);
this._currentState.velocity=this._currentState.velocity*
alpha+this._previousState.velocity*(1-alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners=[];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue()-value)<=
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig=
function SpringConfig(tension,friction){
this.tension=tension;
this.friction=friction;};







var AnimationLooper=rebound.AnimationLooper=function AnimationLooper(){
this.springSystem=null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run=function(){
util.onFrame(_run);};};









rebound.SimulationLooper=function SimulationLooper(timestep){
this.springSystem=null;
var time=0;
var running=false;
timestep=timestep||16.667;

this.run=function(){
if(running){
return;}

running=true;
while(!this.springSystem.getIsIdle()){
this.springSystem.loop(time+=timestep);}

running=false;};};








rebound.SteppingSimulationLooper=function(timestep){
this.springSystem=null;
var time=0;



this.run=function(){};


this.step=function(timestep){
this.springSystem.loop(time+=timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter={
tensionFromOrigamiValue:function(oValue){
return (oValue-30.0)*3.62+194.0;},


origamiValueFromTension:function(tension){
return (tension-194.0)/3.62+30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue-8.0)*3.0+25.0;},


origamiFromFriction:function(friction){
return (friction-25.0)/3.0+8.0;}};










var BouncyConversion=rebound.BouncyConversion=function(bounciness,speed){
this.bounciness=bounciness;
this.speed=speed;
var b=this.normalize(bounciness/1.7,0,20.0);
b=this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed/1.7,0,20.0);
this.bouncyTension=this.projectNormal(s,0.5,200);
this.bouncyFriction=this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value-startValue)/(endValue-startValue);},


projectNormal:function(n,start,end){
return start+n*(end-start);},


linearInterpolation:function(t,start,end){
return t*end+(1.0-t)*start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2*t-t*t,start,end);},


b3Friction1:function(x){
return 0.0007*Math.pow(x,3)-
0.031*Math.pow(x,2)+0.64*x+1.28;},


b3Friction2:function(x){
return 0.000044*Math.pow(x,3)-
0.006*Math.pow(x,2)+0.36*x+2.;},


b3Friction3:function(x){
return 0.00000045*Math.pow(x,3)-
0.000332*Math.pow(x,2)+0.1078*x+5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension<=18){
friction=this.b3Friction1(tension);}else 
if(tension>18&&tension<=44){
friction=this.b3Friction2(tension);}else 
{
friction=this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG=
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB=function(color){
if(colorCache[color]){
return colorCache[color];}

color=color.replace('#','');
if(color.length===3){
color=color[0]+color[0]+color[1]+color[1]+color[2]+color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color]=ret;
return ret;};


util.rgbToHex=function(r,g,b){
r=r.toString(16);
g=g.toString(16);
b=b.toString(16);
r=r.length<2?'0'+r:r;
g=g.length<2?'0'+g:g;
b=b.length<2?'0'+b:b;
return '#'+r+g+b;};


var MathUtil=rebound.MathUtil={








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh-fromLow;
var toRangeSize=toHigh-toLow;
var valueScale=(value-fromLow)/fromRangeSize;
return toLow+valueScale*toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow=fromLow===undefined?0:fromLow;
fromHigh=fromHigh===undefined?1:fromHigh;
startColor=util.hexToRGB(startColor);
endColor=util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb('+r+','+g+','+b+')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg*Math.PI/180;},


radiansToDegrees:function(rad){
return rad*180/Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx!=-1&&array.splice(idx,1);}


var _onFrame;
if(typeof window!=='undefined'){
_onFrame=window.requestAnimationFrame||
window.webkitRequestAnimationFrame||
window.mozRequestAnimationFrame||
window.msRequestAnimationFrame||
window.oRequestAnimationFrame||
function(callback){
window.setTimeout(callback,1000/60);};}


if(!_onFrame&&typeof process!=='undefined'&&process.title==='node'){
_onFrame=setImmediate;}



util.onFrame=function onFrame(func){
return _onFrame(func);};




if(typeof exports!='undefined'){
util.extend(exports,rebound);}else 
if(typeof window!='undefined'){
window.rebound=rebound;}})();
});
__d('NavigatorIOS',function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var NavigationContext=require('NavigationContext');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var invariant=require('invariant');
var logError=require('logError');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var NavigatorTransitionerIOS=React.createClass({displayName:'NavigatorTransitionerIOS',
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});































































































































var NavigatorIOS=React.createClass({displayName:'NavigatorIOS',

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,




shadowHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string,




translucent:PropTypes.bool},



navigator:undefined,
navigationContext:new NavigationContext(),

componentWillMount:function(){


this.navigator={
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop,
navigationContext:this.navigationContext};

this._emitWillFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentDidMount:function(){
this._emitDidFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentWillUnmount:function(){
this.navigationContext.dispose();
this.navigationContext=new NavigationContext();},


getDefaultProps:function(){
return {
translucent:true};},



getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete=item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter=new EventEmitter();
this._focusEmitter=focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock&&cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength-1;
this._emitDidFocus(this.state.routeStack[newObservedTopOfStack]);

invariant(
newObservedTopOfStack<=this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack!==this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack===this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, '+
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length>this.state.observedTopOfStack+1?
this.state.observedTopOfStack+1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack+1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack+1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});},


_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});},


push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack===this.state.observedTopOfStack){
this._tryLockNavigator(function(){
_this._emitWillFocus(route);

var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length-1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length-1});});}},





popN:function(n){var _this2=this;
if(n===0){
return;}


if(this.state.requestedTopOfStack===this.state.observedTopOfStack){
if(this.state.requestedTopOfStack>0){
this._tryLockNavigator(function(){
var newRequestedTopOfStack=_this2.state.requestedTopOfStack-n;
invariant(newRequestedTopOfStack>=0,'Cannot pop below 0');
_this2._emitWillFocus(_this2.state.routeStack[newRequestedTopOfStack]);
_this2.setState({
requestedTopOfStack:newRequestedTopOfStack,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index<0){
index+=this.state.routeStack.length;}


if(this.state.routeStack.length<=index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index]=getuid();
nextRouteStack[index]=route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});


this._emitWillFocus(route);
this._emitDidFocus(route);},





replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute!==-1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length-indexOfRoute-1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack!==this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length<2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack-1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack!==this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete=null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){var 
component=route.component;var wrapperStyle=route.wrapperStyle;var passProps=route.passProps;var route=babelHelpers.objectWithoutProperties(route,['component','wrapperStyle','passProps']);var _props=
this.props;var itemWrapperStyle=_props.itemWrapperStyle;var props=babelHelpers.objectWithoutProperties(_props,['itemWrapperStyle']);
var shouldUpdateChild=
this.state.updatingAllIndicesAtOrBeyond&&
this.state.updatingAllIndicesAtOrBeyond>=i;
var Component=component;
return (
React.createElement(StaticContainer,{key:'nav'+i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,babelHelpers.extends({},
route,
props,{
style:[
styles.stackItem,
itemWrapperStyle,
wrapperStyle]}),

React.createElement(Component,babelHelpers.extends({
navigator:this.navigator,
route:route},
passProps)))));},






renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest||
this.state.updatingAllIndicesAtOrBeyond!==null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



var RCTNavigator=requireNativeComponent('RCTNavigator');
var RCTNavigatorItem=requireNativeComponent('RCTNavItem');

module.exports=NavigatorIOS;
});
__d('StaticContainer.react',function(global, require, module, exports) {  var 




















React=require('React');

var onlyChild=require('onlyChild');var 
















StaticContainer=function(_React$Component){babelHelpers.inherits(StaticContainer,_React$Component);function StaticContainer(){babelHelpers.classCallCheck(this,StaticContainer);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(StaticContainer).apply(this,arguments));}babelHelpers.createClass(StaticContainer,[{key:'shouldComponentUpdate',value:function shouldComponentUpdate(

nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:function render()


{
var child=this.props.children;
return child===null||child===false?null:onlyChild(child);}}]);return StaticContainer;}(React.Component);




module.exports=StaticContainer;
});
__d('PickerIOS',function(global, require, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var View=require('View');

var itemStylePropType=StyleSheetPropType(TextStylePropTypes);
var requireNativeComponent=require('requireNativeComponent');

var PickerIOS=React.createClass({displayName:'PickerIOS',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{
itemStyle:itemStylePropType,
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any}),


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value===props.selectedValue){
selectedIndex=index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){var _this=this;
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:function(picker){return _this._picker=picker;},
style:[styles.pickerIOS,this.props.itemStyle],
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this._picker&&this.state.selectedIndex!==event.nativeEvent.newIndex){
this._picker.setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item=React.createClass({displayName:'Item',
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker',{
propTypes:{
style:itemStylePropType}},

{
nativeOnly:{
items:true,
onChange:true,
selectedIndex:true}});



module.exports=PickerIOS;
});
__d('ProgressBarAndroid',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('ProgressViewIOS',function(global, require, module, exports) {  'use strict';












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');




var ProgressViewIOS=React.createClass({displayName:'ProgressViewIOS',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source}),


render:function(){
return (
React.createElement(RCTProgressView,babelHelpers.extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports=ProgressViewIOS;
});
__d('SegmentedControlIOS',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({displayName:'SegmentedControlIOS',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool}),


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange&&this.props.onChange(event);
this.props.onValueChange&&this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,babelHelpers.extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
SegmentedControlIOS);


module.exports=SegmentedControlIOS;
});
__d('SliderIOS',function(global, require, module, exports) {  'use strict';












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({displayName:'SliderIOS',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{




style:View.propTypes.style,









value:PropTypes.number,






step:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,





disabled:PropTypes.bool,




trackImage:Image.propTypes.source,




thumbImage:Image.propTypes.source,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func}),


getDefaultProps:function(){
return {
disabled:false};},



render:function(){var _this=this;

var onValueChange=this.props.onValueChange&&function(event){
_this.props.onValueChange&&
_this.props.onValueChange(event.nativeEvent.value);};


var onSlidingComplete=this.props.onSlidingComplete&&function(event){
_this.props.onSlidingComplete&&
_this.props.onSlidingComplete(event.nativeEvent.value);};var _props=


this.props;var style=_props.style;var props=babelHelpers.objectWithoutProperties(_props,['style']);
style=[styles.slider,style];

return (
React.createElement(RCTSlider,babelHelpers.extends({},
props,{
style:style,
onValueChange:onValueChange,
onSlidingComplete:onSlidingComplete})));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS);

module.exports=SliderIOS;
});
__d('SnapshotViewIOS',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');var _require=
require('NativeModules');var TestModule=_require.TestModule;var UIManager=_require.UIManager;
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var SnapshotViewIOS=React.createClass({displayName:'SnapshotViewIOS',
onDefaultAction:function(event){
TestModule.verifySnapshot(TestModule.markTestPassed);},


render:function(){
var testIdentifier=this.props.testIdentifier||'test';
var onSnapshotReady=this.props.onSnapshotReady||this.onDefaultAction;
return (
React.createElement(RCTSnapshot,babelHelpers.extends({
style:style.snapshot},
this.props,{
onSnapshotReady:onSnapshotReady,
testIdentifier:testIdentifier})));},




propTypes:babelHelpers.extends({},
View.propTypes,{

onSnapshotReady:React.PropTypes.func,

testIdentifier:React.PropTypes.string})});



var style=StyleSheet.create({
snapshot:{
flex:1}});






var RCTSnapshot=UIManager.RCTSnapshot?
requireNativeComponent('RCTSnapshot',SnapshotViewIOS):
View;

module.exports=SnapshotViewIOS;
});
__d('Switch',function(global, require, module, exports) {  'use strict';







var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');









var Switch=React.createClass({displayName:'Switch',
propTypes:babelHelpers.extends({},
View.propTypes,{




value:React.PropTypes.bool,




disabled:React.PropTypes.bool,



onValueChange:React.PropTypes.func,



testID:React.PropTypes.string,





tintColor:React.PropTypes.string,




onTintColor:React.PropTypes.string,




thumbTintColor:React.PropTypes.string}),


getDefaultProps:function(){
return {
value:false,
disabled:false};},



mixins:[NativeMethodsMixin],

_rctSwitch:{},
_onChange:function(event){
this.props.onChange&&this.props.onChange(event);
this.props.onValueChange&&this.props.onValueChange(event.nativeEvent.value);



if(Platform.OS==='android'){
this._rctSwitch.setNativeProps({on:this.props.value});}else 
{
this._rctSwitch.setNativeProps({value:this.props.value});}},



render:function(){var _this=this;
var props=babelHelpers.extends({},this.props);
props.onStartShouldSetResponder=function(){return true;};
props.onResponderTerminationRequest=function(){return false;};
if(Platform.OS==='android'){
props.enabled=!this.props.disabled;
props.on=this.props.value;
props.style=[styles.rctSwitchAndroid,this.props.style];}else 
if(Platform.OS==='ios'){
props.style=[styles.rctSwitchIOS,this.props.style];}

return (
React.createElement(RCTSwitch,babelHelpers.extends({},
props,{
ref:function(ref){_this._rctSwitch=ref;},
onChange:this._onChange})));}});





var styles=StyleSheet.create({
rctSwitchIOS:{
height:31,
width:51},

rctSwitchAndroid:{
height:27,
width:40}});



if(Platform.OS==='android'){
var RCTSwitch=requireNativeComponent('AndroidSwitch',Switch,{
nativeOnly:{onChange:true,on:true,enabled:true}});}else 

{
var RCTSwitch=requireNativeComponent('RCTSwitch',Switch,{
nativeOnly:{onChange:true}});}



module.exports=Switch;
});
__d('PullToRefreshViewAndroid',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('SwitchAndroid',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('SwitchIOS',function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({displayName:'SwitchIOS',
mixins:[NativeMethodsMixin],

propTypes:babelHelpers.extends({},
View.propTypes,{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string}),


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){


this.refs[SWITCH].setNativeProps({value:this.props.value});

if(this.props.value===event.nativeEvent.value||this.props.disabled){
return;}


this.props.onChange&&this.props.onChange(event);
this.props.onValueChange&&this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSwitch,babelHelpers.extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS,{
nativeOnly:{onChange:true}});


module.exports=SwitchIOS;
});
__d('TabBarIOS',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({displayName:'TabBarIOS',
statics:{
Item:TabBarItemIOS},


propTypes:babelHelpers.extends({},
View.propTypes,{
style:View.propTypes.style,



tintColor:React.PropTypes.string,



barTintColor:React.PropTypes.string,



translucent:React.PropTypes.bool}),


render:function(){
return (
React.createElement(RCTTabBar,{
style:[styles.tabGroup,this.props.style],
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent!==false},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports=TabBarIOS;
});
__d('TabBarItemIOS',function(global, require, module, exports) {  'use strict';












var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({displayName:'TabBarItemIOS',
propTypes:babelHelpers.extends({},
View.propTypes,{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string}),


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected||nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){var _props=
this.props;var style=_props.style;var children=_props.children;var props=babelHelpers.objectWithoutProperties(_props,['style','children']);



if(this.state.hasBeenSelected){
var tabContents=
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
children);}else 

{
var tabContents=React.createElement(View,null);}


return (
React.createElement(RCTTabBarItem,babelHelpers.extends({},
props,{
style:[styles.tab,style]}),
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports=TabBarItemIOS;
});
__d('Text',function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true,
allowFontScaling:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text',
propTypes:{





numberOfLines:React.PropTypes.number,





onLayout:React.PropTypes.func,



onPress:React.PropTypes.func,





suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,



allowFontScaling:React.PropTypes.bool},

getDefaultProps:function(){
return {
accessible:true,
allowFontScaling:true};},


getInitialState:function(){
return merge(Touchable.Mixin.touchableGetInitialState(),{
isHighlighted:false});},


mixins:[NativeMethodsMixin],
viewConfig:viewConfig,
getChildContext:function(){
return {isInAParentText:true};},

childContextTypes:{
isInAParentText:React.PropTypes.bool},

contextTypes:{
isInAParentText:React.PropTypes.bool},




_handlers:null,




touchableHandleActivePressIn:null,
touchableHandleActivePressOut:null,
touchableHandlePress:null,
touchableGetPressRectOffset:null,
render:function(){var _this=this;
var newProps=this.props;
if(this.props.onStartShouldSetResponder||this.props.onPress){
if(!this._handlers){
this._handlers={
onStartShouldSetResponder:function(){
var shouldSetFromProps=_this.props.onStartShouldSetResponder&&
_this.props.onStartShouldSetResponder();
var setResponder=shouldSetFromProps||!!_this.props.onPress;
if(setResponder&&!_this.touchableHandleActivePressIn){


for(var key in Touchable.Mixin){
if(typeof Touchable.Mixin[key]==='function'){
_this[key]=Touchable.Mixin[key].bind(_this);}}


_this.touchableHandleActivePressIn=function(){
if(_this.props.suppressHighlighting||!_this.props.onPress){
return;}

_this.setState({
isHighlighted:true});};



_this.touchableHandleActivePressOut=function(){
if(_this.props.suppressHighlighting||!_this.props.onPress){
return;}

_this.setState({
isHighlighted:false});};



_this.touchableHandlePress=function(){
_this.props.onPress&&_this.props.onPress();};


_this.touchableGetPressRectOffset=function(){
return PRESS_RECT_OFFSET;};}


return setResponder;},

onResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant&&
this.props.onResponderGrant.apply(this,arguments);}.
bind(this),
onResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove&&
this.props.onResponderMove.apply(this,arguments);}.
bind(this),
onResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease&&
this.props.onResponderRelease.apply(this,arguments);}.
bind(this),
onResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate&&
this.props.onResponderTerminate.apply(this,arguments);}.
bind(this),
onResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination&&this.props.onResponderTerminationRequest){
allowTermination=this.props.onResponderTerminationRequest.apply(this,arguments);}

return allowTermination;}.
bind(this)};}


newProps=babelHelpers.extends({},
this.props,
this._handlers,{
isHighlighted:this.state.isHighlighted});}


if(this.context.isInAParentText){
return React.createElement(RCTVirtualText,newProps);}else 
{
return React.createElement(RCTText,newProps);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS==='android'){
RCTVirtualText=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports=Text;
});
__d('Touchable',function(global, require, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD-HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={



componentWillUnmount:function(){
this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);
this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);
this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);},









touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout=null;

this.state.touchable.touchState=States.NOT_RESPONDER;
this.state.touchable.responderID=dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS!==undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS=isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS!==0){
this.touchableDelayTimeout=setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS!==undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS=isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout=setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS+delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState===States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():{
left:PRESS_EXPAND_PX,
right:PRESS_EXPAND_PX,
top:PRESS_EXPAND_PX,
bottom:PRESS_EXPAND_PX};


var pressExpandLeft=pressRectOffset.left;
var pressExpandTop=pressRectOffset.top;
var pressExpandRight=pressRectOffset.right;
var pressExpandBottom=pressRectOffset.bottom;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch&&touch.pageX;
var pageY=touch&&touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance>LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX>positionOnActivate.left-pressExpandLeft&&
pageY>positionOnActivate.top-pressExpandTop&&
pageX<
positionOnActivate.left+
dimensionsOnActivate.width+
pressExpandRight&&
pageY<
positionOnActivate.top+
dimensionsOnActivate.height+
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);
var curState=this.state.touchable.touchState;
if(curState===States.RESPONDER_INACTIVE_PRESS_IN){

this._cancelLongPressDelayTimeout();}}else 

{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate&&
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate&&
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate=Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate=BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout=null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout=null;
var curState=this.state.touchable.touchState;
if(curState!==States.RESPONDER_ACTIVE_PRESS_IN&&
curState!==States.RESPONDER_ACTIVE_LONG_PRESS_IN){
console.error('Attempted to transition from state `'+curState+'` to `'+
States.RESPONDER_ACTIVE_LONG_PRESS_IN+'`, which is not supported. This is '+
'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');}else 
{
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);}},











_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
var nextState=Transitions[curState]&&Transitions[curState][signal];
if(!nextState){
throw new Error(
'Unrecognized signal `'+signal+'` or state `'+curState+
'` for Touchable responder `'+this.state.touchable.responderID+'`');}


if(nextState===States.ERROR){
throw new Error(
'Touchable cannot transition from `'+curState+'` to `'+signal+
'` for responder `'+this.state.touchable.responderID+'`');}


if(curState!==nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState=nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout=null;},


_isHighlight:function(state){
return state===States.RESPONDER_ACTIVE_PRESS_IN||
state===States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch&&touch.pageX;
var pageY=touch&&touch.pageY;
this.pressInLocation={pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX-bX;
var deltaY=aY-bY;
return Math.sqrt(deltaX*deltaX+deltaY*deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal===Signals.RESPONDER_TERMINATED||
signal===Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState]&&IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState]&&signal===Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress&&this.touchableHandleLongPress(e);}


if(newIsHighlight&&!curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn&&this.touchableHandleActivePressIn(e);}else 
if(!newIsHighlight&&curIsHighlight&&this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS&&this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout=this.setTimeout(function(){
this.touchableHandleActivePressOut(e);},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut(e);}}



if(IsPressingIn[curState]&&signal===Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState]&&(
!hasLongPressHandler||
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState]||pressIsLongButStillCallOnPress;
if(shouldInvokePress&&this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout=null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports=Touchable;
});
__d('BoundingDimensions',function(global, require, module, exports) {  'use strict';





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width=width;
this.height=height;}


BoundingDimensions.prototype.destructor=function(){
this.width=null;
this.height=null;};






BoundingDimensions.getPooledFromElement=function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports=BoundingDimensions;
});
__d('Position',function(global, require, module, exports) {  'use strict';





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left=left;
this.top=top;}


Position.prototype.destructor=function(){
this.left=null;
this.top=null;};


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports=Position;
});
__d('TouchEventUtils',function(global, require, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches&&touches.length>0;
var hasChangedTouches=changedTouches&&changedTouches.length>0;

return !hasTouches&&hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports=TouchEventUtils;
});
__d('queryLayoutByID',function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var UIManager=require('UIManager');
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

UIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports=queryLayoutByID;
});
__d('TextInput',function(global, require, module, exports) {  'use strict';












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var UIManager=require('UIManager');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onTextInput:true,
children:true};


var notMultiline={};



if(Platform.OS==='android'){
var AndroidTextInput=requireNativeComponent('AndroidTextInput',null);}else 
if(Platform.OS==='ios'){
var RCTTextView=requireNativeComponent('RCTTextView',null);
var RCTTextField=requireNativeComponent('RCTTextField',null);}

























var TextInput=React.createClass({displayName:'TextInput',
statics:{

State:TextInputState},


propTypes:babelHelpers.extends({},
View.propTypes,{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,




autoFocus:PropTypes.bool,




textAlign:PropTypes.oneOf([
'start',
'center',
'end']),





textAlignVertical:PropTypes.oneOf([
'top',
'center',
'bottom']),




editable:PropTypes.bool,








keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),





keyboardAppearance:PropTypes.oneOf([
'default',
'light',
'dark']),





returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),





maxLength:PropTypes.number,





numberOfLines:PropTypes.number,





enablesReturnKeyAutomatically:PropTypes.bool,




multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,




onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,




onSubmitEditing:PropTypes.func,






onKeyPress:PropTypes.func,



onLayout:PropTypes.func,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




secureTextEntry:PropTypes.bool,





selectionState:PropTypes.instanceOf(DocumentSelectionState),









value:PropTypes.string,





defaultValue:PropTypes.string,




clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),





clearTextOnFocus:PropTypes.bool,




selectTextOnFocus:PropTypes.bool,








blurOnSubmit:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string,




underlineColorAndroid:PropTypes.string}),






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:
Platform.OS==='ios'&&RCTTextField?
RCTTextField.viewConfig:
Platform.OS==='android'&&AndroidTextInput?
AndroidTextInput.viewConfig:
{},

isFocused:function(){
return TextInputState.currentlyFocusedField()===
React.findNodeHandle(this.refs.input);},


getInitialState:function(){
return {
mostRecentEventCount:0};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription=this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this===el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription&&this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


clear:function(){
this.setNativeProps({text:''});},


render:function(){
if(Platform.OS==='ios'){
return this._renderIOS();}else 
if(Platform.OS==='android'){
return this._renderAndroid();}},



_getText:function(){
return typeof this.props.value==='string'?
this.props.value:
this.props.defaultValue;},


_renderIOS:function(){var _this2=this;
var textContainer;

var onSelectionChange;
if(this.props.selectionState||this.props.onSelectionChange){
onSelectionChange=function(event){
if(_this2.props.selectionState){
var selection=event.nativeEvent.selection;
_this2.props.selectionState.update(selection.start,selection.end);}

_this2.props.onSelectionChange&&_this2.props.onSelectionChange(event);};}



var props=babelHelpers.extends({},this.props);
props.style=[styles.input,this.props.style];
if(!props.multiline){
for(var propKey in onlyMultiline){
if(props[propKey]){
throw new Error(
'TextInput prop `'+propKey+'` is only supported with multiline.');}}



textContainer=
React.createElement(RCTTextField,babelHelpers.extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:onSelectionChange,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText(),
mostRecentEventCount:this.state.mostRecentEventCount}));}else 

{
for(var propKey in notMultiline){
if(props[propKey]){
throw new Error(
'TextInput prop `'+propKey+'` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value&&childCount),
'Cannot specify both value and children.');

if(childCount>1){
children=React.createElement(Text,null,children);}

if(props.inputView){
children=[children,props.inputView];}

textContainer=
React.createElement(RCTTextView,babelHelpers.extends({
ref:'input'},
props,{
children:children,
mostRecentEventCount:this.state.mostRecentEventCount,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText()}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=UIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
UIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
UIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value&&childCount),
'Cannot specify both value and children.');

if(childCount>1){
children=React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
textAlign:textAlign,
textAlignVertical:textAlignVertical,
keyboardType:this.props.keyboardType,
mostRecentEventCount:this.state.mostRecentEventCount,
multiline:this.props.multiline,
numberOfLines:this.props.numberOfLines,
maxLength:this.props.maxLength,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onTextInput:this._onTextInput,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password||this.props.secureTextEntry,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this._getText(),
underlineColorAndroid:this.props.underlineColorAndroid,
children:children,
editable:this.props.editable});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
if(this.props.editable||this.props.editable===undefined){
this.focus();}},



_onChange:function(event){var _this3=this;
if(Platform.OS==='android'){

this.refs.input.setNativeProps({
mostRecentEventCount:event.nativeEvent.eventCount});}


var text=event.nativeEvent.text;
var eventCount=event.nativeEvent.eventCount;
this.props.onChange&&this.props.onChange(event);
this.props.onChangeText&&this.props.onChangeText(text);
this.setState({mostRecentEventCount:eventCount},function(){

if(Platform.OS==='android'){



if(text!==_this3.props.value&&typeof _this3.props.value==='string'){
_this3.refs.input.setNativeProps({
text:_this3.props.value});}}});},






_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onTextInput:function(event){
this.props.onTextInput&&this.props.onTextInput(event);}});



var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



module.exports=TextInput;
});
__d('DocumentSelectionState',function(global, require, module, exports) {  var 

















mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=function(){




function DocumentSelectionState(anchor,focus){babelHelpers.classCallCheck(this,DocumentSelectionState);
this._anchorOffset=anchor;
this._focusOffset=focus;
this._hasFocus=false;}babelHelpers.createClass(DocumentSelectionState,[{key:'update',value:function update(









anchor,focus){
if(this._anchorOffset!==anchor||this._focusOffset!==focus){
this._anchorOffset=anchor;
this._focusOffset=focus;
this.emit('update');}}},{key:'constrainLength',value:function constrainLength(









maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:function focus()



{
if(!this._hasFocus){
this._hasFocus=true;
this.emit('focus');}}},{key:'blur',value:function blur()



{
if(this._hasFocus){
this._hasFocus=false;
this.emit('blur');}}},{key:'hasFocus',value:function hasFocus()






{
return this._hasFocus;}},{key:'isCollapsed',value:function isCollapsed()





{
return this._anchorOffset===this._focusOffset;}},{key:'isBackward',value:function isBackward()





{
return this._anchorOffset>this._focusOffset;}},{key:'getAnchorOffset',value:function getAnchorOffset()





{
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:function getFocusOffset()





{
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:function getStartOffset()





{
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:function getEndOffset()






{
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:function overlaps(








start,end){
return (
this.hasFocus()&&
this.getStartOffset()<=end&&start<=this.getEndOffset());}}]);return DocumentSelectionState;}();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports=DocumentSelectionState;
});
__d('mixInEventEmitter',function(global, require, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype||klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor===Object||ctor===Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types=copyProperties({},target.__types,types);}else 
{
target.__types=types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter=EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter=new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports=mixInEventEmitter;
});
__d('EventEmitterWithHolding',function(global, require, module, exports) {  'use strict';var 






























EventEmitterWithHolding=function(){







function EventEmitterWithHolding(emitter,holder){babelHelpers.classCallCheck(this,EventEmitterWithHolding);
this._emitter=emitter;
this._eventHolder=holder;
this._currentEventToken=null;
this._emittingHeldEvents=false;}babelHelpers.createClass(EventEmitterWithHolding,[{key:'addListener',value:function addListener(





eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:function once(





eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:function addRetroactiveListener(























eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents=true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents=false;

return subscription;}},{key:'removeAllListeners',value:function removeAllListeners(





eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:function removeCurrentListener()





{
this._emitter.removeCurrentListener();}},{key:'listeners',value:function listeners(





eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:function emit(





eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:function emitAndHold(

















eventType,a,b,c,d,e,_){
this._currentEventToken=this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken=null;}},{key:'releaseCurrentEvent',value:function releaseCurrentEvent()





{
if(this._currentEventToken!==null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:function releaseHeldEventType(







eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;}();



module.exports=EventEmitterWithHolding;
});
__d('EventHolder',function(global, require, module, exports) {  'use strict';


















var invariant=require('invariant');var 

EventHolder=function(){
function EventHolder(){babelHelpers.classCallCheck(this,EventHolder);
this._heldEvents={};
this._currentEventKey=null;}babelHelpers.createClass(EventHolder,[{key:'holdEvent',value:function holdEvent(























eventType,a,b,c,d,e,_){
this._heldEvents[eventType]=this._heldEvents[eventType]||[];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:function emitToListener(










eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey={
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey=origEventKey;}},{key:'releaseCurrentEvent',value:function releaseCurrentEvent()










{
invariant(
this._currentEventKey!==null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:function releaseEvent(








token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:function releaseEventType(







type){
this._heldEvents[type]=[];}}]);return EventHolder;}();



module.exports=EventHolder;
});
__d('EventValidator',function(global, require, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type)===-1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "'+type+'". ';
if(__DEV__){
message+=recommendationFor(type,allowedTypes);}

message+='Known event types: '+allowedTypes.join(', ')+'.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "'+closestTypeRecommendation.type+'"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance<recommendationB.distance){
return -1;}else 
if(recommendationA.distance>recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance/actualType.length<0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i=0;i<=a.length;i++){
d[i]=[i];}


for(j=1;j<=b.length;j++){
d[0][j]=j;}


for(i=1;i<=a.length;i++){
for(j=1;j<=b.length;j++){
var cost=a.charAt(i-1)===b.charAt(j-1)?0:1;

d[i][j]=Math.min(
d[i-1][j]+1,
d[i][j-1]+1,
d[i-1][j-1]+cost);


if(i>1&&j>1&&
a.charAt(i-1)==b.charAt(j-2)&&
a.charAt(i-2)==b.charAt(j-1)){
d[i][j]=Math.min(d[i][j],d[i-2][j-2]+cost);}}}




return d[a.length][b.length];};}



module.exports=EventValidator;
});
__d('copyProperties',function(global, require, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj=obj||{};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]){
v=args[ii++];
for(var k in v){
obj[k]=v[k];}




if(v.hasOwnProperty&&v.hasOwnProperty('toString')&&
typeof v.toString!='undefined'&&obj.toString!==v.toString){
obj.toString=v.toString;}}



return obj;}


module.exports=copyProperties;
});
__d('TouchableWithoutFeedback',function(global, require, module, exports) {  'use strict';













var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var View=require('View');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var invariant=require('invariant');
var onlyChild=require('onlyChild');



var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};






var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback',
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{
accessible:React.PropTypes.bool,
accessibilityComponentType:React.PropTypes.oneOf(View.AccessibilityComponentType),
accessibilityTraits:React.PropTypes.oneOfType([
React.PropTypes.oneOf(View.AccessibilityTraits),
React.PropTypes.arrayOf(React.PropTypes.oneOf(View.AccessibilityTraits))]),





onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,





onLayout:React.PropTypes.func,

onLongPress:React.PropTypes.func,




delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number,







pressRetentionOffset:EdgeInsetsPropType},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress&&this.props.onPress(e);},


touchableHandleActivePressIn:function(e){
this.props.onPressIn&&this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
this.props.onPressOut&&this.props.onPressOut(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress&&this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn||0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress===0?0:
this.props.delayLongPress||500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut||0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible!==false,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports=TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn<0||props.delayPressOut<0||
props.delayLongPress<0),
'Touchable components cannot have negative delay properties');};



module.exports=ensurePositiveDelayProps;
});
__d('ToastAndroid',function(global, require, module, exports) {  'use strict';












var warning=require('warning');

var ToastAndroid={

show:function(
message,
duration)
{
warning(false,'Cannot use ToastAndroid on iOS.');}};




module.exports=ToastAndroid;
});
__d('ToolbarAndroid',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('TouchableHighlight',function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');



var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};




























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight',
propTypes:babelHelpers.extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity!==this.props.activeOpacity||
nextProps.underlayColor!==this.props.underlayColor||
nextProps.style!==this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
this._showUnderlay();
this.props.onPressIn&&this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut&&this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout=this.setTimeout(this._hideUnderlay,
this.props.delayPressOut||100);
this.props.onPress&&this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress&&this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
if(!this.isMounted()){
return;}


this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay&&this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay&&this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
accessible:true,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate,
testID:this.props.testID},
React.cloneElement(
onlyChild(this.props.children),
{
ref:CHILD_REF})));}});







var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports=TouchableHighlight;
});
__d('ensureComponentIsNative',function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component&&typeof component.setNativeProps==='function',
'Touchable child must either be native or forward setNativeProps to a '+
'native component');};



module.exports=ensureComponentIsNative;
});
__d('TouchableNativeFeedback',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummyTouchableNativeFeedback=React.createClass({displayName:'DummyTouchableNativeFeedback',
render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(Text,{style:styles.info},'TouchableNativeFeedback is not supported on this platform!')));}});





var styles=StyleSheet.create({
container:{
height:100,
width:300,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center',
margin:10},

info:{
color:'#333333',
margin:20}});



module.exports=DummyTouchableNativeFeedback;
});
__d('TouchableOpacity',function(global, require, module, exports) {  'use strict';














var Animated=require('Animated');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');



var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};






















var TouchableOpacity=React.createClass({displayName:'TouchableOpacity',
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin],

propTypes:babelHelpers.extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return babelHelpers.extends({},
this.touchableGetInitialState(),{
anim:new Animated.Value(1)});},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
Animated.timing(
this.state.anim,
{toValue:value,duration:150}).
start();},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
this._opacityActive();
this.props.onPressIn&&this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut&&this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout=this.setTimeout(
this._opacityInactive,
this.props.delayPressOut||100);

this.props.onPress&&this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress&&this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn||0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress===0?0:
this.props.delayLongPress||500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout=null;
var childStyle=flattenStyle(this.props.style)||{};
this.setOpacityTo(
childStyle.opacity===undefined?1:childStyle.opacity);},



render:function(){
return (
React.createElement(Animated.View,{
accessible:true,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
style:[this.props.style,{opacity:this.state.anim}],
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
this.props.children));}});





module.exports=TouchableOpacity;
});
__d('Animated',function(global, require, module, exports) {  'use strict';












var AnimatedImplementation=require('AnimatedImplementation');
var Image=require('Image');
var Text=require('Text');
var View=require('View');

module.exports=babelHelpers.extends({},
AnimatedImplementation,{
View:AnimatedImplementation.createAnimatedComponent(View),
Text:AnimatedImplementation.createAnimatedComponent(Text),
Image:AnimatedImplementation.createAnimatedComponent(Image)});
});
__d('AnimatedImplementation',function(global, require, module, exports) {  'use strict';












var Easing=require('Easing');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var SpringConfig=require('SpringConfig');
var ViewStylePropTypes=require('ViewStylePropTypes');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=function(){function Animated(){babelHelpers.classCallCheck(this,Animated);}babelHelpers.createClass(Animated,[{key:'__attach',value:function __attach()
{}},{key:'__detach',value:function __detach()
{}},{key:'__getValue',value:function __getValue()
{}},{key:'__getAnimatedValue',value:function __getAnimatedValue()
{return this.__getValue();}},{key:'__addChild',value:function __addChild(
child){}},{key:'__removeChild',value:function __removeChild(
child){}},{key:'__getChildren',value:function __getChildren()
{return [];}}]);return Animated;}();var 









Animation=function(){function Animation(){babelHelpers.classCallCheck(this,Animation);}babelHelpers.createClass(Animation,[{key:'start',value:function start(




fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:function stop()
{}},{key:'__debouncedOnEnd',value:function __debouncedOnEnd(

result){
var onEnd=this.__onEnd;
this.__onEnd=null;
onEnd&&onEnd(result);}}]);return Animation;}();var 



AnimatedWithChildren=function(_Animated){babelHelpers.inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){babelHelpers.classCallCheck(this,AnimatedWithChildren);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedWithChildren).call(this));

_this._children=[];return _this;}babelHelpers.createClass(AnimatedWithChildren,[{key:'__addChild',value:function __addChild(


child){
if(this._children.length===0){
this.__attach();}

this._children.push(child);}},{key:'__removeChild',value:function __removeChild(


child){
var index=this._children.indexOf(child);
if(index===-1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length===0){
this.__detach();}}},{key:'__getChildren',value:function __getChildren()



{
return this._children;}}]);return AnimatedWithChildren;}(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update==='function'){
animatedStyles.add(node);}else 
{
node.__getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}
















var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=function(_Animation){babelHelpers.inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{babelHelpers.classCallCheck(this,TimingAnimation);var _this2=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(TimingAnimation).call(this));

_this2._toValue=config.toValue;
_this2._easing=config.easing||easeInOut;
_this2._duration=config.duration!==undefined?config.duration:500;
_this2._delay=config.delay||0;
_this2.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;return _this2;}babelHelpers.createClass(TimingAnimation,[{key:'start',value:function start(



fromValue,
onUpdate,
onEnd)
{var _this3=this;
this.__active=true;
this._fromValue=fromValue;
this._onUpdate=onUpdate;
this.__onEnd=onEnd;

var start=function(){
if(_this3._duration===0){
_this3._onUpdate(_this3._toValue);
_this3.__debouncedOnEnd({finished:true});}else 
{
_this3._startTime=Date.now();
_this3._animationFrame=requestAnimationFrame(_this3.onUpdate.bind(_this3));}};


if(this._delay){
this._timeout=setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:function onUpdate()



{
var now=Date.now();
if(now>=this._startTime+this._duration){
if(this._duration===0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue+this._easing(1)*(this._toValue-this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue+
this._easing((now-this._startTime)/this._duration)*(
this._toValue-this._fromValue));

if(this.__active){
this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:function stop()



{
this.__active=false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;}(Animation);var 













DecayAnimation=function(_Animation2){babelHelpers.inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{babelHelpers.classCallCheck(this,DecayAnimation);var _this4=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(DecayAnimation).call(this));

_this4._deceleration=config.deceleration||0.998;
_this4._velocity=config.velocity;
_this4.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;return _this4;}babelHelpers.createClass(DecayAnimation,[{key:'start',value:function start(



fromValue,
onUpdate,
onEnd)
{
this.__active=true;
this._lastValue=fromValue;
this._fromValue=fromValue;
this._onUpdate=onUpdate;
this.__onEnd=onEnd;
this._startTime=Date.now();
this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:function onUpdate()


{
var now=Date.now();

var value=this._fromValue+
this._velocity/(1-this._deceleration)*(
1-Math.exp(-(1-this._deceleration)*(now-this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue-value)<0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue=value;
if(this.__active){
this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:function stop()



{
this.__active=false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;}(Animation);



























function withDefault(value,defaultValue){
if(value===undefined||value===null){
return defaultValue;}

return value;}var 


SpringAnimation=function(_Animation3){babelHelpers.inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{babelHelpers.classCallCheck(this,SpringAnimation);var _this5=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(SpringAnimation).call(this));


_this5._overshootClamping=withDefault(config.overshootClamping,false);
_this5._restDisplacementThreshold=withDefault(config.restDisplacementThreshold,0.001);
_this5._restSpeedThreshold=withDefault(config.restSpeedThreshold,0.001);
_this5._initialVelocity=config.velocity;
_this5._lastVelocity=withDefault(config.velocity,0);
_this5._toValue=config.toValue;
_this5.__isInteraction=config.isInteraction!==undefined?config.isInteraction:true;

var springConfig;
if(config.bounciness!==undefined||config.speed!==undefined){
invariant(
config.tension===undefined&&config.friction===undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig=SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig=SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


_this5._tension=springConfig.tension;
_this5._friction=springConfig.friction;return _this5;}babelHelpers.createClass(SpringAnimation,[{key:'start',value:function start(



fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active=true;
this._startPosition=fromValue;
this._lastPosition=this._startPosition;

this._onUpdate=onUpdate;
this.__onEnd=onEnd;
this._lastTime=Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition=internalState.lastPosition;
this._lastVelocity=internalState.lastVelocity;
this._lastTime=internalState.lastTime;}

if(this._initialVelocity!==undefined&&
this._initialVelocity!==null){
this._lastVelocity=this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:function getInternalState()


{
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:function onUpdate()



{
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now>this._lastTime+MAX_STEPS){
now=this._lastTime+MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now-this._lastTime)/TIMESTEP_MSEC);

for(var i=0;i<numSteps;++i){

var step=TIMESTEP_MSEC/1000;



var aVelocity=velocity;
var aAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
var tempPosition=position+aVelocity*step/2;
var tempVelocity=velocity+aAcceleration*step/2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
tempPosition=position+bVelocity*step/2;
tempVelocity=velocity+bAcceleration*step/2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
tempPosition=position+cVelocity*step/2;
tempVelocity=velocity+cAcceleration*step/2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension*(this._toValue-tempPosition)-this._friction*tempVelocity;
tempPosition=position+cVelocity*step/2;
tempVelocity=velocity+cAcceleration*step/2;

var dxdt=(aVelocity+2*(bVelocity+cVelocity)+dVelocity)/6;
var dvdt=(aAcceleration+2*(bAcceleration+cAcceleration)+dAcceleration)/6;

position+=dxdt*step;
velocity+=dvdt*step;}


this._lastTime=now;
this._lastPosition=position;
this._lastVelocity=velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping&&this._tension!==0){
if(this._startPosition<this._toValue){
isOvershooting=position>this._toValue;}else 
{
isOvershooting=position<this._toValue;}}


var isVelocity=Math.abs(velocity)<=this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension!==0){
isDisplacement=Math.abs(this._toValue-position)<=this._restDisplacementThreshold;}


if(isOvershooting||isVelocity&&isDisplacement){
if(this._tension!==0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame=requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:function stop()


{
this.__active=false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;}(Animation);





var _uniqueId=1;var 







AnimatedValue=function(_AnimatedWithChildren){babelHelpers.inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){babelHelpers.classCallCheck(this,AnimatedValue);var _this6=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedValue).call(this));

_this6._value=value;
_this6._offset=0;
_this6._animation=null;
_this6._listeners={};return _this6;}babelHelpers.createClass(AnimatedValue,[{key:'__detach',value:function __detach()


{
this.stopAnimation();}},{key:'__getValue',value:function __getValue()


{
return this._value+this._offset;}},{key:'setValue',value:function setValue(






value){
if(this._animation){
this._animation.stop();
this._animation=null;}

this._updateValue(value);}},{key:'setOffset',value:function setOffset(







offset){
this._offset=offset;}},{key:'flattenOffset',value:function flattenOffset()






{
this._value+=this._offset;
this._offset=0;}},{key:'addListener',value:function addListener(







callback){
var id=String(_uniqueId++);
this._listeners[id]=callback;
return id;}},{key:'removeListener',value:function removeListener(


id){
delete this._listeners[id];}},{key:'removeAllListeners',value:function removeAllListeners()


{
this._listeners={};}},{key:'stopAnimation',value:function stopAnimation(







callback){
this.stopTracking();
this._animation&&this._animation.stop();
this._animation=null;
callback&&callback(this.__getValue());}},{key:'interpolate',value:function interpolate(






config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'animate',value:function animate(






animation,callback){var _this7=this;
var handle=null;
if(animation.__isInteraction){
handle=InteractionManager.createInteractionHandle();}

var previousAnimation=this._animation;
this._animation&&this._animation.stop();
this._animation=animation;
animation.start(
this._value,
function(value){
_this7._updateValue(value);},

function(result){
_this7._animation=null;
if(handle!==null){
InteractionManager.clearInteractionHandle(handle);}

callback&&callback(result);},

previousAnimation);}},{key:'stopTracking',value:function stopTracking()






{
this._tracking&&this._tracking.__detach();
this._tracking=null;}},{key:'track',value:function track(





tracking){
this.stopTracking();
this._tracking=tracking;}},{key:'_updateValue',value:function _updateValue(


value){
this._value=value;
_flush(this);
for(var key in this._listeners){
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;}(AnimatedWithChildren);var 












































AnimatedValueXY=function(_AnimatedWithChildren2){babelHelpers.inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){babelHelpers.classCallCheck(this,AnimatedValueXY);var _this8=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedValueXY).call(this));

var value=valueIn||{x:0,y:0};
if(typeof value.x==='number'&&typeof value.y==='number'){
_this8.x=new AnimatedValue(value.x);
_this8.y=new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue&&
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or '+
'AnimatedValues.');

_this8.x=value.x;
_this8.y=value.y;}

_this8._listeners={};return _this8;}babelHelpers.createClass(AnimatedValueXY,[{key:'setValue',value:function setValue(


value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:function setOffset(


offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:function flattenOffset()


{
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:function __getValue()


{
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:function stopAnimation(



callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback&&callback(this.__getValue());}},{key:'addListener',value:function addListener(


callback){var _this9=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this9.__getValue());};

this._listeners[id]={
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:function removeListener(


id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:function getLayout()









{
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:function getTranslateTransform()












{
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;}(AnimatedWithChildren);var 




AnimatedInterpolation=function(_AnimatedWithChildren3){babelHelpers.inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){babelHelpers.classCallCheck(this,AnimatedInterpolation);var _this10=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedInterpolation).call(this));

_this10._parent=parent;
_this10._interpolation=interpolation;return _this10;}babelHelpers.createClass(AnimatedInterpolation,[{key:'__getValue',value:function __getValue()


{
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue==='number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:function interpolate(


config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:function __attach()


{
this._parent.__addChild(this);}},{key:'__detach',value:function __detach()


{
this._parent.__removeChild(this);}}]);return AnimatedInterpolation;}(AnimatedWithChildren);var 



AnimatedTransform=function(_AnimatedWithChildren4){babelHelpers.inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){babelHelpers.classCallCheck(this,AnimatedTransform);var _this11=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTransform).call(this));

_this11._transforms=transforms;return _this11;}babelHelpers.createClass(AnimatedTransform,[{key:'__getValue',value:function __getValue()


{
return this._transforms.map(function(transform){
var result={};
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
result[key]=value.__getValue();}else 
{
result[key]=value;}}


return result;});}},{key:'__getAnimatedValue',value:function __getAnimatedValue()



{
return this._transforms.map(function(transform){
var result={};
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
result[key]=value.__getAnimatedValue();}else 
{

result[key]=value;}}


return result;});}},{key:'__attach',value:function __attach()



{var _this12=this;
this._transforms.forEach(function(transform){
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
value.__addChild(_this12);}}});}},{key:'__detach',value:function __detach()





{var _this13=this;
this._transforms.forEach(function(transform){
for(var key in transform){
var value=transform[key];
if(value instanceof Animated){
value.__removeChild(_this13);}}});}}]);return AnimatedTransform;}(AnimatedWithChildren);var 






AnimatedStyle=function(_AnimatedWithChildren5){babelHelpers.inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){babelHelpers.classCallCheck(this,AnimatedStyle);var _this14=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedStyle).call(this));

style=flattenStyle(style)||{};
if(style.transform){
style=babelHelpers.extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


_this14._style=style;return _this14;}babelHelpers.createClass(AnimatedStyle,[{key:'__getValue',value:function __getValue()


{
var style={};
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
style[key]=value.__getValue();}else 
{
style[key]=value;}}


return style;}},{key:'__getAnimatedValue',value:function __getAnimatedValue()


{
var style={};
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
style[key]=value.__getAnimatedValue();}}


return style;}},{key:'__attach',value:function __attach()


{
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:function __detach()




{
for(var key in this._style){
var value=this._style[key];
if(value instanceof Animated){
value.__removeChild(this);}}}}]);return AnimatedStyle;}(AnimatedWithChildren);var 





AnimatedProps=function(_Animated2){babelHelpers.inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{babelHelpers.classCallCheck(this,AnimatedProps);var _this15=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedProps).call(this));

if(props.style){
props=babelHelpers.extends({},
props,{
style:new AnimatedStyle(props.style)});}


_this15._props=props;
_this15._callback=callback;
_this15.__attach();return _this15;}babelHelpers.createClass(AnimatedProps,[{key:'__getValue',value:function __getValue()


{
var props={};
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
props[key]=value.__getValue();}else 
{
props[key]=value;}}


return props;}},{key:'__getAnimatedValue',value:function __getAnimatedValue()


{
var props={};
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
props[key]=value.__getAnimatedValue();}}


return props;}},{key:'__attach',value:function __attach()


{
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:function __detach()




{
for(var key in this._props){
var value=this._props[key];
if(value instanceof Animated){
value.__removeChild(this);}}}},{key:'update',value:function update()




{
this._callback();}}]);return AnimatedProps;}(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=function(_React$Component){babelHelpers.inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){babelHelpers.classCallCheck(this,AnimatedComponent);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedComponent).apply(this,arguments));}babelHelpers.createClass(AnimatedComponent,[{key:'componentWillUnmount',value:function componentWillUnmount()


{
this._propsAnimated&&this._propsAnimated.__detach();}},{key:'setNativeProps',value:function setNativeProps(


props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:function componentWillMount()


{
this.attachProps(this.props);}},{key:'attachProps',value:function attachProps(


nextProps){var _this17=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this17.refs[refName].setNativeProps){
var value=_this17._propsAnimated.__getAnimatedValue();
_this17.refs[refName].setNativeProps(value);}else 
{
_this17.forceUpdate();}};



this._propsAnimated=new AnimatedProps(
nextProps,
callback);










oldPropsAnimated&&oldPropsAnimated.__detach();}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(


nextProps){
this.attachProps(nextProps);}},{key:'render',value:function render()


{
return (
React.createElement(Component,babelHelpers.extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;}(React.Component);




AnimatedComponent.propTypes={
style:function(props,propName,componentName){
if(!Component.propTypes){
return;}


for(var key in ViewStylePropTypes){
if(!Component.propTypes[key]&&props[key]!==undefined){
console.error(
'You are setting the style `{ '+key+': ... }` as a prop. You '+
'should nest it in a style object. '+
'E.g. `{ style: { '+key+': ... } }`');}}}};






return AnimatedComponent;}var 


AnimatedTracking=function(_Animated3){babelHelpers.inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{babelHelpers.classCallCheck(this,AnimatedTracking);var _this18=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(AnimatedTracking).call(this));

_this18._value=value;
_this18._parent=parent;
_this18._animationClass=animationClass;
_this18._animationConfig=animationConfig;
_this18._callback=callback;
_this18.__attach();return _this18;}babelHelpers.createClass(AnimatedTracking,[{key:'__getValue',value:function __getValue()


{
return this._parent.__getValue();}},{key:'__attach',value:function __attach()


{
this._parent.__addChild(this);}},{key:'__detach',value:function __detach()


{
this._parent.__removeChild(this);}},{key:'update',value:function update()


{
this._value.animate(new this._animationClass(babelHelpers.extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;}(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=babelHelpers.extends({},config);
var configY=babelHelpers.extends({},config);
for(var key in config){var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x!==undefined&&y!==undefined){
configX[key]=x;
configY[key]=y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring)||{
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing)||{
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay)||{
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback&&callback(result);
return;}


current++;

if(current===animations.length){
callback&&callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length===0){
callback&&callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current<animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config&&config.stopTogether===false);

var result={
start:function(callback){
if(doneCount===animations.length){
callback&&callback({finished:true});
return;}


animations.forEach(function(animation,idx){
var cb=function(endResult){
hasEnded[idx]=true;
doneCount++;
if(doneCount===animations.length){
doneCount=0;
callback&&callback(endResult);
return;}


if(!endResult.finished&&stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});},




stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx]&&animation.stop();
hasEnded[idx]=true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time*i),
animation]);}));};







var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt==='number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type '+typeof recMapping+' for key '+key+
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping==='object',
'Bad mapping of type '+typeof recMapping+' for key '+key);

invariant(
typeof recEvt==='object',
'Bad event of type '+typeof recEvt+' for key '+key);

for(var key in recMapping){
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg'+idx);});

if(config&&config.listener){
config.listener.apply(null,args);}};};





























































































module.exports={




Value:AnimatedValue,



ValueXY:AnimatedValueXY,





decay:decay,




timing:timing,




spring:spring,




delay:delay,





sequence:sequence,





parallel:parallel,




stagger:stagger,

















event:event,




createAnimatedComponent:createAnimatedComponent,

__PropsOnlyForTests:AnimatedProps};
});
__d('Interpolation',function(global, require, module, exports) {  'use strict';












var tinycolor=require('tinycolor');


var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop=1;
throw error;}};














var linear=function(t){return t;};var 





Interpolation=function(){function Interpolation(){babelHelpers.classCallCheck(this,Interpolation);}babelHelpers.createClass(Interpolation,null,[{key:'create',value:function create(
config){

if(config.outputRange&&typeof config.outputRange[0]==='string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length===outputRange.length,
'inputRange ('+inputRange.length+') and outputRange ('+
outputRange.length+') must have the same length');


var easing=config.easing||linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft!==undefined){
extrapolateLeft=config.extrapolateLeft;}else 
if(config.extrapolate!==undefined){
extrapolateLeft=config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight!==undefined){
extrapolateRight=config.extrapolateRight;}else 
if(config.extrapolate!==undefined){
extrapolateRight=config.extrapolate;}


return function(input){
invariant(
typeof input==='number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range+1],
outputRange[range],
outputRange[range+1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;}();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result<inputMin){
if(extrapolateLeft==='identity'){
return result;}else 
if(extrapolateLeft==='clamp'){
result=inputMin;}else 
if(extrapolateLeft==='extend'){}}




if(result>inputMax){
if(extrapolateRight==='identity'){
return result;}else 
if(extrapolateRight==='clamp'){
result=inputMax;}else 
if(extrapolateRight==='extend'){}}




if(outputMin===outputMax){
return outputMin;}


if(inputMin===inputMax){
if(input<=inputMin){
return outputMin;}

return outputMax;}



if(inputMin===-Infinity){
result=-result;}else 
if(inputMax===Infinity){
result=result-inputMin;}else 
{
result=(result-inputMin)/(inputMax-inputMin);}



result=easing(result);


if(outputMin===-Infinity){
result=-result;}else 
if(outputMax===Infinity){
result=result+outputMin;}else 
{
result=result*(outputMax-outputMin)+outputMin;}


return result;}


function colorToRgba(
input)
{
var color=tinycolor(input);
if(color.isValid()){var _color$toRgb=
color.toRgb();var r=_color$toRgb.r;var g=_color$toRgb.g;var b=_color$toRgb.b;var a=_color$toRgb.a;
return 'rgba('+r+', '+g+', '+b+', '+(a===undefined?1:a)+')';}else 
{
return input;}}



var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length>=2,'Bad output range');
outputRange=outputRange.map(colorToRgba);
checkPattern(outputRange);












var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){



value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});






var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(babelHelpers.extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i<arr.length;++i){
invariant(
pattern===arr[i].replace(stringShapeRegex,''),
'invalid pattern '+arr[0]+' and '+arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i<inputRange.length-1;++i){
if(inputRange[i]>=input){
break;}}


return i-1;}


function checkValidInputRange(arr){
invariant(arr.length>=2,'inputRange must have at least 2 elements');
for(var i=1;i<arr.length;++i){
invariant(
arr[i]>=arr[i-1],






'inputRange must be monotonically increasing '+arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length>=2,name+' must have at least 2 elements');
invariant(
arr.length!==2||arr[0]!==-Infinity||arr[1]!==Infinity,






name+'cannot be ]-infinity;+infinity[ '+arr);}



module.exports=Interpolation;
});
__d('Easing',function(global, require, module, exports) {  'use strict';












var _bezier=require('bezier');var 






Easing=function(){function Easing(){babelHelpers.classCallCheck(this,Easing);}babelHelpers.createClass(Easing,null,[{key:'step0',value:function step0(
n){
return n>0?1:0;}},{key:'step1',value:function step1(


n){
return n>=1?1:0;}},{key:'linear',value:function linear(


t){
return t;}},{key:'ease',value:function ease(


t){
return _ease(t);}},{key:'quad',value:function quad(


t){
return t*t;}},{key:'cubic',value:function cubic(


t){
return t*t*t;}},{key:'poly',value:function poly(


n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:function sin(


t){
return 1-Math.cos(t*Math.PI/2);}},{key:'circle',value:function circle(


t){
return 1-Math.sqrt(1-t*t);}},{key:'exp',value:function exp(


t){
return Math.pow(2,10*(t-1));}},{key:'elastic',value:function elastic()












{var bounciness=arguments.length<=0||arguments[0]===undefined?1:arguments[0];
var p=bounciness*Math.PI;
return function(t){return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);};}},{key:'back',value:function back(


s){
if(s===undefined){
s=1.70158;}

return function(t){return t*t*((s+1)*t-s);};}},{key:'bounce',value:function bounce(


t){
if(t<1/2.75){
return 7.5625*t*t;}


if(t<2/2.75){
t-=1.5/2.75;
return 7.5625*t*t+0.75;}


if(t<2.5/2.75){
t-=2.25/2.75;
return 7.5625*t*t+0.9375;}


t-=2.625/2.75;
return 7.5625*t*t+0.984375;}},{key:'bezier',value:function bezier(



x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon===undefined){


var duration=500;
epsilon=1000/60/duration/4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:function _in(



easing)
{
return easing;}},{key:'out',value:function out(






easing)
{
return function(t){return 1-easing(1-t);};}},{key:'inOut',value:function inOut(






easing)
{
return function(t){
if(t<0.5){
return easing(t*2)/2;}

return 1-easing((1-t)*2)/2;};}}]);return Easing;}();




var _ease=Easing.bezier(0.42,0,1,1);



module.exports=Easing;
});
__d('bezier',function(global, require, module, exports) {  module.





























exports=function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1-t;
return 3*v*v*t*x1+3*v*t*t*x2+t*t*t;};


var curveY=function(t){
var v=1-t;
return 3*v*v*t*y1+3*v*t*t*y2+t*t*t;};


var derivativeCurveX=function(t){
var v=1-t;
return 3*(2*(t-1)*t+v*v)*x1+3*(-t*t*t+2*v*t)*x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2=x,i=0;i<8;i++){
x2=curveX(t2)-x;
if(Math.abs(x2)<epsilon)return curveY(t2);
d2=derivativeCurveX(t2);
if(Math.abs(d2)<1e-6)break;
t2=t2-x2/d2;}


t0=0,t1=1,t2=x;

if(t2<t0)return curveY(t0);
if(t2>t1)return curveY(t1);


while(t0<t1){
x2=curveX(t2);
if(Math.abs(x2-x)<epsilon)return curveY(t2);
if(x>x2)t0=t2;else 
t1=t2;
t2=(t1-t0)*.5+t0;}



return curveY(t2);};};
});
__d('SpringConfig',function(global, require, module, exports) {  'use strict';


















function tensionFromOrigamiValue(oValue){
return (oValue-30)*3.62+194;}


function frictionFromOrigamiValue(oValue){
return (oValue-8)*3+25;}


function fromOrigamiTensionAndFriction(
tension,
friction)
{
return {
tension:tensionFromOrigamiValue(tension),
friction:frictionFromOrigamiValue(friction)};}



function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return (value-startValue)/(endValue-startValue);}


function projectNormal(n,start,end){
return start+n*(end-start);}


function linearInterpolation(t,start,end){
return t*end+(1-t)*start;}


function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2*t-t*t,start,end);}


function b3Friction1(x){
return 0.0007*Math.pow(x,3)-
0.031*Math.pow(x,2)+0.64*x+1.28;}


function b3Friction2(x){
return 0.000044*Math.pow(x,3)-
0.006*Math.pow(x,2)+0.36*x+2;}


function b3Friction3(x){
return 0.00000045*Math.pow(x,3)-
0.000332*Math.pow(x,2)+0.1078*x+5.84;}


function b3Nobounce(tension){
if(tension<=18){
return b3Friction1(tension);}else 
if(tension>18&&tension<=44){
return b3Friction2(tension);}else 
{
return b3Friction3(tension);}}



var b=normalize(bounciness/1.7,0,20);
b=projectNormal(b,0,0.8);
var s=normalize(speed/1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return {
tension:tensionFromOrigamiValue(bouncyTension),
friction:frictionFromOrigamiValue(bouncyFriction)};}



module.exports={
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
});
__d('requestAnimationFrame',function(global, require, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame||
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16-(currTime-lastTime));
lastTime=currTime+timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports=requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',function(global, require, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame||
global.webkitRequestAnimationFrame||
global.mozRequestAnimationFrame||
global.oRequestAnimationFrame||
global.msRequestAnimationFrame;

module.exports=nativeRequestAnimationFrame;
});
__d('ViewPagerAndroid',function(global, require, module, exports) {  'use strict';











module.exports=require('UnimplementedView');
});
__d('WebView',function(global, require, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};


var JSNavigationScheme=RCTWebViewManager.JSNavigationScheme;









var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: '+errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: '+errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: '+errorDesc)));};







var WebView=React.createClass({displayName:'WebView',
statics:{
JSNavigationScheme:JSNavigationScheme,
NavigationType:NavigationType},


propTypes:babelHelpers.extends({},
View.propTypes,{
url:PropTypes.string,
html:PropTypes.string,



renderError:PropTypes.func,



renderLoading:PropTypes.func,



bounces:PropTypes.bool,



scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,





javaScriptEnabledAndroid:PropTypes.bool,




injectedJavaScript:PropTypes.string,





scalesPageToFit:PropTypes.bool,






onShouldStartLoadWithRequest:PropTypes.func,










allowsInlineMediaPlayback:PropTypes.bool}),


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){var _this=this;
var otherView=null;

if(this.state.viewState===WebViewState.LOADING){
otherView=(this.props.renderLoading||defaultRenderLoading)();}else 
if(this.state.viewState===WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent!=null,
'lastErrorEvent expected to be non-null');

otherView=(this.props.renderError||defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState!==WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: '+this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState===WebViewState.LOADING||
this.state.viewState===WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var onShouldStartLoadWithRequest=this.props.onShouldStartLoadWithRequest&&function(event){
var shouldStart=_this.props.onShouldStartLoadWithRequest&&
_this.props.onShouldStartLoadWithRequest(event.nativeEvent);
RCTWebViewManager.startLoadWithResult(!!shouldStart,event.nativeEvent.lockIdentifier);};


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
injectedJavaScript:this.props.injectedJavaScript,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError,
onShouldStartLoadWithRequest:onShouldStartLoadWithRequest,
scalesPageToFit:this.props.scalesPageToFit,
allowsInlineMediaPlayback:this.props.allowsInlineMediaPlayback});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebViewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebViewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebViewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebViewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.warn('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView,{
nativeOnly:{
onLoadingStart:true,
onLoadingError:true,
onLoadingFinish:true}});



var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports=WebView;
});
__d('ActionSheetIOS',function(global, require, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');
var processColor=require('processColor');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options==='object'&&options!==null,
'Options must a valid object');

invariant(
typeof callback==='function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({},
options,{tintColor:processColor(options.tintColor)}),
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options==='object'&&options!==null,
'Options must a valid object');

invariant(
typeof failureCallback==='function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback==='function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({},
options,{tintColor:processColor(options.tintColor)}),
failureCallback,
successCallback);}};




module.exports=ActionSheetIOS;
});
__d('AdSupportIOS',function(global, require, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports={
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('Alert',function(global, require, module, exports) {  'use strict';












var AlertIOS=require('AlertIOS');
var Platform=require('Platform');
var DialogModuleAndroid=require('NativeModules').DialogManagerAndroid;var 













































Alert=function(){function Alert(){babelHelpers.classCallCheck(this,Alert);}babelHelpers.createClass(Alert,null,[{key:'alert',value:function alert(


title,
message,
buttons,
type)
{
if(Platform.OS==='ios'){
AlertIOS.alert(title,message,buttons,type);}else 
if(Platform.OS==='android'){
AlertAndroid.alert(title,message,buttons);}}}]);return Alert;}();var 







AlertAndroid=function(){function AlertAndroid(){babelHelpers.classCallCheck(this,AlertAndroid);}babelHelpers.createClass(AlertAndroid,null,[{key:'alert',value:function alert(


title,
message,
buttons)
{
var config={
title:title||'',
message:message||''};



var validButtons=buttons?buttons.slice(0,3):[{text:'OK'}];
var buttonPositive=validButtons.pop();
var buttonNegative=validButtons.pop();
var buttonNeutral=validButtons.pop();
if(buttonNeutral){
config=babelHelpers.extends({},config,{buttonNeutral:buttonNeutral.text||''});}

if(buttonNegative){
config=babelHelpers.extends({},config,{buttonNegative:buttonNegative.text||''});}

if(buttonPositive){
config=babelHelpers.extends({},config,{buttonPositive:buttonPositive.text||''});}

DialogModuleAndroid.showAlert(
config,
function(errorMessage){return console.warn(message);},
function(action,buttonKey){
if(action!==DialogModuleAndroid.buttonClicked){
return;}

if(buttonKey===DialogModuleAndroid.buttonNeutral){
buttonNeutral.onPress&&buttonNeutral.onPress();}else 
if(buttonKey===DialogModuleAndroid.buttonNegative){
buttonNegative.onPress&&buttonNegative.onPress();}else 
if(buttonKey===DialogModuleAndroid.buttonPositive){
buttonPositive.onPress&&buttonPositive.onPress();}});}}]);return AlertAndroid;}();






module.exports=Alert;
});
__d('AlertIOS',function(global, require, module, exports) {  'use strict';












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');var 
































AlertIOS=function(){function AlertIOS(){babelHelpers.classCallCheck(this,AlertIOS);}babelHelpers.createClass(AlertIOS,null,[{key:'alert',value:function alert(

title,
message,
buttons,




type)
{
var callbacks=[];
var buttonsSpec=[];
var cancelButtonKey;
var destructiveButtonKey;
buttons&&buttons.forEach(function(btn,index){
callbacks[index]=btn.onPress;
if(btn.style=='cancel'){
cancelButtonKey=String(index);}else 
if(btn.style=='destructive'){
destructiveButtonKey=String(index);}

if(btn.text||index<(buttons||[]).length-1){
var btnDef={};
btnDef[index]=btn.text||'';
buttonsSpec.push(btnDef);}});


RCTAlertManager.alertWithArgs({
title:title||undefined,
message:message||undefined,
buttons:buttonsSpec,
type:type||undefined,
cancelButtonKey:cancelButtonKey,
destructiveButtonKey:destructiveButtonKey},
function(id,value){
var cb=callbacks[id];
cb&&cb(value);});}},{key:'prompt',value:function prompt(




title,
value,
buttons,




callback)
{
if(arguments.length===2){
if(typeof value==='object'){
buttons=value;
value=undefined;}else 
if(typeof value==='function'){
callback=value;
value=undefined;}}else 

if(arguments.length===3&&typeof buttons==='function'){
callback=buttons;
buttons=undefined;}


invariant(
!(callback&&buttons)&&(callback||buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons=[{onPress:callback}];}

this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;}();



module.exports=AlertIOS;
});
__d('AppRegistry',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var ReactNative=require('ReactNative');

var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};
























var AppRegistry={
registerConfig:function(config){
for(var i=0;i<config.length;++i){
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
invariant(appConfig.component,'No component provider passed in');
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey]={
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey]={run:func};
return appKey;},


getAppKeys:function(){
return Object.keys(runnables);},


runApplication:function(appKey,appParameters){
console.log(
'Running application "'+appKey+'" with appParams: '+
JSON.stringify(appParameters)+'. '+
'__DEV__ === '+String(__DEV__)+
', development-level warning are '+(__DEV__?'ON':'OFF')+
', performance optimizations are '+(__DEV__?'OFF':'ON'));

invariant(
runnables[appKey]&&runnables[appKey].run,
'Application '+appKey+' has not been registered. This '+
'is either due to a require() error during initialization '+
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);},


unmountApplicationComponentAtRootTag:function(rootTag){
ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);}};




BatchedBridge.registerCallableModule(
'AppRegistry',
AppRegistry);


module.exports=AppRegistry;
});
__d('renderApplication',function(global, require, module, exports) {  'use strict';













var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');

var invariant=require('invariant');

var Inspector=__DEV__?require('Inspector'):null;
var YellowBox=__DEV__?require('YellowBox'):null;

var AppContainer=React.createClass({displayName:'AppContainer',
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {inspector:null};},


toggleElementInspector:function(){
var inspector=!__DEV__||this.state.inspector?
null:
React.createElement(Inspector,{
rootTag:this.props.rootTag,
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});},


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);},



render:function(){
var yellowBox=null;
if(__DEV__){
yellowBox=React.createElement(YellowBox,null);}

return (
React.createElement(View,{style:styles.appContainer},
React.createElement(View,{collapsible:false,style:styles.appContainer,ref:'main'},
this.props.children),

yellowBox,
this.state.inspector));}});





function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);


React.render(
React.createElement(AppContainer,{rootTag:rootTag},
React.createElement(RootComponent,babelHelpers.extends({},
initialProps,{
rootTag:rootTag}))),


rootTag);}




var styles=StyleSheet.create({
appContainer:{
flex:1}});



module.exports=renderApplication;
});
__d('Inspector',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle=require('flattenStyle');}var 


Inspector=function(_React$Component){babelHelpers.inherits(Inspector,_React$Component);


function Inspector(props){babelHelpers.classCallCheck(this,Inspector);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Inspector).call(this,
props));

_this.state={
devtoolsAgent:null,
panelPos:'bottom',
inspecting:true,
perfing:false,
inspected:null};return _this;}babelHelpers.createClass(Inspector,[{key:'componentDidMount',value:function componentDidMount()



{
if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
this.attachToDevtools=this.attachToDevtools.bind(this);
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools',this.attachToDevtools);

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent){
this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);}}}},{key:'componentWillUnmount',value:function componentWillUnmount()




{
if(this._subs){
this._subs.map(function(fn){return fn();});}

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools',this.attachToDevtools);}}},{key:'attachToDevtools',value:function attachToDevtools(



agent){var _this2=this;
var _hideWait=null;
var hlSub=agent.sub('highlight',function(_ref){var node=_ref.node;var name=_ref.name;var props=_ref.props;
clearTimeout(_hideWait);
UIManager.measure(node,function(x,y,width,height,left,top){
_this2.setState({
hierarchy:[],
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:props?props.style:{}}});});});




var hideSub=agent.sub('hideHighlight',function(){
if(_this2.state.inspected===null){
return;}


_hideWait=setTimeout(function(){
_this2.setState({
inspected:null});},

100);});

this._subs=[hlSub,hideSub];

agent.on('shutdown',function(){
_this2.setState({devtoolsAgent:null});
_this2._subs=null;});

this.setState({
devtoolsAgent:agent});}},{key:'setSelection',value:function setSelection(



i){var _this3=this;
var instance=this.state.hierarchy[i];


var publicInstance=instance._instance||{};
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this3.setState({
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}},

selection:i});});}},{key:'onTouchInstance',value:function onTouchInstance(




instance,frame,pointerY){
if(this.state.devtoolsAgent){
this.state.devtoolsAgent.selectFromReactInstance(instance,true);}

var hierarchy=InspectorUtils.getOwnerHierarchy(instance);


var publicInstance=instance._instance||{};
var props=publicInstance.props||{};
this.setState({
panelPos:pointerY>Dimensions.get('window').height/2?'top':'bottom',
selection:hierarchy.length-1,
hierarchy:hierarchy,
inspected:{
style:props.style||{},
frame:frame}});}},{key:'setPerfing',value:function setPerfing(




val){
this.setState({
perfing:val,
inspecting:false,
inspected:null});}},{key:'setInspecting',value:function setInspecting(



val){
this.setState({
inspecting:val,
inspected:null});}},{key:'render',value:function render()



{
var panelContainerStyle=this.state.panelPos==='bottom'?{bottom:0}:{top:0};
return (
React.createElement(View,{style:styles.container,pointerEvents:'box-none'},
this.state.inspecting&&
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspected:this.state.inspected,
inspectedViewTag:this.props.inspectedViewTag,
onTouchInstance:this.onTouchInstance.bind(this)}),

React.createElement(View,{style:[styles.panelContainer,panelContainerStyle]},
React.createElement(InspectorPanel,{
devtoolsIsOpen:!!this.state.devtoolsAgent,
inspecting:this.state.inspecting,
perfing:this.state.perfing,
setPerfing:this.setPerfing.bind(this),
setInspecting:this.setInspecting.bind(this),
inspected:this.state.inspected,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;}(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute',
backgroundColor:'transparent',
top:0,
left:0,
right:0,
bottom:0},

panelContainer:{
position:'absolute',
left:0,
right:0}});



module.exports=Inspector;
});
__d('InspectorOverlay',function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({displayName:'InspectorOverlay',
propTypes:{
inspected:PropTypes.shape({
frame:PropTypes.object,
style:PropTypes.any}),

inspectedViewTag:PropTypes.number,
onTouchInstance:PropTypes.func.isRequired},


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touche=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touche.locationX;var locationY=_e$nativeEvent$touche.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance,{left:left,top:top,width:width,height:height},locationY);});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=null;
if(this.props.inspected){
content=React.createElement(ElementBox,{frame:this.props.inspected.frame,style:this.props.inspected.style});}


return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{height:Dimensions.get('window').height}]},
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent',
position:'absolute',
left:0,
top:0,
right:0}});



module.exports=InspectorOverlay;
});
__d('ElementBox',function(global, require, module, exports) {  'use strict';












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=function(_React$Component){babelHelpers.inherits(ElementBox,_React$Component);function ElementBox(){babelHelpers.classCallCheck(this,ElementBox);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(ElementBox).apply(this,arguments));}babelHelpers.createClass(ElementBox,[{key:'render',value:function render()
{
var style=flattenStyle(this.props.style)||{};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle={
top:frameStyle.top-margin.top,
left:frameStyle.left-margin.left,
height:frameStyle.height+margin.top+margin.bottom,
width:frameStyle.width+margin.left+margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle={
width:contentStyle.width-padding.left-padding.right,
height:contentStyle.height-padding.top-padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;}(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports=ElementBox;
});
__d('BorderBox',function(global, require, module, exports) {  'use strict';












var React=require('React');
var View=require('View');var 

BorderBox=function(_React$Component){babelHelpers.inherits(BorderBox,_React$Component);function BorderBox(){babelHelpers.classCallCheck(this,BorderBox);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(BorderBox).apply(this,arguments));}babelHelpers.createClass(BorderBox,[{key:'render',value:function render()
{
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;}(React.Component);





module.exports=BorderBox;
});
__d('resolveBoxStyle',function(global, require, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub]=style[prefix]||0;});

if(style[prefix]){
set=true;}

if(style[prefix+'Vertical']){
res.top=res.bottom=style[prefix+'Vertical'];
set=true;}

if(style[prefix+'Horizontal']){
res.left=res.right=style[prefix+'Horizontal'];
set=true;}

subs.forEach(function(sub){
var val=style[prefix+capFirst(sub)];
if(val){
res[sub]=val;
set=true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase()+text.slice(1);}


module.exports=resolveBoxStyle;
});
__d('InspectorPanel',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=function(_React$Component){babelHelpers.inherits(InspectorPanel,_React$Component);function InspectorPanel(){babelHelpers.classCallCheck(this,InspectorPanel);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(InspectorPanel).apply(this,arguments));}babelHelpers.createClass(InspectorPanel,[{key:'renderWaiting',value:function renderWaiting()
{
if(this.props.inspecting){
return (
React.createElement(Text,{style:styles.waitingText},'Tap something to inspect it'));}




return React.createElement(Text,{style:styles.waitingText},'Nothing is inspected');}},{key:'render',value:function render()


{
var contents;
if(this.props.inspected){
contents=
React.createElement(ElementProperties,{
style:this.props.inspected.style,
frame:this.props.inspected.frame,
hierarchy:this.props.hierarchy,
selection:this.props.selection,
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents=
React.createElement(PerformanceOverlay,null);}else 

{
contents=
React.createElement(View,{style:styles.waiting},
this.renderWaiting());}



return (
React.createElement(View,{style:styles.container},
!this.props.devtoolsIsOpen&&contents,
React.createElement(View,{style:styles.buttonRow},
React.createElement(Button,{
title:'Inspect',
pressed:this.props.inspecting,
onClick:this.props.setInspecting}),

React.createElement(Button,{title:'Perf',
pressed:this.props.perfing,
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;}(React.Component);







InspectorPanel.propTypes={
devtoolsIsOpen:PropTypes.bool,
inspecting:PropTypes.bool,
setInspecting:PropTypes.func,
inspected:PropTypes.object,
perfing:PropTypes.bool,
setPerfing:PropTypes.func};var 


Button=function(_React$Component2){babelHelpers.inherits(Button,_React$Component2);function Button(){babelHelpers.classCallCheck(this,Button);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Button).apply(this,arguments));}babelHelpers.createClass(Button,[{key:'render',value:function render()
{var _this3=this;
return (
React.createElement(TouchableHighlight,{onPress:function(){return _this3.props.onClick(!_this3.props.pressed);},style:[
styles.button,
this.props.pressed&&styles.buttonPressed]},

React.createElement(Text,{style:styles.buttonText},this.props.title)));}}]);return Button;}(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'},

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)',
margin:2,
height:30,
justifyContent:'center',
alignItems:'center'},

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'},

buttonText:{
textAlign:'center',
color:'white',
margin:5},

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'},

waiting:{
height:100},

waitingText:{
fontSize:20,
textAlign:'center',
marginVertical:20}});



module.exports=InspectorPanel;
});
__d('ElementProperties',function(global, require, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties',
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.oneOfType([
PropTypes.object,
PropTypes.array,
PropTypes.number])},



render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i===selection&&styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports=ElementProperties;
});
__d('BoxInspector',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=function(_React$Component){babelHelpers.inherits(BoxInspector,_React$Component);function BoxInspector(){babelHelpers.classCallCheck(this,BoxInspector);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(BoxInspector).apply(this,arguments));}babelHelpers.createClass(BoxInspector,[{key:'render',value:function render()
{
var frame=this.props.frame;
var style=this.props.style;
var margin=style&&resolveBoxStyle('margin',style)||blank;
var padding=style&&resolveBoxStyle('padding',style)||blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;}(React.Component);var 








BoxContainer=function(_React$Component2){babelHelpers.inherits(BoxContainer,_React$Component2);function BoxContainer(){babelHelpers.classCallCheck(this,BoxContainer);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(BoxContainer).apply(this,arguments));}babelHelpers.createClass(BoxContainer,[{key:'render',value:function render()
{
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;}(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports=BoxInspector;
});
__d('StyleInspector',function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=function(_React$Component){babelHelpers.inherits(StyleInspector,_React$Component);function StyleInspector(){babelHelpers.classCallCheck(this,StyleInspector);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(StyleInspector).apply(this,arguments));}babelHelpers.createClass(StyleInspector,[{key:'render',value:function render()
{var _this2=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this2.props.style[name]);}))));}}]);return StyleInspector;}(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports=StyleInspector;
});
__d('mapWithSeparator',function(global, require, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i<array.length;i++){
results.push(valueFunction(array[i],i,array));
if(i!==array.length-1){
results.push(separatorFunction(i));}}


return results;}


module.exports=mapWithSeparator;
});
__d('PerformanceOverlay',function(global, require, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({displayName:'PerformanceOverlay',
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs){
if(perfLogs[key].totalTime){
items.push(
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[styles.text,styles.label]},key),
React.createElement(Text,{style:[styles.text,styles.totalTime]},
perfLogs[key].totalTime+'ms')));}}






return (
React.createElement(View,{style:styles.container},
items));}});





var styles=StyleSheet.create({
container:{
height:100,
paddingTop:10},

label:{
flex:1},

row:{
flexDirection:'row',
paddingHorizontal:10},

text:{
color:'white',
fontSize:12},

totalTime:{
paddingRight:100}});



module.exports=PerformanceOverlay;
});
__d('YellowBox',function(global, require, module, exports) {  'use strict';













var EventEmitter=require('EventEmitter');

var Map=require('Map');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');

var _warningEmitter=new EventEmitter();
var _warningMap=new Map();






















if(__DEV__){(function(){var _console=
console;var error=_console.error;var warn=_console.warn;
console.error=function(){
error.apply(console,arguments);

if(typeof arguments[0]==='string'&&
arguments[0].startsWith('Warning: ')){
updateWarningMap.apply(null,arguments);}};


console.warn=function(){
warn.apply(console,arguments);
updateWarningMap.apply(null,arguments);};})();}












function sprintf(format){for(var _len=arguments.length,args=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}
var index=0;
return format.replace(/%s/g,function(match){return args[index++];});}


function updateWarningMap(format){
var stringifySafe=require('stringifySafe');

format=String(format);
var argCount=(format.match(/%s/g)||[]).length;for(var _len2=arguments.length,args=Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}
var warning=[
sprintf.apply(undefined,[format].concat(babelHelpers.toConsumableArray(args.slice(0,argCount))))].concat(babelHelpers.toConsumableArray(
args.slice(argCount).map(stringifySafe))).
join(' ');

var count=_warningMap.has(warning)?_warningMap.get(warning):0;
_warningMap.set(warning,count+2);
_warningEmitter.emit('warning',_warningMap);}


function isWarningIgnored(warning){
return (
Array.isArray(console.ignoredYellowBox)&&
console.ignoredYellowBox.some(
function(ignorePrefix){return warning.startsWith(ignorePrefix);}));}




var WarningRow=function(_ref){var count=_ref.count;var warning=_ref.warning;var onPress=_ref.onPress;
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var View=require('View');

var countText=count>1?
React.createElement(Text,{style:styles.listRowCount},'('+count+') '):
null;

return (
React.createElement(View,{style:styles.listRow},
React.createElement(TouchableHighlight,{
activeOpacity:0.5,
onPress:onPress,
style:styles.listRowContent,
underlayColor:'transparent'},
React.createElement(Text,{style:styles.listRowText,numberOfLines:2},
countText,
warning))));};






var WarningInspector=function(_ref2)





{var count=_ref2.count;var warning=_ref2.warning;var onClose=_ref2.onClose;var onDismiss=_ref2.onDismiss;var onDismissAll=_ref2.onDismissAll;
var ScrollView=require('ScrollView');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var View=require('View');

var countSentence=
'Warning encountered '+count+' time'+(count-1?'s':'')+'.';

return (
React.createElement(TouchableHighlight,{
activeOpacity:0.95,
underlayColor:backgroundColor(0.8),
onPress:onClose,
style:styles.inspector},
React.createElement(View,{style:styles.inspectorContent},
React.createElement(View,{style:styles.inspectorCount},
React.createElement(Text,{style:styles.inspectorCountText},countSentence)),

React.createElement(ScrollView,{style:styles.inspectorWarning},
React.createElement(Text,{style:styles.inspectorWarningText},warning)),

React.createElement(View,{style:styles.inspectorButtons},
React.createElement(TouchableHighlight,{
activeOpacity:0.5,
onPress:onDismiss,
style:styles.inspectorButton,
underlayColor:'transparent'},
React.createElement(Text,{style:styles.inspectorButtonText},'Dismiss')),



React.createElement(TouchableHighlight,{
activeOpacity:0.5,
onPress:onDismissAll,
style:styles.inspectorButton,
underlayColor:'transparent'},
React.createElement(Text,{style:styles.inspectorButtonText},'Dismiss All'))))));};var 









YellowBox=function(_React$Component){babelHelpers.inherits(YellowBox,_React$Component);






function YellowBox(props,context){babelHelpers.classCallCheck(this,YellowBox);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(YellowBox).call(this,
props,context));
_this.state={
inspecting:null,
warningMap:_warningMap};

_this.dismissWarning=function(warning){var _this$state=
_this.state;var inspecting=_this$state.inspecting;var warningMap=_this$state.warningMap;
if(warning){
warningMap.delete(warning);}else 
{
warningMap.clear();}

_this.setState({
inspecting:warning&&inspecting!==warning?inspecting:null,
warningMap:warningMap});};return _this;}babelHelpers.createClass(YellowBox,[{key:'componentDidMount',value:function componentDidMount()




{var _this2=this;
var scheduled=null;
this._listener=_warningEmitter.addListener('warning',function(warningMap){


scheduled=scheduled||setImmediate(function(){
scheduled=null;
_this2.setState({
warningMap:warningMap});});});}},{key:'componentWillUnmount',value:function componentWillUnmount()





{
if(this._listener){
this._listener.remove();}}},{key:'render',value:function render()



{var _this3=this;
if(console.disableYellowBox||this.state.warningMap.size===0){
return null;}

var ScrollView=require('ScrollView');
var View=require('View');

var inspecting=this.state.inspecting;
var inspector=inspecting!==null?
React.createElement(WarningInspector,{
count:this.state.warningMap.get(inspecting),
warning:inspecting,
onClose:function(){return _this3.setState({inspecting:null});},
onDismiss:function(){return _this3.dismissWarning(inspecting);},
onDismissAll:function(){return _this3.dismissWarning(null);}}):

null;

var rows=[];
this.state.warningMap.forEach(function(count,warning){
if(!isWarningIgnored(warning)){
rows.push(
React.createElement(WarningRow,{
key:warning,
count:count,
warning:warning,
onPress:function(){return _this3.setState({inspecting:warning});},
onDismiss:function(){return _this3.dismissWarning(warning);}}));}});





var listStyle=[
styles.list,

{height:Math.min(rows.length,4.4)*(rowGutter+rowHeight)}];

return (
React.createElement(View,{style:inspector?styles.fullScreen:listStyle},
React.createElement(ScrollView,{style:listStyle},
rows),

inspector));}}]);return YellowBox;}(React.Component);





var backgroundColor=function(opacity){return 'rgba(250, 186, 48, '+opacity+')';};
var textColor='white';
var rowGutter=1;
var rowHeight=46;

var styles=StyleSheet.create({
fullScreen:{
backgroundColor:'transparent',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0},

inspector:{
backgroundColor:backgroundColor(0.95),
flex:1},

inspectorContainer:{
flex:1},

inspectorButtons:{
flexDirection:'row',
position:'absolute',
left:0,
right:0,
bottom:0},

inspectorButton:{
flex:1,
padding:22},

inspectorButtonText:{
color:textColor,
fontSize:14,
opacity:0.8,
textAlign:'center'},

inspectorContent:{
flex:1,
paddingTop:5},

inspectorCount:{
padding:15,
paddingBottom:0},

inspectorCountText:{
color:textColor,
fontSize:14},

inspectorWarning:{
padding:15,
position:'absolute',
top:39,
bottom:60},

inspectorWarningText:{
color:textColor,
fontSize:16,
fontWeight:'600'},

list:{
backgroundColor:'transparent',
position:'absolute',
left:0,
right:0,
bottom:0},

listRow:{
position:'relative',
backgroundColor:backgroundColor(0.95),
flex:1,
height:rowHeight,
marginTop:rowGutter},

listRowContent:{
flex:1},

listRowCount:{
color:'rgba(255, 255, 255, 0.5)'},

listRowText:{
color:textColor,
position:'absolute',
left:0,
top:Platform.OS==='android'?5:7,
marginLeft:15,
marginRight:15}});



module.exports=YellowBox;
});
__d('RCTRenderingPerf',function(global, require, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled=true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii<measurements.length;ii++){
var render=measurements[ii].render;
for(var nodeName in render){
totalRender+=render[nodeName];}

totalTime+=measurements[ii].totalTime;}

console.log('Total time spent in render(): '+totalRender+'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start==='function',
'Perf module should have start() function');

invariant(
typeof module.stop==='function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports=RCTRenderingPerf;
});
__d('ReactDefaultPerf',function(global, require, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val*100)/100;}


function addValue(obj,key,val){
obj[key]=(obj[key]||0)+val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length=0;
ReactPerf.enableMeasure=true;},


stop:function(){
ReactPerf.enableMeasure=false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive/item.count),
'Render time per instance (ms)':roundFloat(item.render/item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2)+' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2)+' ms');},



printDOM:function(measurements){
measurements=measurements||ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME]=item.id;
result.type=item.type;
result.args=JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2)+' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length-1].
writes;
writes[id]=writes[id]||[];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName==='_renderNewRootComponent'||
fnName==='flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0,
created:{}});

start=performanceNow();
rv=func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length-1].
totalTime=performanceNow()-start;
return rv;}else 
if(fnName==='_mountImageIntoNode'||
moduleName==='ReactBrowserEventEmitter'||
moduleName==='ReactDOMIDOperations'||
moduleName==='CSSPropertyOperations'||
moduleName==='DOMChildrenOperations'||
moduleName==='DOMPropertyOperations'){
start=performanceNow();
rv=func.apply(this,args);
totalTime=performanceNow()-start;

if(fnName==='_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName==='dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex!==null){
writeArgs.fromIndex=update.fromIndex;}

if(update.toIndex!==null){
writeArgs.toIndex=update.toIndex;}

if(update.textContent!==null){
writeArgs.textContent=update.textContent;}

if(update.markupIndex!==null){
writeArgs.markup=args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

var id=args[0];
if(typeof id==='object'){
id=ReactMount.getID(args[0]);}

ReactDefaultPerf._recordWrite(
id,
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName==='ReactCompositeComponent'&&(
fnName==='mountComponent'||
fnName==='updateComponent'||
fnName==='_renderValidatedComponent')){

if(this._currentElement.type===ReactMount.TopLevelWrapper){
return func.apply(this,args);}


var rootNodeID=fnName==='mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName==='_renderValidatedComponent';
var isMount=fnName==='mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length-1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
entry.created[rootNodeID]=true;
mountStack.push(0);}


start=performanceNow();
rv=func.apply(this,args);
totalTime=performanceNow()-start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length-1]+=totalTime;
addValue(entry.exclusive,rootNodeID,totalTime-subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID]={
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports=ReactDefaultPerf;
});
__d('DOMProperty',function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');

function checkMask(value,bitmask){
return (value&bitmask)===bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20|0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,





























injectDOMPropertyConfig:function(domPropertyConfig){
var Injection=DOMPropertyInjection;
var Properties=domPropertyConfig.Properties||{};
var DOMAttributeNamespaces=domPropertyConfig.DOMAttributeNamespaces||{};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames||{};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames||{};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods||{};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties){
invariant(
!DOMProperty.properties.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property '+
'\'%s\' which has already been injected. You may be accidentally '+
'injecting the same DOM property config twice, or you may be '+
'injecting two configs that have conflicting property names.',
propName);


var lowerCased=propName.toLowerCase();
var propConfig=Properties[propName];

var propertyInfo={
attributeName:lowerCased,
attributeNamespace:null,
propertyName:propName,
mutationMethod:null,

mustUseAttribute:checkMask(propConfig,Injection.MUST_USE_ATTRIBUTE),
mustUseProperty:checkMask(propConfig,Injection.MUST_USE_PROPERTY),
hasSideEffects:checkMask(propConfig,Injection.HAS_SIDE_EFFECTS),
hasBooleanValue:checkMask(propConfig,Injection.HAS_BOOLEAN_VALUE),
hasNumericValue:checkMask(propConfig,Injection.HAS_NUMERIC_VALUE),
hasPositiveNumericValue:
checkMask(propConfig,Injection.HAS_POSITIVE_NUMERIC_VALUE),
hasOverloadedBooleanValue:
checkMask(propConfig,Injection.HAS_OVERLOADED_BOOLEAN_VALUE)};


invariant(
!propertyInfo.mustUseAttribute||!propertyInfo.mustUseProperty,
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
propertyInfo.mustUseProperty||!propertyInfo.hasSideEffects,
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
propertyInfo.hasBooleanValue+propertyInfo.hasNumericValue+
propertyInfo.hasOverloadedBooleanValue<=1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or '+
'numeric value, but not a combination: %s',
propName);


if(__DEV__){
DOMProperty.getPossibleStandardName[lowerCased]=propName;}


if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
propertyInfo.attributeName=attributeName;
if(__DEV__){
DOMProperty.getPossibleStandardName[attributeName]=propName;}}



if(DOMAttributeNamespaces.hasOwnProperty(propName)){
propertyInfo.attributeNamespace=DOMAttributeNamespaces[propName];}


if(DOMPropertyNames.hasOwnProperty(propName)){
propertyInfo.propertyName=DOMPropertyNames[propName];}


if(DOMMutationMethods.hasOwnProperty(propName)){
propertyInfo.mutationMethod=DOMMutationMethods[propName];}


DOMProperty.properties[propName]=propertyInfo;}}};



var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





































properties:{},






getPossibleStandardName:__DEV__?{}:null,




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i<DOMProperty._isCustomAttributeFunctions.length;i++){
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName]=nodeDefaults={};}

if(!(prop in nodeDefaults)){
testElement=document.createElement(nodeName);
nodeDefaults[prop]=testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports=DOMProperty;
});
__d('ReactDefaultPerfAnalysis',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
SET_MARKUP:'set innerHTML',
TEXT_CONTENT:'set textContent',
'setValueForProperty':'update attribute',
'setValueForAttribute':'update attribute',
'deleteValueForProperty':'remove attribute',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i<measurements.length;i++){
var measurement=measurements[i];
totalTime+=measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
measurements.forEach(function(measurement){
Object.keys(measurement.writes).forEach(function(id){
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type]||write.type,
args:write.args});});});});




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i<measurements.length;i++){
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs){
displayName=measurement.displayNames[id].current;

candidates[displayName]=candidates[displayName]||{
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render+=measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive+=measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive+=measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count+=measurement.counts[id];}}}





var arr=[];
for(displayName in candidates){
if(candidates[displayName].exclusive>=DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive-a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i<measurements.length;i++){
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents=getUnchangedComponents(measurement);}


for(var id in allIDs){
if(onlyClean&&!cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey=displayName.owner+' > '+displayName.current;

candidates[inclusiveKey]=candidates[inclusiveKey]||{
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time+=measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count+=measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates){
if(candidates[inclusiveKey].time>=DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time-a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs){
var isDirty=false;


for(var i=0;i<dirtyLeafIDs.length;i++){
if(dirtyLeafIDs[i].indexOf(id)===0){
isDirty=true;
break;}}



if(measurement.created[id]){
isDirty=true;}

if(!isDirty&&measurement.counts[id]>0){
cleanComponents[id]=true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports=ReactDefaultPerfAnalysis;
});
__d('ReactMount',function(global, require, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactDOMFeatureFlags=require('ReactDOMFeatureFlags');
var ReactElement=require('ReactElement');
var ReactEmptyComponentRegistry=require('ReactEmptyComponentRegistry');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var validateDOMNesting=require('validateDOMNesting');
var warning=require('warning');

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;
var DOCUMENT_FRAGMENT_NODE_TYPE=11;

var ownerDocumentContextKey=
'__ReactMount_ownerDocument$'+Math.random().toString(36).slice(2);



var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i<minLen;i++){
if(string1.charAt(i)!==string2.charAt(i)){
return i;}}


return string1.length===string2.length?-1:minLen;}







function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType===DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}







function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement&&ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached!==node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id]=node;}}else 

{
nodeCache[id]=node;}}



return id;}


function internalGetID(node){



return node&&node.getAttribute&&node.getAttribute(ATTR_NAME)||'';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID!==id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id]=node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id)||!isValid(nodeCache[id],id)){
nodeCache[id]=ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponentRegistry.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id)||!isValid(nodeCache[id],id)){
nodeCache[id]=ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node)===id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container&&containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor&&isValid(ancestor,ancestorID)){
deepestNodeSoFar=ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar=null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar=null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context)
{
if(ReactDOMFeatureFlags.useCreateElement){
context=assign({},context);
if(container.nodeType===DOC_NODE_TYPE){
context[ownerDocumentContextKey]=container;}else 
{
context[ownerDocumentContextKey]=container.ownerDocument;}}


if(__DEV__){
if(context===emptyObject){
context={};}

var tag=container.nodeName.toLowerCase();
context[validateDOMNesting.ancestorInfoContextKey]=
validateDOMNesting.updatedAncestorInfo(null,tag,null);}

var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,context);

componentInstance._renderedComponent._topLevelWrapper=componentInstance;
ReactMount._mountImageIntoNode(
markup,
container,
shouldReuseMarkup,
transaction);}











function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup,
context)
{
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled(
shouldReuseMarkup);

transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context);

ReactUpdates.ReactReconcileTransaction.release(transaction);}











function unmountComponentFromNode(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType===DOC_NODE_TYPE){
container=container.documentElement;}



while(container.lastChild){
container.removeChild(container.lastChild);}}













function hasNonRootReactChild(node){
var reactRootID=getReactRootID(node);
return reactRootID?reactRootID!==
ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID):false;}






function findFirstReactDOMImpl(node){


for(;node&&node.parentNode!==node;node=node.parentNode){
if(node.nodeType!==1){

continue;}

var nodeID=internalGetID(node);
if(!nodeID){
continue;}

var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);





var current=node;
var lastID;
do {
lastID=internalGetID(current);
current=current.parentNode;
if(current==null){


return null;}}while(

lastID!==reactRootID);

if(current===containersByReactRootID[reactRootID]){
return node;}}


return null;}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.isReactComponent={};
if(__DEV__){
TopLevelWrapper.displayName='TopLevelWrapper';}

TopLevelWrapper.prototype.render=function(){

return this.props;};




















var ReactMount={

TopLevelWrapper:TopLevelWrapper,


_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)]=
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container&&(
container.nodeType===ELEMENT_NODE_TYPE||
container.nodeType===DOC_NODE_TYPE||
container.nodeType===DOCUMENT_FRAGMENT_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID]=nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup,
context)
{



warning(
ReactCurrentOwner.current==null,
'_renderNewRootComponent(): Render methods should be a pure function '+
'of props and state; triggering nested component updates from '+
'render is not allowed. If necessary, trigger nested updates in '+
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current&&ReactCurrentOwner.current.getName()||
'ReactCompositeComponent');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup,
context);


if(__DEV__){

rootElementsByReactRootID[reactRootID]=
getReactRootElementInContainer(container);}


return componentInstance;},















renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
parentComponent!=null&&parentComponent._reactInternalInstance!=null,
'parentComponent must be a valid React Component');

return ReactMount._renderSubtreeIntoContainer(
parentComponent,
nextElement,
container,
callback);},



_renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'ReactDOM.render(): Invalid component element.%s',

typeof nextElement==='string'?
' Instead of passing an element string, make sure to instantiate '+
'it by passing it to React.createElement.':
typeof nextElement==='function'?
' Instead of passing a component class, make sure to instantiate '+
'it by passing it to React.createElement.':

nextElement!=null&&nextElement.props!==undefined?
' This may be caused by unintentionally loading two independent '+
'copies of React.':
'');



warning(
!container||!container.tagName||
container.tagName.toUpperCase()!=='BODY',
'render(): Rendering components directly into document.body is '+
'discouraged, since its children are often manipulated by third-party '+
'scripts and browser extensions. This may lead to subtle '+
'reconciliation issues. Try rendering into a container element created '+
'for your app.');


var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
null,
null,
nextElement);


var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
var publicInst=prevComponent._renderedComponent.getPublicInstance();
var updatedCallback=callback&&function(){
callback.call(publicInst);};

ReactMount._updateRootComponent(
prevComponent,
nextWrappedElement,
container,
updatedCallback);

return publicInst;}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement&&!!internalGetID(reactRootElement);
var containerHasNonRootReactChild=hasNonRootReactChild(container);

if(__DEV__){
warning(
!containerHasNonRootReactChild,
'render(...): Replacing React-rendered children with a new root '+
'component. If you intended to update the children of this node, '+
'you should instead have the existing children update their state '+
'and render the new components instead of calling ReactDOM.render.');


if(!containerHasReactMarkup||reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling){
if(internalGetID(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there '+
'are unrelated nodes as well. This is most commonly caused by '+
'white-space inserted around server-rendered markup.');

break;}

rootElementSibling=rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=
containerHasReactMarkup&&
!prevComponent&&
!containerHasNonRootReactChild;
var component=ReactMount._renderNewRootComponent(
nextWrappedElement,
container,
shouldReuseMarkup,
parentComponent!=null?
parentComponent._reactInternalInstance._processChildContext(
parentComponent._reactInternalInstance._context):

emptyObject).
_renderedComponent.getPublicInstance();
if(callback){
callback.call(component);}

return component;},















render:function(nextElement,container,callback){
return ReactMount._renderSubtreeIntoContainer(null,nextElement,container,callback);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID=ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID]=container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current==null,
'unmountComponentAtNode(): Render methods should be a pure function '+
'of props and state; triggering nested component updates from render '+
'is not allowed. If necessary, trigger nested updates in '+
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current&&ReactCurrentOwner.current.getName()||
'ReactCompositeComponent');


invariant(
container&&(
container.nodeType===ELEMENT_NODE_TYPE||
container.nodeType===DOC_NODE_TYPE||
container.nodeType===DOCUMENT_FRAGMENT_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){


var containerHasNonRootReactChild=hasNonRootReactChild(container);


var containerID=internalGetID(container);
var isContainerReactRoot=
containerID&&
containerID===
ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

if(__DEV__){
warning(
!containerHasNonRootReactChild,
'unmountComponentAtNode(): The node you\'re attempting to unmount '+
'was rendered by React and is not a top-level container. %s',

isContainerReactRoot?
'You may have accidentally passed in a React root node instead '+
'of its container.':
'Instead, have the parent component update its state and '+
'rerender in order to remove this component.');}




return false;}

ReactUpdates.batchedUpdates(
unmountComponentFromNode,
component,
container);

delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},









findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement&&rootElement.parentNode!==container){
warning(


internalGetID(rootElement)===reactRootID,
'ReactMount: Root element ID differed from reactRootID.');

var containerChild=container.firstChild;
if(containerChild&&
reactRootID===internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID]=containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original '+
'container. New container: %s',
rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},










getFirstReactDOM:function(node){
return findFirstReactDOMImpl(node);},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID)||ancestorNode;

if(__DEV__){

warning(
deepestAncestor!=null,
'React can\'t find the root component node for data-reactid value '+
'`%s`. If you\'re seeing this message, it probably means that '+
'you\'ve loaded two copies of React on the page. At this time, only '+
'a single copy of React can be loaded at a time.',
targetID);}



firstChildren[0]=deepestAncestor.firstChild;
firstChildren.length=1;

while(childIndex<firstChildren.length){
var child=firstChildren[childIndex++];
var targetChild;

while(child){
var childID=ReactMount.getID(child);
if(childID){





if(targetID===childID){
targetChild=child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length=childIndex=0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child=child.nextSibling;}


if(targetChild){



firstChildren.length=0;

return targetChild;}}



firstChildren.length=0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably '+
'means the DOM was unexpectedly mutated (e.g., by the browser), '+
'usually due to forgetting a <tbody> when using tables, nesting tags '+
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> '+
'parent. '+
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(
markup,
container,
shouldReuseMarkup,
transaction)
{
invariant(
container&&(
container.nodeType===ELEMENT_NODE_TYPE||
container.nodeType===DOC_NODE_TYPE||
container.nodeType===DOCUMENT_FRAGMENT_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var normalizedMarkup=markup;
if(__DEV__){




var normalizer;
if(container.nodeType===ELEMENT_NODE_TYPE){
normalizer=document.createElement('div');
normalizer.innerHTML=markup;
normalizedMarkup=normalizer.innerHTML;}else 
{
normalizer=document.createElement('iframe');
document.body.appendChild(normalizer);
normalizer.contentDocument.write(markup);
normalizedMarkup=normalizer.contentDocument.documentElement.outerHTML;
document.body.removeChild(normalizer);}}



var diffIndex=firstDifferenceIndex(normalizedMarkup,rootMarkup);
var difference=' (client) '+
normalizedMarkup.substring(diffIndex-20,diffIndex+20)+
'\n (server) '+rootMarkup.substring(diffIndex-20,diffIndex+20);

invariant(
container.nodeType!==DOC_NODE_TYPE,
'You\'re trying to render a component to the document using '+
'server rendering but the checksum was invalid. This usually '+
'means you rendered a different component type or props on '+
'the client from the one on the server, or your render() '+
'methods are impure. React cannot handle this case due to '+
'cross-browser quirks by rendering at the document root. You '+
'should look for environment dependent code in your components '+
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the '+
'checksum was invalid. This generally means that you are '+
'using server rendering and the markup generated on the '+
'server was not what the client was expecting. React injected '+
'new markup to compensate which works but you have lost many '+
'of the benefits of server rendering. Instead, figure out '+
'why the markup being generated is different on the client '+
'or server:\n%s',
difference);}}}





invariant(
container.nodeType!==DOC_NODE_TYPE,
'You\'re trying to render a component to the document but '+
'you didn\'t use server rendering. We can\'t do this '+
'without using server rendering due to cross-browser quirks. '+
'See ReactDOMServer.renderToString() for server rendering.');


if(transaction.useCreateElement){
while(container.lastChild){
container.removeChild(container.lastChild);}

container.appendChild(markup);}else 
{
setInnerHTML(container,markup);}},



ownerDocumentContextKey:ownerDocumentContextKey,





getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

isValid:isValid,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports=ReactMount;
});
__d('ReactBrowserEventEmitter',function(global, require, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactPerf=require('ReactPerf');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topAbort:'abort',
topBlur:'blur',
topCanPlay:'canplay',
topCanPlayThrough:'canplaythrough',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topDurationChange:'durationchange',
topEmptied:'emptied',
topEncrypted:'encrypted',
topEnded:'ended',
topError:'error',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topLoadedData:'loadeddata',
topLoadedMetadata:'loadedmetadata',
topLoadStart:'loadstart',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topPause:'pause',
topPlay:'play',
topPlaying:'playing',
topProgress:'progress',
topRateChange:'ratechange',
topScroll:'scroll',
topSeeked:'seeked',
topSeeking:'seeking',
topSelectionChange:'selectionchange',
topStalled:'stalled',
topSuspend:'suspend',
topTextInput:'textInput',
topTimeUpdate:'timeupdate',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topVolumeChange:'volumechange',
topWaiting:'waiting',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID'+String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey]=reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]]={};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener=ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener&&
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=
EventPluginRegistry.registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0;i<dependencies.length;i++){
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency)&&
isListening[dependency]))
{
if(dependency===topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency===topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency===topLevelTypes.topFocus||
dependency===topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur]=true;
isListening[topLevelTypes.topFocus]=true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency]=true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue=true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



ReactPerf.measureMethods(ReactBrowserEventEmitter,'ReactBrowserEventEmitter',{
putListener:'putListener',
deleteListener:'deleteListener'});


module.exports=ReactBrowserEventEmitter;
});
__d('ViewportMetrics',function(global, require, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft=scrollPosition.x;
ViewportMetrics.currentScrollTop=scrollPosition.y;}};




module.exports=ViewportMetrics;
});
__d('isEventSupported',function(global, require, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature=
document.implementation&&
document.implementation.hasFeature&&


document.implementation.hasFeature('','')!==true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM||
capture&&!('addEventListener' in document)){
return false;}


var eventName='on'+eventNameSuffix;
var isSupported=eventName in document;

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported=typeof element[eventName]==='function';}


if(!isSupported&&useHasFeature&&eventNameSuffix==='wheel'){

isSupported=document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports=isEventSupported;
});
__d('ReactDOMFeatureFlags',function(global, require, module, exports) {  'use strict';












var ReactDOMFeatureFlags={
useCreateElement:false};


module.exports=ReactDOMFeatureFlags;
});
__d('ReactMarkupChecksum',function(global, require, module, exports) {  'use strict';












var adler32=require('adler32');

var TAG_END=/\/?>/;

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);


return markup.replace(
TAG_END,
' '+ReactMarkupChecksum.CHECKSUM_ATTR_NAME+'="'+checksum+'"$&');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum=existingChecksum&&parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum===existingChecksum;}};



module.exports=ReactMarkupChecksum;
});
__d('adler32',function(global, require, module, exports) {  'use strict';












var MOD=65521;






function adler32(data){
var a=1;
var b=0;
var i=0;
var l=data.length;
var m=l&~0x3;
while(i<m){
for(;i<Math.min(i+4096,m);i+=4){
b+=
(a+=data.charCodeAt(i))+(
a+=data.charCodeAt(i+1))+(
a+=data.charCodeAt(i+2))+(
a+=data.charCodeAt(i+3));}


a%=MOD;
b%=MOD;}

for(;i<l;i++){
b+=a+=data.charCodeAt(i);}

a%=MOD;
b%=MOD;
return a|b<<16;}


module.exports=adler32;
});
__d('containsNode',function(global, require, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode||!innerNode){
return false;}else 
if(outerNode===innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode)&16);}else 
{
return false;}}



module.exports=containsNode;
});
__d('isTextNode',function(global, require, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object)&&object.nodeType==3;}


module.exports=isTextNode;
});
__d('setInnerHTML',function(global, require, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML=html;};



if(typeof MSApp!=='undefined'&&MSApp.execUnsafeLocalFunction){
setInnerHTML=function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML=html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML=' ';
if(testElement.innerHTML===''){
setInnerHTML=function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html)||
html[0]==='<'&&NONVISIBLE_TEST.test(html)){






node.innerHTML=String.fromCharCode(0xFEFF)+html;



var textNode=node.firstChild;
if(textNode.data.length===1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML=html;}};}}





module.exports=setInnerHTML;
});
__d('validateDOMNesting',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');

var validateDOMNesting=emptyFunction;

if(__DEV__){












var specialTags=[
'address','applet','area','article','aside','base','basefont',
'bgsound','blockquote','body','br','button','caption','center','col',
'colgroup','dd','details','dir','div','dl','dt','embed','fieldset',
'figcaption','figure','footer','form','frame','frameset','h1','h2',
'h3','h4','h5','h6','head','header','hgroup','hr','html','iframe',
'img','input','isindex','li','link','listing','main','marquee',
'menu','menuitem','meta','nav','noembed','noframes','noscript',
'object','ol','p','param','plaintext','pre','script','section',
'select','source','style','summary','table','tbody','td','template',
'textarea','tfoot','th','thead','title','tr','track','ul','wbr',
'xmp'];



var inScopeTags=[
'applet','caption','html','table','td','th','marquee','object',
'template',




'foreignObject','desc','title'];



var buttonScopeTags=inScopeTags.concat(['button']);


var impliedEndTags=
['dd','dt','li','option','optgroup','p','rp','rt'];

var emptyAncestorInfo={
parentTag:null,

formTag:null,
aTagInScope:null,
buttonTagInScope:null,
nobrTagInScope:null,
pTagInButtonScope:null,

listItemTagAutoclosing:null,
dlItemTagAutoclosing:null};


var updatedAncestorInfo=function(oldInfo,tag,instance){
var ancestorInfo=assign({},oldInfo||emptyAncestorInfo);
var info={tag:tag,instance:instance};

if(inScopeTags.indexOf(tag)!==-1){
ancestorInfo.aTagInScope=null;
ancestorInfo.buttonTagInScope=null;
ancestorInfo.nobrTagInScope=null;}

if(buttonScopeTags.indexOf(tag)!==-1){
ancestorInfo.pTagInButtonScope=null;}




if(
specialTags.indexOf(tag)!==-1&&
tag!=='address'&&tag!=='div'&&tag!=='p')
{
ancestorInfo.listItemTagAutoclosing=null;
ancestorInfo.dlItemTagAutoclosing=null;}


ancestorInfo.parentTag=info;

if(tag==='form'){
ancestorInfo.formTag=info;}

if(tag==='a'){
ancestorInfo.aTagInScope=info;}

if(tag==='button'){
ancestorInfo.buttonTagInScope=info;}

if(tag==='nobr'){
ancestorInfo.nobrTagInScope=info;}

if(tag==='p'){
ancestorInfo.pTagInButtonScope=info;}

if(tag==='li'){
ancestorInfo.listItemTagAutoclosing=info;}

if(tag==='dd'||tag==='dt'){
ancestorInfo.dlItemTagAutoclosing=info;}


return ancestorInfo;};





var isTagValidWithParent=function(tag,parentTag){

switch(parentTag){

case 'select':
return tag==='option'||tag==='optgroup'||tag==='#text';
case 'optgroup':
return tag==='option'||tag==='#text';


case 'option':
return tag==='#text';







case 'tr':
return (
tag==='th'||tag==='td'||tag==='style'||tag==='script'||
tag==='template');



case 'tbody':
case 'thead':
case 'tfoot':
return (
tag==='tr'||tag==='style'||tag==='script'||
tag==='template');



case 'colgroup':
return tag==='col'||tag==='template';


case 'table':
return (
tag==='caption'||tag==='colgroup'||tag==='tbody'||
tag==='tfoot'||tag==='thead'||tag==='style'||
tag==='script'||tag==='template');



case 'head':
return (
tag==='base'||tag==='basefont'||tag==='bgsound'||
tag==='link'||tag==='meta'||tag==='title'||
tag==='noscript'||tag==='noframes'||tag==='style'||
tag==='script'||tag==='template');



case 'html':
return tag==='head'||tag==='body';}





switch(tag){
case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return (
parentTag!=='h1'&&parentTag!=='h2'&&parentTag!=='h3'&&
parentTag!=='h4'&&parentTag!=='h5'&&parentTag!=='h6');


case 'rp':
case 'rt':
return impliedEndTags.indexOf(parentTag)===-1;

case 'caption':
case 'col':
case 'colgroup':
case 'frame':
case 'head':
case 'tbody':
case 'td':
case 'tfoot':
case 'th':
case 'thead':
case 'tr':




return parentTag==null;}


return true;};





var findInvalidAncestorForTag=function(tag,ancestorInfo){
switch(tag){
case 'address':
case 'article':
case 'aside':
case 'blockquote':
case 'center':
case 'details':
case 'dialog':
case 'dir':
case 'div':
case 'dl':
case 'fieldset':
case 'figcaption':
case 'figure':
case 'footer':
case 'header':
case 'hgroup':
case 'main':
case 'menu':
case 'nav':
case 'ol':
case 'p':
case 'section':
case 'summary':
case 'ul':

case 'pre':
case 'listing':

case 'table':

case 'hr':

case 'xmp':

case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return ancestorInfo.pTagInButtonScope;

case 'form':
return ancestorInfo.formTag||ancestorInfo.pTagInButtonScope;

case 'li':
return ancestorInfo.listItemTagAutoclosing;

case 'dd':
case 'dt':
return ancestorInfo.dlItemTagAutoclosing;

case 'button':
return ancestorInfo.buttonTagInScope;

case 'a':


return ancestorInfo.aTagInScope;

case 'nobr':
return ancestorInfo.nobrTagInScope;}


return null;};






var findOwnerStack=function(instance){
if(!instance){
return [];}


var stack=[];

do {

stack.push(instance);}while(
instance=instance._currentElement._owner);
stack.reverse();
return stack;};


var didWarn={};

validateDOMNesting=function(childTag,childInstance,ancestorInfo){
ancestorInfo=ancestorInfo||emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo&&parentInfo.tag;

var invalidParent=
isTagValidWithParent(childTag,parentTag)?null:parentInfo;
var invalidAncestor=
invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);
var problematic=invalidParent||invalidAncestor;

if(problematic){
var ancestorTag=problematic.tag;
var ancestorInstance=problematic.instance;

var childOwner=childInstance&&childInstance._currentElement._owner;
var ancestorOwner=
ancestorInstance&&ancestorInstance._currentElement._owner;

var childOwners=findOwnerStack(childOwner);
var ancestorOwners=findOwnerStack(ancestorOwner);

var minStackLen=Math.min(childOwners.length,ancestorOwners.length);
var i;

var deepestCommon=-1;
for(i=0;i<minStackLen;i++){
if(childOwners[i]===ancestorOwners[i]){
deepestCommon=i;}else 
{
break;}}



var UNKNOWN='(unknown)';
var childOwnerNames=childOwners.slice(deepestCommon+1).map(
function(inst){return inst.getName()||UNKNOWN;});

var ancestorOwnerNames=ancestorOwners.slice(deepestCommon+1).map(
function(inst){return inst.getName()||UNKNOWN;});

var ownerInfo=[].concat(


deepestCommon!==-1?
childOwners[deepestCommon].getName()||UNKNOWN:
[],
ancestorOwnerNames,
ancestorTag,

invalidAncestor?['...']:[],
childOwnerNames,
childTag).
join(' > ');

var warnKey=
!!invalidParent+'|'+childTag+'|'+ancestorTag+'|'+ownerInfo;
if(didWarn[warnKey]){
return;}

didWarn[warnKey]=true;

if(invalidParent){
var info='';
if(ancestorTag==='table'&&childTag==='tr'){
info+=
' Add a <tbody> to your code to match the DOM tree generated by '+
'the browser.';}

warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. '+
'See %s.%s',
childTag,
ancestorTag,
ownerInfo,
info);}else 

{
warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a descendant of '+
'<%s>. See %s.',
childTag,
ancestorTag,
ownerInfo);}}};





validateDOMNesting.ancestorInfoContextKey=
'__validateDOMNesting_ancestorInfo$'+Math.random().toString(36).slice(2);

validateDOMNesting.updatedAncestorInfo=updatedAncestorInfo;


validateDOMNesting.isTagValidInContext=function(tag,ancestorInfo){
ancestorInfo=ancestorInfo||emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo&&parentInfo.tag;
return (
isTagValidWithParent(tag,parentTag)&&
!findInvalidAncestorForTag(tag,ancestorInfo));};}




module.exports=validateDOMNesting;
});
__d('AppStateIOS',function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(),
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type)!==-1,
'Trying to subscribe to unknown event: "%s"',type);

if(type==='change'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type==='memoryWarning'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'memoryWarning',
handler));}},







removeEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type)!==-1,
'Trying to remove listener for unknown event: "%s"',type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);},






currentState:'active'};



RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
AppStateIOS.currentState=appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState=appStateData.app_state;},

logError);


module.exports=AppStateIOS;
});
__d('AsyncStorage',function(global, require, module, exports) {  'use strict';













var NativeModules=require('NativeModules');
var RCTAsyncSQLiteStorage=NativeModules.AsyncSQLiteDBStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;
var RCTAsyncFileStorage=NativeModules.AsyncLocalStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage||RCTAsyncSQLiteStorage||RCTAsyncFileStorage;













var AsyncStorage={
_getRequests:[],
_getKeys:[],
_immediate:null,





getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result&&result[0]&&result[0][1]?result[0][1]:null;
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0],value);
if(errs){
reject(errs[0]);}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0]);
if(errs){
reject(errs[0]);}else 
{
resolve(null);}});});},








removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0]);
if(errs){
reject(errs[0]);}else 
{
resolve(null);}});});},









mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
var errs=convertErrors(errors);
callback&&callback(errs&&errs[0]);
if(errs){
reject(errs[0]);}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback&&callback(convertError(error));
if(error&&convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback&&callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},
















flushGetRequests:function(){
var getRequests=this._getRequests;
var getKeys=this._getKeys;

this._getRequests=[];
this._getKeys=[];

RCTAsyncStorage.multiGet(getKeys,function(errors,result){



var reqLength=getRequests.length;var _loop=function(
i){
var request=getRequests[i];
var requestKeys=request.keys;
requestResult=result.filter(function(resultPair){
return requestKeys.indexOf(resultPair[0])!==-1;});


request.callback&&request.callback(null,requestResult);
request.resolve&&request.resolve(requestResult);};for(var i=0;i<reqLength;i++){var requestResult;_loop(i);}});},










multiGet:function(
keys,
callback)
{var _this=this;
if(!this._immediate){
this._immediate=setImmediate(function(){
_this._immediate=null;
_this.flushGetRequests();});}



var getRequest={
keys:keys,
callback:callback,
keyIndex:this._getKeys.length,
resolve:null,
reject:null};


var promiseResult=new Promise(function(resolve,reject){
getRequest.resolve=resolve;
getRequest.reject=reject;});


this._getRequests.push(getRequest);
this._getKeys.push.apply(this._getKeys,keys);

return promiseResult;},








multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=convertErrors(errors);
callback&&callback(error);
if(error){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=convertErrors(errors);
callback&&callback(error);
if(error){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=convertErrors(errors);
callback&&callback(error);
if(error){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertErrors(errs){
if(!errs){
return null;}

return (Array.isArray(errs)?errs:[errs]).map(function(e){return convertError(e);});}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key=error.key;
return out;}


module.exports=AsyncStorage;
});
__d('BackAndroid',function(global, require, module, exports) {  'use strict';














function emptyFunction(){}

var BackAndroid={
exitApp:emptyFunction,
addEventListener:emptyFunction,
removeEventListener:emptyFunction};


module.exports=BackAndroid;
});
__d('CameraRoll',function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 





CameraRoll=function(){function CameraRoll(){babelHelpers.classCallCheck(this,CameraRoll);}babelHelpers.createClass(CameraRoll,null,[{key:'saveImageWithTag',value:function saveImageWithTag(





















tag,successCallback,errorCallback){
invariant(
typeof tag==='string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback&&successCallback(imageTag);},

function(errorMessage){
errorCallback&&errorCallback(errorMessage);});}},{key:'getPhotos',value:function getPhotos(












params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback==='function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback==='function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback=function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;}();



CameraRoll.GroupTypesOptions=GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions=ASSET_TYPE_OPTIONS;

module.exports=CameraRoll;
});
__d('Clipboard',function(global, require, module, exports) {  'use strict';











module.exports=require('NativeModules').Clipboard;
});
__d('ImagePickerIOS',function(global, require, module, exports) {  'use strict';












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config=babelHelpers.extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config=babelHelpers.extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports=ImagePickerIOS;
});
__d('IntentAndroid',function(global, require, module, exports) {  'use strict';











module.exports={
openURL:function(url){
console.error('IntentAndroid is not supported on iOS');}};
});
__d('LayoutAnimation',function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var UIManager=require('UIManager');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true,
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd){
configChecker({config:config},'config','LayoutAnimation.configureNext');
UIManager.configureNextLayoutAnimation(
config,onAnimationDidEnd||function(){},function(){});}



function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}};











var LayoutAnimation={














configureNext:configureNext,



create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:Presets,
easeInEaseOut:configureNext.bind(
null,Presets.easeInEaseOut),

linear:configureNext.bind(
null,Presets.linear),

spring:configureNext.bind(
null,Presets.spring)};



module.exports=LayoutAnimation;
});
__d('LinkingIOS',function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager&&
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 










































































LinkingIOS=function(){function LinkingIOS(){babelHelpers.classCallCheck(this,LinkingIOS);}babelHelpers.createClass(LinkingIOS,null,[{key:'addEventListener',value:function addEventListener(




type,handler){
invariant(
type==='url',
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);

_notifHandlers.set(handler,listener);}},{key:'removeEventListener',value:function removeEventListener(





type,handler){
invariant(
type==='url',
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'openURL',value:function openURL(





url){
invariant(
typeof url==='string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:function canOpenURL(









url,callback){
invariant(
typeof url==='string',
'Invalid url: should be a string');

invariant(
typeof callback==='function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:function popInitialURL()






{
var initialURL=_initialURL;
_initialURL=null;
return initialURL;}}]);return LinkingIOS;}();



module.exports=LinkingIOS;
});
__d('NetInfo',function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTNetInfo=NativeModules.NetInfo;

var DEVICE_CONNECTIVITY_EVENT='networkStatusDidChange';




































var _subscriptions=new Map();

var _isConnected=undefined;
if(Platform.OS==='ios'){
_isConnected=function(
reachability)
{
return reachability!=='none'&&reachability!=='unknown';};}else 

if(Platform.OS==='android'){
_isConnected=function(
connectionType)
{
return connectionType!=='NONE'&&connectionType!=='UNKNOWN';};}



var _isConnectedSubscriptions=new Map();


























































































var NetInfo={
addEventListener:function(
eventName,
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_CONNECTIVITY_EVENT,
function(appStateData){
handler(appStateData.network_info);});


_subscriptions.set(handler,listener);},


removeEventListener:function(
eventName,
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentConnectivity(
function(resp){
resolve(resp.network_info);},

reject);});},




isConnected:{
addEventListener:function(
eventName,
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler,listener);
NetInfo.addEventListener(
eventName,
listener);},



removeEventListener:function(
eventName,
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName,
listener);

_isConnectedSubscriptions.delete(handler);},


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}},




isConnectionExpensive:function(callback){
if(Platform.OS==='android'){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});}else 

{

callback(null,"Unsupported");}}};




module.exports=NetInfo;
});
__d('PushNotificationIOS',function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager&&
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 





























PushNotificationIOS=function(){babelHelpers.createClass(PushNotificationIOS,null,[{key:'presentLocalNotification',value:function presentLocalNotification(













details){
RCTPushNotificationManager.presentLocalNotification(details);}},{key:'scheduleLocalNotification',value:function scheduleLocalNotification(











details){
RCTPushNotificationManager.scheduleLocalNotification(details);}},{key:'cancelAllLocalNotifications',value:function cancelAllLocalNotifications()





{
RCTPushNotificationManager.cancelAllLocalNotifications();}},{key:'setApplicationIconBadgeNumber',value:function setApplicationIconBadgeNumber(





number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:function getApplicationIconBadgeNumber(





callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:function addEventListener(













type,handler){
invariant(
type==='notification'||type==='register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener;
if(type==='notification'){
listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}else 


if(type==='register'){
listener=RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_EVENT,
function(registrationInfo){
handler(registrationInfo.deviceToken);});}



_notifHandlers.set(handler,listener);}},{key:'requestPermissions',value:function requestPermissions(
















permissions)



{
var requestedPermissions={};
if(permissions){
requestedPermissions={
alert:!!permissions.alert,
badge:!!permissions.badge,
sound:!!permissions.sound};}else 

{
requestedPermissions={
alert:true,
badge:true,
sound:true};}


RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'abandonPermissions',value:function abandonPermissions()










{
RCTPushNotificationManager.abandonPermissions();}},{key:'checkPermissions',value:function checkPermissions(










callback){
invariant(
typeof callback==='function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:function removeEventListener(






type,handler){
invariant(
type==='notification'||type==='register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'popInitialNotification',value:function popInitialNotification()










{
var initialNotification=_initialNotification&&
new PushNotificationIOS(_initialNotification);
_initialNotification=null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;babelHelpers.classCallCheck(this,PushNotificationIOS);
this._data={};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey==='aps'){
_this._alert=notifVal.alert;
_this._sound=notifVal.sound;
_this._badgeCount=notifVal.badge;}else 
{
_this._data[notifKey]=notifVal;}});}babelHelpers.createClass(PushNotificationIOS,[{key:'getMessage',value:function getMessage()







{

return this._alert;}},{key:'getSound',value:function getSound()





{
return this._sound;}},{key:'getAlert',value:function getAlert()





{
return this._alert;}},{key:'getBadgeCount',value:function getBadgeCount()





{
return this._badgeCount;}},{key:'getData',value:function getData()





{
return this._data;}}]);return PushNotificationIOS;}();



module.exports=PushNotificationIOS;
});
__d('Settings',function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager&&RCTSettingsManager.settings,

get:function(key){
return this._settings[key];},


set:function(settings){
this._settings=babelHelpers.extends(this._settings,settings);
RCTSettingsManager.setValues(settings);},


watchKeys:function(keys,callback){
if(typeof keys==='string'){
keys=[keys];}


invariant(
Array.isArray(keys),
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys,callback:callback});
return sid;},


clearWatch:function(watchId){
if(watchId<subscriptions.length){
subscriptions[watchId]={keys:[],callback:null};}},



_sendObservations:function(body){var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key]!==newValue;
_this._settings[key]=newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(sub.keys.indexOf(key)!==-1&&sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated',
Settings._sendObservations.bind(Settings));


module.exports=Settings;
});
__d('StatusBarIOS',function(global, require, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style,animated){
animated=animated||false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation=animation||'none';
RCTStatusBarManager.setHidden(hidden,animation);},


setNetworkActivityIndicatorVisible:function(visible){
RCTStatusBarManager.setNetworkActivityIndicatorVisible(visible);}};



module.exports=StatusBarIOS;
});
__d('VibrationIOS',function(global, require, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0]===undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports=VibrationIOS;
});
__d('RCTNativeAppEventEmitter',function(global, require, module, exports) {  'use strict';












var BatchedBridge=require('BatchedBridge');
var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

BatchedBridge.registerCallableModule(
'RCTNativeAppEventEmitter',
RCTNativeAppEventEmitter);


module.exports=RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',function(global, require, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports=LinkedStateMixin;
});
__d('ReactLink',function(global, require, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value=value;
this.requestChange=requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType==='undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes={
link:createLinkTypeChecker};


module.exports=ReactLink;
});
__d('ReactStateSetters',function(global, require, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters||(component.__keySetters={});
return cache[key]||(cache[key]=createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key]=value;
component.setState(partialState);};}



ReactStateSetters.Mixin={
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports=ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',function(global, require, module, exports) {  'use strict';












var shallowCompare=require('shallowCompare');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return shallowCompare(this,nextProps,nextState);}};



module.exports=ReactComponentWithPureRenderMixin;
});
__d('shallowCompare',function(global, require, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');





function shallowCompare(instance,nextProps,nextState){
return (
!shallowEqual(instance.props,nextProps)||
!shallowEqual(instance.state,nextState));}



module.exports=shallowCompare;
});
__d('shallowEqual',function(global, require, module, exports) {  'use strict';














var hasOwnProperty=Object.prototype.hasOwnProperty;






function shallowEqual(objA,objB){
if(objA===objB){
return true;}


if(typeof objA!=='object'||objA===null||
typeof objB!=='object'||objB===null){
return false;}


var keysA=Object.keys(objA);
var keysB=Object.keys(objB);

if(keysA.length!==keysB.length){
return false;}



var bHasOwnProperty=hasOwnProperty.bind(objB);
for(var i=0;i<keysA.length;i++){
if(!bHasOwnProperty(keysA[i])||objA[keysA[i]]!==objB[keysA[i]]){
return false;}}



return true;}


module.exports=shallowEqual;
});
__d('cloneWithProps',function(global, require, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});

var didDeprecatedWarn=false;











function cloneWithProps(child,props){
if(__DEV__){
warning(
didDeprecatedWarn,
'cloneWithProps(...) is deprecated. '+
'Please use React.cloneElement instead.');

didDeprecatedWarn=true;
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is '+
'dangerous because you\'re creating a new child which will not be '+
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP)&&
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children=child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports=cloneWithProps;
});
__d('ReactPropTransferer',function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key]=value;}else 
{
props[key]=mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps){
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy&&TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey]=newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports=ReactPropTransferer;
});
__d('joinClasses',function(global, require, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className='';}

var nextClass;
var argLength=arguments.length;
if(argLength>1){
for(var ii=1;ii<argLength;ii++){
nextClass=arguments[ii];
if(nextClass){
className=(className?className+' ':'')+nextClass;}}}



return className;}


module.exports=joinClasses;
});
__d('ReactFragment',function(global, require, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactElement=require('ReactElement');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var warning=require('warning');









var numericPropertyRegex=/^\d+$/;

var warnedAboutNumeric=false;

var ReactFragment={


create:function(object){
if(typeof object!=='object'||!object||Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object. Got: %s',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement '+
'without a wrapper object.');

return object;}


invariant(
object.nodeType!==1,
'React.addons.createFragment(...): Encountered an invalid child; DOM '+
'elements are not valid children of React components.');


var result=[];

for(var key in object){
if(__DEV__){
if(!warnedAboutNumeric&&numericPropertyRegex.test(key)){
warning(
false,
'React.addons.createFragment(...): Child objects should have '+
'non-numeric keys so ordering is preserved.');

warnedAboutNumeric=true;}}


ReactChildren.mapIntoWithKeyPrefixInternal(
object[key],
result,
key,
emptyFunction.thatReturnsArgument);}



return result;}};



module.exports=ReactFragment;
});
__d('update',function(global, require, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty={}.hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x&&typeof x==='object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command]=true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. '+
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec==='object',
'update(): You provided a key path to update() that did not contain one '+
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length===1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj&&typeof mergeObj==='object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue&&typeof nextValue==='object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. '+
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. '+
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY]==='function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue=spec[COMMAND_APPLY](nextValue);}


for(var k in spec){
if(!(ALL_COMMANDS_SET.hasOwnProperty(k)&&ALL_COMMANDS_SET[k])){
nextValue[k]=update(value[k],spec[k]);}}



return nextValue;}


module.exports=update;
});
__d('ReactTestUtils',function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactDOM=require('ReactDOM');
var ReactElement=require('ReactElement');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var findDOMNode=require('findDOMNode');
var invariant=require('invariant');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}





function findAllInRenderedTreeInternal(inst,test){
if(!inst||!inst.getPublicInstance){
return [];}

var publicInst=inst.getPublicInstance();
var ret=test(publicInst)?[publicInst]:[];
var currentElement=inst._currentElement;
if(ReactTestUtils.isDOMComponent(publicInst)){
var renderedChildren=inst._renderedChildren;
var key;
for(key in renderedChildren){
if(!renderedChildren.hasOwnProperty(key)){
continue;}

ret=ret.concat(
findAllInRenderedTreeInternal(
renderedChildren[key],
test));}}else 



if(
ReactElement.isValidElement(currentElement)&&
typeof currentElement.type==='function')
{
ret=ret.concat(
findAllInRenderedTreeInternal(inst._renderedComponent,test));}


return ret;}







var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return ReactDOM.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst)&&
inst.type===convenienceConstructor);},



isDOMComponent:function(inst){
return !!(inst&&inst.nodeType===1&&inst.tagName);},


isDOMComponentElement:function(inst){
return !!(inst&&
ReactElement.isValidElement(inst)&&
!!inst.tagName);},


isCompositeComponent:function(inst){
if(ReactTestUtils.isDOMComponent(inst)){


return false;}

return inst!=null&&
typeof inst.render==='function'&&
typeof inst.setState==='function';},


isCompositeComponentWithType:function(inst,type){
if(!ReactTestUtils.isCompositeComponent(inst)){
return false;}

var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return constructor===type;},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render==='function'&&
typeof prototype.setState==='function');},



isCompositeComponentElementWithType:function(inst,type){
var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return !!(ReactTestUtils.isCompositeComponentElement(inst)&&
constructor===type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

invariant(
ReactTestUtils.isCompositeComponent(inst),
'findAllInRenderedTree(...): instance must be a composite component');

return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst),test);},







scryRenderedDOMComponentsWithClass:function(root,classNames){
if(!Array.isArray(classNames)){
classNames=classNames.split(/\s+/);}

return ReactTestUtils.findAllInRenderedTree(root,function(inst){
if(ReactTestUtils.isDOMComponent(inst)){
var className=inst.className;
if(typeof className!=='string'){

className=inst.getAttribute('class')||'';}

var classList=className.split(/\s+/);
return classNames.every(function(name){
return classList.indexOf(name)!==-1;});}


return false;});},









findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length!==1){
throw new Error('Did not find exactly one match '+
'(found: '+all.length+') for class:'+className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst)&&
inst.tagName.toUpperCase()===tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length!==1){
throw new Error('Did not find exactly one match for tag:'+tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length!==1){
throw new Error(
'Did not find exactly one match for componentType:'+componentType+
' (found '+all.length+')');}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName=mockTagName||module.mockTagName||'div';

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target=node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
findDOMNode(comp),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance=null;};


ReactShallowRenderer.prototype.getRenderOutput=function(){
return (
this._instance&&this._instance._renderedComponent&&
this._instance._renderedComponent._renderedOutput||
null);};



var NoopInternalComponent=function(element){
this._renderedOutput=element;
this._currentElement=element;};


NoopInternalComponent.prototype={

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput=element;
this._currentElement=element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render=function(element,context){
invariant(
ReactElement.isValidElement(element),
'ReactShallowRenderer render(): Invalid component element.%s',
typeof element==='function'?
' Instead of passing a component class, make sure to instantiate '+
'it by passing it to React.createElement.':
'');

invariant(
typeof element.type!=='string',
'ReactShallowRenderer render(): Shallow rendering works only with custom '+
'components, not primitives (%s). Instead of calling `.render(el)` and '+
'inspecting the rendered output, look at `el.props` directly instead.',
element.type);


if(!context){
context=emptyObject;}

var transaction=ReactUpdates.ReactReconcileTransaction.getPooled(false);
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount=function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render=function(element,transaction,context){
if(this._instance){
this._instance.receiveComponent(element,transaction,context);}else 
{
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance=instance;}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node=findDOMNode(domComponentOrNode);}else 
if(domComponentOrNode.tagName){
node=domComponentOrNode;}


var dispatchConfig=
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

var fakeNativeEvent=new Event();
fakeNativeEvent.target=node;


var event=new SyntheticEvent(
dispatchConfig,
ReactMount.getID(node),
fakeNativeEvent,
node);

assign(event,eventData);

if(dispatchConfig.phasedRegistrationNames){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
{
EventPropagators.accumulateDirectDispatches(event);}


ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue(true);});};}




function buildSimulators(){
ReactTestUtils.Simulate={};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs){




ReactTestUtils.Simulate[eventType]=makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder=function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName=function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





Object.keys(topLevelTypes).forEach(function(eventType){

var convenienceName=eventType.indexOf('top')===0?
eventType.charAt(3).toLowerCase()+eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName]=
makeNativeSimulator(eventType);});


module.exports=ReactTestUtils;
});
__d('ReactDOM',function(global, require, module, exports) {  'use strict';







var ReactUpdates=require('ReactUpdates');


var ReactDOM={
unstable_batchedUpdates:ReactUpdates.batchedUpdates};


module.exports=ReactDOM;
});
__d('findDOMNode',function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner!==null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing getDOMNode or findDOMNode inside its render(). '+
'render() should be a pure function of props and state. It should '+
'never access something that requires stale data from the previous '+
'render, such as refs. Move this logic to componentDidMount and '+
'componentDidUpdate instead.',
owner.getName()||'A component');

owner._warnedAboutRefsInRender=true;}}


if(componentOrElement==null){
return null;}

if(componentOrElement.nodeType===1){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render==null||
typeof componentOrElement.render!=='function',
'findDOMNode was called on an unmounted component.');

invariant(
false,
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
Object.keys(componentOrElement));}



module.exports=findDOMNode;
});
__d('sofTokyo/app/components/navigation/SitePanel.js',function(global, require, module, exports) {  var _apslReactNativeButton=require("apsl-react-native-button/Button.js");var _apslReactNativeButton2=babelHelpers.interopRequireDefault(_apslReactNativeButton);



var React=require('react-native/Libraries/react-native/react-native.js');
var NavigationSubject=require("sofTokyo/app/services/NavigationManager.js").getStream();
var SidebarSubject=require("sofTokyo/app/services/Streams.js").getStream("Sidebar");var 





View=

React.View;var StyleSheet=React.StyleSheet;

var Icon=require('FontAwesome');


var styles=StyleSheet.create({
buttonsContainer:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


container:{
flex:1,
flexDirection:'column'},


login:{
borderColor:'#00b9f7',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3},


loginText:{
color:"#00b9f7",
fontSize:25},


registerText:{
color:"#8e44ad",
fontSize:25},

register:{
borderColor:'#8e44ad',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3}});var 




SitePanel=function(_React$Component){babelHelpers.inherits(SitePanel,_React$Component);

function SitePanel(props){babelHelpers.classCallCheck(this,SitePanel);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(SitePanel).call(this,
props));

_this.state={
User:{},
navigating:false};return _this;}babelHelpers.createClass(SitePanel,[{key:"login",value:function login()



{
NavigationSubject.onNext({path:'login'});
SidebarSubject.onNext('close');
return;}},{key:"render",value:function render()



{

return (
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.buttonsContainer,collapse:true},
React.createElement(_apslReactNativeButton2.default,{style:styles.login,textStyle:styles.loginText,onPress:this.login},"Login"),


React.createElement(_apslReactNativeButton2.default,{style:styles.register,textStyle:styles.registerText},"Register"))));}}]);return SitePanel;}(React.Component);








SitePanel.StateProps={
User:React.PropTypes.object};


module.exports=SitePanel;
});
__d('apsl-react-native-button/Button.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=








React.View;var TouchableOpacity=React.TouchableOpacity;var Text=React.Text;var StyleSheet=React.StyleSheet;var PropTypes=React.PropTypes;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var ProgressBarAndroid=React.ProgressBarAndroid;var TouchableNativeFeedback=React.TouchableNativeFeedback;var Platform=React.Platform;
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');

var Button=React.createClass({displayName:'Button',
propTypes:babelHelpers.extends({},
{textStyle:StyleSheetPropType(TextStylePropTypes),
children:PropTypes.string.isRequired,
isLoading:PropTypes.bool,
isDisabled:PropTypes.bool,
activityIndicatorColor:PropTypes.string,
onPress:PropTypes.func,
onLongPress:PropTypes.func,
onPressIn:PropTypes.func,
onPressOut:PropTypes.func}),


_renderInnerText:function(){
if(this.props.isLoading){
if(Platform.OS!=='android'){
return (
React.createElement(ActivityIndicatorIOS,{
animating:true,
size:'small',
style:styles.spinner,
color:this.props.activityIndicatorColor||'black'}));}else 


{
return (
React.createElement(ProgressBarAndroid,{
style:[{
height:20},
styles.spinner],
styleAttr:'Inverse',
color:this.props.activityIndicatorColor||'black'}));}}




return (
React.createElement(Text,{style:[styles.textButton,this.props.textStyle]},
this.props.children));},




render:function(){

var touchableProps={
onPress:this.props.onPress,
onPressIn:this.props.onPressIn,
onPressOut:this.props.onPressOut,
onLongPress:this.props.onLongPress};

if(this.props.isDisabled===true||this.props.isLoading===true){
return (
React.createElement(View,{style:[styles.button,this.props.style,styles.opacity]},
this._renderInnerText()));}else 


{
if(Platform.OS!=='android'){
return (
React.createElement(TouchableOpacity,babelHelpers.extends({},touchableProps,{
style:[styles.button,this.props.style]}),
this._renderInnerText()));}else 


{
return (
React.createElement(TouchableNativeFeedback,babelHelpers.extends({},touchableProps,{
background:TouchableNativeFeedback.Ripple()}),
React.createElement(Text,{style:[styles.button,this.props.style]},
this._renderInnerText())));}}}});








var styles=StyleSheet.create({
button:{
height:44,
flexDirection:'row',
borderWidth:1,
borderRadius:8,
marginBottom:10,
alignSelf:'stretch',
justifyContent:'center'},

textButton:{
fontSize:18,
alignSelf:'center'},

spinner:{
alignSelf:'center'},

opacity:{
opacity:0.5}});



module.exports=Button;
});
__d('sofTokyo/app/services/NavigationManager.js',function(global, require, module, exports) {  var _Api=require('sofTokyo/app/utils/api/Api.d.js');



var Rx=require('rx/dist/rx.all.js');
var React=require('react-native/Libraries/react-native/react-native.js');
var Pages=require('sofTokyo/app/pages/Pages.d.js');
var Login=require('sofTokyo/app/pages/Login.js');

var storage=require('sofTokyo/app/services/Storage.js').getInstance();

var toggle=require('sofTokyo/app/components/actions/ToggleMenu.js');
var navigation=require('sofTokyo/app/components/navigation/Navigation.d.js');var 

StyleSheet=
React.StyleSheet;



var styles=StyleSheet.create({
facebookHeader:{
backgroundColor:"#2A406B"}});var 



NavigatorService=function(){
function NavigatorService(){var _arguments=arguments,_this=this;babelHelpers.classCallCheck(this,NavigatorService);
this.manager='';

this.NavigationSubject=new Rx.Subject();



this.startRoute={
leftCorner:navigation.back,
component:Pages.feed,
rightCorner:toggle};


this.routerProxy=function(){
console.warn(Object.keys(_arguments));
_this.NavigationSubject.onNext.apply(_this,_arguments);};


this.NavigationSubject.subscribe(function(route){
switch(route.path){
case 'back':
_this.manager.toBack(route.params);
break;
case 'login':
_this.manager.toRoute({
leftCorner:navigation.back,
"component":Pages.login,
"headerStyle":styles.facebookHeader});

break;

case 'register':
_this.manager.toRoute({
leftCorner:navigation.back,
"component":Pages.register,
"headerStyle":styles.facebookHeader});

break;

case 'feed':
_this.manager.toRoute({
leftCorner:navigation.back,
component:Pages.feed,
rightCorner:toggle});

break;

case 'search':
_this.manager.toRoute({
leftCorner:navigation.back,
"component":Pages.search,
"headerStyle":toggle});

break;
case 'post':
_this.manager.toRoute({
leftCorner:navigation.back,
"component":Pages.post,
"passProps":route.params,
rightCorner:toggle});

break;


case 'searchResults':
_this.manager.toRoute({
leftCorner:navigation.back,
"component":Pages.searchResults,
"passProps":route.params,
rightCorner:toggle});

break;

case 'profile':
_this.manager.toRoute({
"leftCorner":navigation.back,
"component":Pages.profile,
"rightCorner":toggle,
"passProps":route.params});

break;

case 'schools':
_Api.api.schools.LoadSchools();
_this.manager.toRoute({
leftCorner:navigation.back,
"component":Pages.schools,
rightCorner:toggle});}});}babelHelpers.createClass(NavigatorService,[{key:'getFirstRoute',value:function getFirstRoute()






{
_Api.api.posts.LoadPosts(1);
return this.startRoute;}},{key:'setNavigationManager',value:function setNavigationManager(


managertoSet){
if(!this.manager)this.manager=managertoSet;}},{key:'getNavigationManager',value:function getNavigationManager(


managertoSet){
if(!this.manager)this.manager=managertoSet;}},{key:'getStream',value:function getStream()


{
return this.NavigationSubject;}}]);return NavigatorService;}();



var service=new NavigatorService();

module.exports=service;
});
__d('sofTokyo/app/utils/api/Api.d.js',function(global, require, module, exports) {  Object.defineProperty(exports,"__esModule",{value:true});


var api=exports.api={
post:require("sofTokyo/app/utils/api/PostApi.js"),
posts:require("sofTokyo/app/utils/api/PostsApi.js"),
schools:require("sofTokyo/app/utils/api/SchoolsApi.js"),
user:require("sofTokyo/app/utils/api/UserApi.js")};
});
__d('sofTokyo/app/utils/api/PostApi.js',function(global, require, module, exports) {  var 


apiConsts=require("sofTokyo/app/constants/api.js").apiConsts;
var PostStream=require("sofTokyo/app/services/Streams.js").getStream("Post");
var productsEndpoint=apiConsts.apiEndpoint+'products/';


var api={
RetrievePost:function _callee(postId,userId){var 

response;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return regeneratorRuntime.awrap(fetch(productsEndpoint+'product/'+postId+'/'+userId));case 3:response=_context.sent;
PostStream.onNext(JSON.parse(response._bodyInit));_context.next=10;break;case 7:_context.prev=7;_context.t0=_context["catch"](0);

console.warn(_context.t0);case 10:case "end":return _context.stop();}}},null,this,[[0,7]]);},



LikePost:function _callee2(postId,subject){var 

actionResult;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{actionResult=fetch(apiConsts.apiEndpoint+'metadata/likes/product',{
method:'POST',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({
productId:postId})});


subject.onNext(JSON.parse(actionResult._bodyInit));}
catch(error){
console.warn(error);}case 1:case "end":return _context2.stop();}}},null,this);},



sendComment:function _callee3(comment,postId,subject){var 

cookie,
commentPost;return regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return regeneratorRuntime.awrap(storage.load({key:'cookies'}));case 3:cookie=_context3.sent;_context3.next=6;return regeneratorRuntime.awrap(fetch(productsEndpoint+'comments/create',{
method:'POST',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({
cookie:cookie.data,
productId:postId,
content:comment})}));case 6:commentPost=_context3.sent;


subject.onNext({type:'comment',data:JSON.parse(commentPost._bodyInit)});_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3["catch"](0);

console.warn(_context3.t0);case 13:case "end":return _context3.stop();}}},null,this,[[0,10]]);}};




module.exports=api;
});
__d('sofTokyo/app/constants/api.js',function(global, require, module, exports) {  Object.defineProperty(exports,"__esModule",{value:true});



var apiConsts=exports.apiConsts={
main:'https://sof-tokyo-node-server.herokuapp.com/',
apiEndpoint:'https://sof-tokyo-node-server.herokuapp.com/api/'};
});
__d('sofTokyo/app/services/Streams.js',function(global, require, module, exports) {  Object.defineProperty(exports,"__esModule",{value:true});



var Rx=require("rx/dist/rx.all.js");var 

StreamsService=exports.StreamsService=function(){

function StreamsService(){babelHelpers.classCallCheck(this,StreamsService);
this.streams={};
this.generalListeners=[];}babelHelpers.createClass(StreamsService,[{key:"setStream",value:function setStream(


streamKey,stream){
if(!this.streams[streamKey]){
this.streams[streamKey]=stream;
this.generalListeners.forEach(function(listener){
listener.onNext(stream);});}}},{key:"setGeneralListener",value:function setGeneralListener(




thread){
this.generalListeners.push(thread);}},{key:"getGeneralListener",value:function getGeneralListener()


{}},{key:"destroyStream",value:function destroyStream(



streamKey){
delete this.streams[streamKey];
return;}},{key:"getStream",value:function getStream(


streamKey){
if(!this.streams[streamKey]){
this.setStream(streamKey,new Rx.Subject());}

return this.streams[streamKey];}},{key:"getStreams",value:function getStreams()



{
return this.streams;}}]);return StreamsService;}();


var service=new StreamsService();
module.exports=service;
});
__d('rx/dist/rx.all.js',function(global, require, module, exports) {  ;

(function(undefined){

var objectTypes={
'function':true,
'object':true};


function checkGlobal(value){
return value&&value.Object===Object?value:null;}


var freeExports=objectTypes[typeof exports]&&exports&&!exports.nodeType?exports:null;
var freeModule=objectTypes[typeof module]&&module&&!module.nodeType?module:null;
var freeGlobal=checkGlobal(freeExports&&freeModule&&typeof global==='object'&&global);
var freeSelf=checkGlobal(objectTypes[typeof self]&&self);
var freeWindow=checkGlobal(objectTypes[typeof window]&&window);
var moduleExports=freeModule&&freeModule.exports===freeExports?freeExports:null;
var thisGlobal=checkGlobal(objectTypes[typeof this]&&this);
var root=freeGlobal||freeWindow!==(thisGlobal&&thisGlobal.window)&&freeWindow||freeSelf||thisGlobal||Function('return this')();

var Rx={
internals:{},
config:{
Promise:root.Promise},

helpers:{}};



var noop=Rx.helpers.noop=function(){},
identity=Rx.helpers.identity=function(x){return x;},
defaultNow=Rx.helpers.defaultNow=Date.now,
defaultComparer=Rx.helpers.defaultComparer=function(x,y){return isEqual(x,y);},
defaultSubComparer=Rx.helpers.defaultSubComparer=function(x,y){return x>y?1:x<y?-1:0;},
defaultKeySerializer=Rx.helpers.defaultKeySerializer=function(x){return x.toString();},
defaultError=Rx.helpers.defaultError=function(err){throw err;},
isPromise=Rx.helpers.isPromise=function(p){return !!p&&typeof p.subscribe!=='function'&&typeof p.then==='function';},
isFunction=Rx.helpers.isFunction=function(){

var isFn=function(value){
return typeof value=='function'||false;};



if(isFn(/x/)){
isFn=function(value){
return typeof value=='function'&&toString.call(value)=='[object Function]';};}



return isFn;}();


function cloneArray(arr){for(var a=[],i=0,len=arr.length;i<len;i++){a.push(arr[i]);}return a;}

var errorObj={e:{}};

function tryCatcherGen(tryCatchTarget){
return function tryCatcher(){
try{
return tryCatchTarget.apply(this,arguments);}
catch(e){
errorObj.e=e;
return errorObj;}};}




var tryCatch=Rx.internals.tryCatch=function tryCatch(fn){
if(!isFunction(fn)){throw new TypeError('fn must be a function');}
return tryCatcherGen(fn);};


function thrower(e){
throw e;}


Rx.config.longStackSupport=false;
var hasStacks=false,stacks=tryCatch(function(){throw new Error();})();
hasStacks=!!stacks.e&&!!stacks.e.stack;


var rStartingLine=captureLine(),rFileName;

var STACK_JUMP_SEPARATOR='From previous event:';

function makeStackTraceLong(error,observable){


if(hasStacks&&
observable.stack&&
typeof error==='object'&&
error!==null&&
error.stack&&
error.stack.indexOf(STACK_JUMP_SEPARATOR)===-1)
{
var stacks=[];
for(var o=observable;!!o;o=o.source){
if(o.stack){
stacks.unshift(o.stack);}}


stacks.unshift(error.stack);

var concatedStacks=stacks.join('\n'+STACK_JUMP_SEPARATOR+'\n');
error.stack=filterStackString(concatedStacks);}}



function filterStackString(stackString){
var lines=stackString.split('\n'),desiredLines=[];
for(var i=0,len=lines.length;i<len;i++){
var line=lines[i];

if(!isInternalFrame(line)&&!isNodeFrame(line)&&line){
desiredLines.push(line);}}


return desiredLines.join('\n');}


function isInternalFrame(stackLine){
var fileNameAndLineNumber=getFileNameAndLineNumber(stackLine);
if(!fileNameAndLineNumber){
return false;}

var fileName=fileNameAndLineNumber[0],lineNumber=fileNameAndLineNumber[1];

return fileName===rFileName&&
lineNumber>=rStartingLine&&
lineNumber<=rEndingLine;}


function isNodeFrame(stackLine){
return stackLine.indexOf('(module.js:')!==-1||
stackLine.indexOf('(node.js:')!==-1;}


function captureLine(){
if(!hasStacks){return;}

try{
throw new Error();}
catch(e){
var lines=e.stack.split('\n');
var firstLine=lines[0].indexOf('@')>0?lines[1]:lines[2];
var fileNameAndLineNumber=getFileNameAndLineNumber(firstLine);
if(!fileNameAndLineNumber){return;}

rFileName=fileNameAndLineNumber[0];
return fileNameAndLineNumber[1];}}



function getFileNameAndLineNumber(stackLine){

var attempt1=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
if(attempt1){return [attempt1[1],Number(attempt1[2])];}


var attempt2=/at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
if(attempt2){return [attempt2[1],Number(attempt2[2])];}


var attempt3=/.*@(.+):(\d+)$/.exec(stackLine);
if(attempt3){return [attempt3[1],Number(attempt3[2])];}}


var EmptyError=Rx.EmptyError=function(){
this.message='Sequence contains no elements.';
Error.call(this);};

EmptyError.prototype=Object.create(Error.prototype);
EmptyError.prototype.name='EmptyError';

var ObjectDisposedError=Rx.ObjectDisposedError=function(){
this.message='Object has been disposed';
Error.call(this);};

ObjectDisposedError.prototype=Object.create(Error.prototype);
ObjectDisposedError.prototype.name='ObjectDisposedError';

var ArgumentOutOfRangeError=Rx.ArgumentOutOfRangeError=function(){
this.message='Argument out of range';
Error.call(this);};

ArgumentOutOfRangeError.prototype=Object.create(Error.prototype);
ArgumentOutOfRangeError.prototype.name='ArgumentOutOfRangeError';

var NotSupportedError=Rx.NotSupportedError=function(message){
this.message=message||'This operation is not supported';
Error.call(this);};

NotSupportedError.prototype=Object.create(Error.prototype);
NotSupportedError.prototype.name='NotSupportedError';

var NotImplementedError=Rx.NotImplementedError=function(message){
this.message=message||'This operation is not implemented';
Error.call(this);};

NotImplementedError.prototype=Object.create(Error.prototype);
NotImplementedError.prototype.name='NotImplementedError';

var notImplemented=Rx.helpers.notImplemented=function(){
throw new NotImplementedError();};


var notSupported=Rx.helpers.notSupported=function(){
throw new NotSupportedError();};



var $iterator$=typeof Symbol==='function'&&Symbol.iterator||
'_es6shim_iterator_';

if(root.Set&&typeof new root.Set()['@@iterator']==='function'){
$iterator$='@@iterator';}


var doneEnumerator=Rx.doneEnumerator={done:true,value:undefined};

var isIterable=Rx.helpers.isIterable=function(o){
return o&&o[$iterator$]!==undefined;};


var isArrayLike=Rx.helpers.isArrayLike=function(o){
return o&&o.length!==undefined;};


Rx.helpers.iterator=$iterator$;

var bindCallback=Rx.internals.bindCallback=function(func,thisArg,argCount){
if(typeof thisArg==='undefined'){return func;}
switch(argCount){
case 0:
return function(){
return func.call(thisArg);};

case 1:
return function(arg){
return func.call(thisArg,arg);};

case 2:
return function(value,index){
return func.call(thisArg,value,index);};

case 3:
return function(value,index,collection){
return func.call(thisArg,value,index,collection);};}



return function(){
return func.apply(thisArg,arguments);};};




var dontEnums=['toString',
'toLocaleString',
'valueOf',
'hasOwnProperty',
'isPrototypeOf',
'propertyIsEnumerable',
'constructor'],
dontEnumsLength=dontEnums.length;

var argsTag='[object Arguments]',
arrayTag='[object Array]',
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
funcTag='[object Function]',
mapTag='[object Map]',
numberTag='[object Number]',
objectTag='[object Object]',
regexpTag='[object RegExp]',
setTag='[object Set]',
stringTag='[object String]',
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]',
float32Tag='[object Float32Array]',
float64Tag='[object Float64Array]',
int8Tag='[object Int8Array]',
int16Tag='[object Int16Array]',
int32Tag='[object Int32Array]',
uint8Tag='[object Uint8Array]',
uint8ClampedTag='[object Uint8ClampedArray]',
uint16Tag='[object Uint16Array]',
uint32Tag='[object Uint32Array]';

var typedArrayTags={};
typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=
typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=
typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=
typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=
typedArrayTags[uint32Tag]=true;
typedArrayTags[argsTag]=typedArrayTags[arrayTag]=
typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=
typedArrayTags[dateTag]=typedArrayTags[errorTag]=
typedArrayTags[funcTag]=typedArrayTags[mapTag]=
typedArrayTags[numberTag]=typedArrayTags[objectTag]=
typedArrayTags[regexpTag]=typedArrayTags[setTag]=
typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;

var objectProto=Object.prototype,
hasOwnProperty=objectProto.hasOwnProperty,
objToString=objectProto.toString,
MAX_SAFE_INTEGER=Math.pow(2,53)-1;

var keys=Object.keys||function(){
var hasOwnProperty=Object.prototype.hasOwnProperty,
hasDontEnumBug=!{toString:null}.propertyIsEnumerable('toString'),
dontEnums=[
'toString',
'toLocaleString',
'valueOf',
'hasOwnProperty',
'isPrototypeOf',
'propertyIsEnumerable',
'constructor'],

dontEnumsLength=dontEnums.length;

return function(obj){
if(typeof obj!=='object'&&(typeof obj!=='function'||obj===null)){
throw new TypeError('Object.keys called on non-object');}


var result=[],prop,i;

for(prop in obj){
if(hasOwnProperty.call(obj,prop)){
result.push(prop);}}



if(hasDontEnumBug){
for(i=0;i<dontEnumsLength;i++){
if(hasOwnProperty.call(obj,dontEnums[i])){
result.push(dontEnums[i]);}}}



return result;};}();



function equalObjects(object,other,equalFunc,isLoose,stackA,stackB){
var objProps=keys(object),
objLength=objProps.length,
othProps=keys(other),
othLength=othProps.length;

if(objLength!==othLength&&!isLoose){
return false;}

var index=objLength,key;
while(index--){
key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other,key))){
return false;}}


var skipCtor=isLoose;
while(++index<objLength){
key=objProps[index];
var objValue=object[key],
othValue=other[key],
result;

if(!(result===undefined?equalFunc(objValue,othValue,isLoose,stackA,stackB):result)){
return false;}

skipCtor||(skipCtor=key==='constructor');}

if(!skipCtor){
var objCtor=object.constructor,
othCtor=other.constructor;

if(objCtor!==othCtor&&
'constructor' in object&&'constructor' in other&&
!(typeof objCtor==='function'&&objCtor instanceof objCtor&&
typeof othCtor==='function'&&othCtor instanceof othCtor)){
return false;}}


return true;}


function equalByTag(object,other,tag){
switch(tag){
case boolTag:
case dateTag:
return +object===+other;

case errorTag:
return object.name===other.name&&object.message===other.message;

case numberTag:
return object!==+object?
other!==+other:
object===+other;

case regexpTag:
case stringTag:
return object===other+'';}

return false;}


var isObject=Rx.internals.isObject=function(value){
var type=typeof value;
return !!value&&(type==='object'||type==='function');};


function isObjectLike(value){
return !!value&&typeof value==='object';}


function isLength(value){
return typeof value==='number'&&value>-1&&value%1===0&&value<=MAX_SAFE_INTEGER;}


var isHostObject=function(){
try{
Object({'toString':0}+'');}
catch(e){
return function(){return false;};}

return function(value){
return typeof value.toString!=='function'&&typeof (value+'')==='string';};}();



function isTypedArray(value){
return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[objToString.call(value)];}


var isArray=Array.isArray||function(value){
return isObjectLike(value)&&isLength(value.length)&&objToString.call(value)===arrayTag;};


function arraySome(array,predicate){
var index=-1,
length=array.length;

while(++index<length){
if(predicate(array[index],index,array)){
return true;}}


return false;}


function equalArrays(array,other,equalFunc,isLoose,stackA,stackB){
var index=-1,
arrLength=array.length,
othLength=other.length;

if(arrLength!==othLength&&!(isLoose&&othLength>arrLength)){
return false;}


while(++index<arrLength){
var arrValue=array[index],
othValue=other[index],
result;

if(result!==undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other,function(othValue){
return arrValue===othValue||equalFunc(arrValue,othValue,isLoose,stackA,stackB);}))
{
return false;}}else 

if(!(arrValue===othValue||equalFunc(arrValue,othValue,isLoose,stackA,stackB))){
return false;}}


return true;}


function baseIsEqualDeep(object,other,equalFunc,isLoose,stackA,stackB){
var objIsArr=isArray(object),
othIsArr=isArray(other),
objTag=arrayTag,
othTag=arrayTag;

if(!objIsArr){
objTag=objToString.call(object);
if(objTag===argsTag){
objTag=objectTag;}else 
if(objTag!==objectTag){
objIsArr=isTypedArray(object);}}


if(!othIsArr){
othTag=objToString.call(other);
if(othTag===argsTag){
othTag=objectTag;}}


var objIsObj=objTag===objectTag&&!isHostObject(object),
othIsObj=othTag===objectTag&&!isHostObject(other),
isSameTag=objTag===othTag;

if(isSameTag&&!(objIsArr||objIsObj)){
return equalByTag(object,other,objTag);}

if(!isLoose){
var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),
othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');

if(objIsWrapped||othIsWrapped){
return equalFunc(objIsWrapped?object.value():object,othIsWrapped?other.value():other,isLoose,stackA,stackB);}}


if(!isSameTag){
return false;}



stackA||(stackA=[]);
stackB||(stackB=[]);

var length=stackA.length;
while(length--){
if(stackA[length]===object){
return stackB[length]===other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object,other,equalFunc,isLoose,stackA,stackB);

stackA.pop();
stackB.pop();

return result;}


function baseIsEqual(value,other,isLoose,stackA,stackB){
if(value===other){
return true;}

if(value==null||other==null||!isObject(value)&&!isObjectLike(other)){
return value!==value&&other!==other;}

return baseIsEqualDeep(value,other,baseIsEqual,isLoose,stackA,stackB);}


var isEqual=Rx.internals.isEqual=function(value,other){
return baseIsEqual(value,other);};


var hasProp={}.hasOwnProperty,
slice=Array.prototype.slice;

var inherits=Rx.internals.inherits=function(child,parent){
function __(){this.constructor=child;}
__.prototype=parent.prototype;
child.prototype=new __();};


var addProperties=Rx.internals.addProperties=function(obj){
for(var sources=[],i=1,len=arguments.length;i<len;i++){sources.push(arguments[i]);}
for(var idx=0,ln=sources.length;idx<ln;idx++){
var source=sources[idx];
for(var prop in source){
obj[prop]=source[prop];}}};





var addRef=Rx.internals.addRef=function(xs,r){
return new AnonymousObservable(function(observer){
return new BinaryDisposable(r.getDisposable(),xs.subscribe(observer));});};



function arrayInitialize(count,factory){
var a=new Array(count);
for(var i=0;i<count;i++){
a[i]=factory();}

return a;}


function IndexedItem(id,value){
this.id=id;
this.value=value;}


IndexedItem.prototype.compareTo=function(other){
var c=this.value.compareTo(other.value);
c===0&&(c=this.id-other.id);
return c;};


var PriorityQueue=Rx.internals.PriorityQueue=function(capacity){
this.items=new Array(capacity);
this.length=0;};


var priorityProto=PriorityQueue.prototype;
priorityProto.isHigherPriority=function(left,right){
return this.items[left].compareTo(this.items[right])<0;};


priorityProto.percolate=function(index){
if(index>=this.length||index<0){return;}
var parent=index-1>>1;
if(parent<0||parent===index){return;}
if(this.isHigherPriority(index,parent)){
var temp=this.items[index];
this.items[index]=this.items[parent];
this.items[parent]=temp;
this.percolate(parent);}};



priorityProto.heapify=function(index){
+index||(index=0);
if(index>=this.length||index<0){return;}
var left=2*index+1,
right=2*index+2,
first=index;
if(left<this.length&&this.isHigherPriority(left,first)){
first=left;}

if(right<this.length&&this.isHigherPriority(right,first)){
first=right;}

if(first!==index){
var temp=this.items[index];
this.items[index]=this.items[first];
this.items[first]=temp;
this.heapify(first);}};



priorityProto.peek=function(){return this.items[0].value;};

priorityProto.removeAt=function(index){
this.items[index]=this.items[--this.length];
this.items[this.length]=undefined;
this.heapify();};


priorityProto.dequeue=function(){
var result=this.peek();
this.removeAt(0);
return result;};


priorityProto.enqueue=function(item){
var index=this.length++;
this.items[index]=new IndexedItem(PriorityQueue.count++,item);
this.percolate(index);};


priorityProto.remove=function(item){
for(var i=0;i<this.length;i++){
if(this.items[i].value===item){
this.removeAt(i);
return true;}}


return false;};

PriorityQueue.count=0;





var CompositeDisposable=Rx.CompositeDisposable=function(){
var args=[],i,len;
if(Array.isArray(arguments[0])){
args=arguments[0];}else 
{
len=arguments.length;
args=new Array(len);
for(i=0;i<len;i++){args[i]=arguments[i];}}

this.disposables=args;
this.isDisposed=false;
this.length=args.length;};


var CompositeDisposablePrototype=CompositeDisposable.prototype;





CompositeDisposablePrototype.add=function(item){
if(this.isDisposed){
item.dispose();}else 
{
this.disposables.push(item);
this.length++;}};








CompositeDisposablePrototype.remove=function(item){
var shouldDispose=false;
if(!this.isDisposed){
var idx=this.disposables.indexOf(item);
if(idx!==-1){
shouldDispose=true;
this.disposables.splice(idx,1);
this.length--;
item.dispose();}}


return shouldDispose;};





CompositeDisposablePrototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
var len=this.disposables.length,currentDisposables=new Array(len);
for(var i=0;i<len;i++){currentDisposables[i]=this.disposables[i];}
this.disposables=[];
this.length=0;

for(i=0;i<len;i++){
currentDisposables[i].dispose();}}};








var Disposable=Rx.Disposable=function(action){
this.isDisposed=false;
this.action=action||noop;};



Disposable.prototype.dispose=function(){
if(!this.isDisposed){
this.action();
this.isDisposed=true;}};








var disposableCreate=Disposable.create=function(action){return new Disposable(action);};




var disposableEmpty=Disposable.empty={dispose:noop};






var isDisposable=Disposable.isDisposable=function(d){
return d&&isFunction(d.dispose);};


var checkDisposed=Disposable.checkDisposed=function(disposable){
if(disposable.isDisposed){throw new ObjectDisposedError();}};


var disposableFixup=Disposable._fixup=function(result){
return isDisposable(result)?result:disposableEmpty;};



var SingleAssignmentDisposable=Rx.SingleAssignmentDisposable=function(){
this.isDisposed=false;
this.current=null;};

SingleAssignmentDisposable.prototype.getDisposable=function(){
return this.current;};

SingleAssignmentDisposable.prototype.setDisposable=function(value){
if(this.current){throw new Error('Disposable has already been assigned');}
var shouldDispose=this.isDisposed;
!shouldDispose&&(this.current=value);
shouldDispose&&value&&value.dispose();};

SingleAssignmentDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
var old=this.current;
this.current=null;
old&&old.dispose();}};




var SerialDisposable=Rx.SerialDisposable=function(){
this.isDisposed=false;
this.current=null;};

SerialDisposable.prototype.getDisposable=function(){
return this.current;};

SerialDisposable.prototype.setDisposable=function(value){
var shouldDispose=this.isDisposed;
if(!shouldDispose){
var old=this.current;
this.current=value;}

old&&old.dispose();
shouldDispose&&value&&value.dispose();};

SerialDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
var old=this.current;
this.current=null;}

old&&old.dispose();};


var BinaryDisposable=Rx.BinaryDisposable=function(first,second){
this._first=first;
this._second=second;
this.isDisposed=false;};


BinaryDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
var old1=this._first;
this._first=null;
old1&&old1.dispose();
var old2=this._second;
this._second=null;
old2&&old2.dispose();}};



var NAryDisposable=Rx.NAryDisposable=function(disposables){
this._disposables=disposables;
this.isDisposed=false;};


NAryDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
for(var i=0,len=this._disposables.length;i<len;i++){
this._disposables[i].dispose();}

this._disposables.length=0;}};






var RefCountDisposable=Rx.RefCountDisposable=function(){

function InnerDisposable(disposable){
this.disposable=disposable;
this.disposable.count++;
this.isInnerDisposed=false;}


InnerDisposable.prototype.dispose=function(){
if(!this.disposable.isDisposed&&!this.isInnerDisposed){
this.isInnerDisposed=true;
this.disposable.count--;
if(this.disposable.count===0&&this.disposable.isPrimaryDisposed){
this.disposable.isDisposed=true;
this.disposable.underlyingDisposable.dispose();}}};









function RefCountDisposable(disposable){
this.underlyingDisposable=disposable;
this.isDisposed=false;
this.isPrimaryDisposed=false;
this.count=0;}





RefCountDisposable.prototype.dispose=function(){
if(!this.isDisposed&&!this.isPrimaryDisposed){
this.isPrimaryDisposed=true;
if(this.count===0){
this.isDisposed=true;
this.underlyingDisposable.dispose();}}};








RefCountDisposable.prototype.getDisposable=function(){
return this.isDisposed?disposableEmpty:new InnerDisposable(this);};


return RefCountDisposable;}();


function ScheduledDisposable(scheduler,disposable){
this.scheduler=scheduler;
this.disposable=disposable;
this.isDisposed=false;}


function scheduleItem(s,self){
if(!self.isDisposed){
self.isDisposed=true;
self.disposable.dispose();}}



ScheduledDisposable.prototype.dispose=function(){
this.scheduler.schedule(this,scheduleItem);};


var ScheduledItem=Rx.internals.ScheduledItem=function(scheduler,state,action,dueTime,comparer){
this.scheduler=scheduler;
this.state=state;
this.action=action;
this.dueTime=dueTime;
this.comparer=comparer||defaultSubComparer;
this.disposable=new SingleAssignmentDisposable();};


ScheduledItem.prototype.invoke=function(){
this.disposable.setDisposable(this.invokeCore());};


ScheduledItem.prototype.compareTo=function(other){
return this.comparer(this.dueTime,other.dueTime);};


ScheduledItem.prototype.isCancelled=function(){
return this.disposable.isDisposed;};


ScheduledItem.prototype.invokeCore=function(){
return disposableFixup(this.action(this.scheduler,this.state));};



var Scheduler=Rx.Scheduler=function(){

function Scheduler(){}


Scheduler.isScheduler=function(s){
return s instanceof Scheduler;};


var schedulerProto=Scheduler.prototype;







schedulerProto.schedule=function(state,action){
throw new NotImplementedError();};









schedulerProto.scheduleFuture=function(state,dueTime,action){
var dt=dueTime;
dt instanceof Date&&(dt=dt-this.now());
dt=Scheduler.normalize(dt);

if(dt===0){return this.schedule(state,action);}

return this._scheduleFuture(state,dt,action);};


schedulerProto._scheduleFuture=function(state,dueTime,action){
throw new NotImplementedError();};



Scheduler.now=defaultNow;


Scheduler.prototype.now=defaultNow;






Scheduler.normalize=function(timeSpan){
timeSpan<0&&(timeSpan=0);
return timeSpan;};


return Scheduler;}();


var normalizeTime=Scheduler.normalize,isScheduler=Scheduler.isScheduler;

(function(schedulerProto){

function invokeRecImmediate(scheduler,pair){
var state=pair[0],action=pair[1],group=new CompositeDisposable();
action(state,innerAction);
return group;

function innerAction(state2){
var isAdded=false,isDone=false;

var d=scheduler.schedule(state2,scheduleWork);
if(!isDone){
group.add(d);
isAdded=true;}


function scheduleWork(_,state3){
if(isAdded){
group.remove(d);}else 
{
isDone=true;}

action(state3,innerAction);
return disposableEmpty;}}}




function invokeRecDate(scheduler,pair){
var state=pair[0],action=pair[1],group=new CompositeDisposable();
action(state,innerAction);
return group;

function innerAction(state2,dueTime1){
var isAdded=false,isDone=false;

var d=scheduler.scheduleFuture(state2,dueTime1,scheduleWork);
if(!isDone){
group.add(d);
isAdded=true;}


function scheduleWork(_,state3){
if(isAdded){
group.remove(d);}else 
{
isDone=true;}

action(state3,innerAction);
return disposableEmpty;}}}










schedulerProto.scheduleRecursive=function(state,action){
return this.schedule([state,action],invokeRecImmediate);};









schedulerProto.scheduleRecursiveFuture=function(state,dueTime,action){
return this.scheduleFuture([state,action],dueTime,invokeRecDate);};})(


Scheduler.prototype);

(function(schedulerProto){








schedulerProto.schedulePeriodic=function(state,period,action){
if(typeof root.setInterval==='undefined'){throw new NotSupportedError();}
period=normalizeTime(period);
var s=state,id=root.setInterval(function(){s=action(s);},period);
return disposableCreate(function(){root.clearInterval(id);});};})(


Scheduler.prototype);

(function(schedulerProto){





schedulerProto.catchError=schedulerProto['catch']=function(handler){
return new CatchScheduler(this,handler);};})(

Scheduler.prototype);

var SchedulePeriodicRecursive=Rx.internals.SchedulePeriodicRecursive=function(){
function createTick(self){
return function tick(command,recurse){
recurse(0,self._period);
var state=tryCatch(self._action)(self._state);
if(state===errorObj){
self._cancel.dispose();
thrower(state.e);}

self._state=state;};}



function SchedulePeriodicRecursive(scheduler,state,period,action){
this._scheduler=scheduler;
this._state=state;
this._period=period;
this._action=action;}


SchedulePeriodicRecursive.prototype.start=function(){
var d=new SingleAssignmentDisposable();
this._cancel=d;
d.setDisposable(this._scheduler.scheduleRecursiveFuture(0,this._period,createTick(this)));

return d;};


return SchedulePeriodicRecursive;}();



var ImmediateScheduler=function(__super__){
inherits(ImmediateScheduler,__super__);
function ImmediateScheduler(){
__super__.call(this);}


ImmediateScheduler.prototype.schedule=function(state,action){
return disposableFixup(action(this,state));};


return ImmediateScheduler;}(
Scheduler);

var immediateScheduler=Scheduler.immediate=new ImmediateScheduler();




var CurrentThreadScheduler=function(__super__){
var queue;

function runTrampoline(){
while(queue.length>0){
var item=queue.dequeue();
!item.isCancelled()&&item.invoke();}}



inherits(CurrentThreadScheduler,__super__);
function CurrentThreadScheduler(){
__super__.call(this);}


CurrentThreadScheduler.prototype.schedule=function(state,action){
var si=new ScheduledItem(this,state,action,this.now());

if(!queue){
queue=new PriorityQueue(4);
queue.enqueue(si);

var result=tryCatch(runTrampoline)();
queue=null;
if(result===errorObj){thrower(result.e);}}else 
{
queue.enqueue(si);}

return si.disposable;};


CurrentThreadScheduler.prototype.scheduleRequired=function(){return !queue;};

return CurrentThreadScheduler;}(
Scheduler);

var currentThreadScheduler=Scheduler.currentThread=new CurrentThreadScheduler();

var scheduleMethod,clearMethod;

var localTimer=function(){
var localSetTimeout,localClearTimeout=noop;
if(!!root.setTimeout){
localSetTimeout=root.setTimeout;
localClearTimeout=root.clearTimeout;}else 
if(!!root.WScript){
localSetTimeout=function(fn,time){
root.WScript.Sleep(time);
fn();};}else 

{
throw new NotSupportedError();}


return {
setTimeout:localSetTimeout,
clearTimeout:localClearTimeout};}();


var localSetTimeout=localTimer.setTimeout,
localClearTimeout=localTimer.clearTimeout;

(function(){

var nextHandle=1,tasksByHandle={},currentlyRunning=false;

clearMethod=function(handle){
delete tasksByHandle[handle];};


function runTask(handle){
if(currentlyRunning){
localSetTimeout(function(){runTask(handle);},0);}else 
{
var task=tasksByHandle[handle];
if(task){
currentlyRunning=true;
var result=tryCatch(task)();
clearMethod(handle);
currentlyRunning=false;
if(result===errorObj){thrower(result.e);}}}}




var reNative=new RegExp('^'+
String(toString).
replace(/[.*+?^${}()|[\]\\]/g,'\\$&').
replace(/toString| for [^\]]+/g,'.*?')+'$');


var setImmediate=typeof (setImmediate=freeGlobal&&moduleExports&&freeGlobal.setImmediate)=='function'&&
!reNative.test(setImmediate)&&setImmediate;

function postMessageSupported(){

if(!root.postMessage||root.importScripts){return false;}
var isAsync=false,oldHandler=root.onmessage;

root.onmessage=function(){isAsync=true;};
root.postMessage('','*');
root.onmessage=oldHandler;

return isAsync;}



if(isFunction(setImmediate)){
scheduleMethod=function(action){
var id=nextHandle++;
tasksByHandle[id]=action;
setImmediate(function(){runTask(id);});

return id;};}else 

if(typeof process!=='undefined'&&{}.toString.call(process)==='[object process]'){
scheduleMethod=function(action){
var id=nextHandle++;
tasksByHandle[id]=action;
process.nextTick(function(){runTask(id);});

return id;};}else 

if(postMessageSupported()){
var MSG_PREFIX='ms.rx.schedule'+Math.random();

var onGlobalPostMessage=function(event){

if(typeof event.data==='string'&&event.data.substring(0,MSG_PREFIX.length)===MSG_PREFIX){
runTask(event.data.substring(MSG_PREFIX.length));}};



root.addEventListener('message',onGlobalPostMessage,false);

scheduleMethod=function(action){
var id=nextHandle++;
tasksByHandle[id]=action;
root.postMessage(MSG_PREFIX+currentId,'*');
return id;};}else 

if(!!root.MessageChannel){
var channel=new root.MessageChannel();

channel.port1.onmessage=function(e){runTask(e.data);};

scheduleMethod=function(action){
var id=nextHandle++;
tasksByHandle[id]=action;
channel.port2.postMessage(id);
return id;};}else 

if('document' in root&&'onreadystatechange' in root.document.createElement('script')){

scheduleMethod=function(action){
var scriptElement=root.document.createElement('script');
var id=nextHandle++;
tasksByHandle[id]=action;

scriptElement.onreadystatechange=function(){
runTask(id);
scriptElement.onreadystatechange=null;
scriptElement.parentNode.removeChild(scriptElement);
scriptElement=null;};

root.document.documentElement.appendChild(scriptElement);
return id;};}else 


{
scheduleMethod=function(action){
var id=nextHandle++;
tasksByHandle[id]=action;
localSetTimeout(function(){
runTask(id);},
0);

return id;};}})();







var DefaultScheduler=function(__super__){
inherits(DefaultScheduler,__super__);
function DefaultScheduler(){
__super__.call(this);}


function scheduleAction(disposable,action,scheduler,state){
return function schedule(){
disposable.setDisposable(Disposable._fixup(action(scheduler,state)));};}



function ClearDisposable(id){
this._id=id;
this.isDisposed=false;}


ClearDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
clearMethod(this._id);}};



function LocalClearDisposable(id){
this._id=id;
this.isDisposed=false;}


LocalClearDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
localClearTimeout(this._id);}};



DefaultScheduler.prototype.schedule=function(state,action){
var disposable=new SingleAssignmentDisposable(),
id=scheduleMethod(scheduleAction(disposable,action,this,state));
return new BinaryDisposable(disposable,new ClearDisposable(id));};


DefaultScheduler.prototype._scheduleFuture=function(state,dueTime,action){
if(dueTime===0){return this.schedule(state,action);}
var disposable=new SingleAssignmentDisposable(),
id=localSetTimeout(scheduleAction(disposable,action,this,state),dueTime);
return new BinaryDisposable(disposable,new LocalClearDisposable(id));};


return DefaultScheduler;}(
Scheduler);

var defaultScheduler=Scheduler['default']=Scheduler.async=new DefaultScheduler();

var CatchScheduler=function(__super__){
inherits(CatchScheduler,__super__);

function CatchScheduler(scheduler,handler){
this._scheduler=scheduler;
this._handler=handler;
this._recursiveOriginal=null;
this._recursiveWrapper=null;
__super__.call(this);}


CatchScheduler.prototype.schedule=function(state,action){
return this._scheduler.schedule(state,this._wrap(action));};


CatchScheduler.prototype._scheduleFuture=function(state,dueTime,action){
return this._scheduler.schedule(state,dueTime,this._wrap(action));};


CatchScheduler.prototype.now=function(){return this._scheduler.now();};

CatchScheduler.prototype._clone=function(scheduler){
return new CatchScheduler(scheduler,this._handler);};


CatchScheduler.prototype._wrap=function(action){
var parent=this;
return function(self,state){
var res=tryCatch(action)(parent._getRecursiveWrapper(self),state);
if(res===errorObj){
if(!parent._handler(res.e)){thrower(res.e);}
return disposableEmpty;}

return disposableFixup(res);};};



CatchScheduler.prototype._getRecursiveWrapper=function(scheduler){
if(this._recursiveOriginal!==scheduler){
this._recursiveOriginal=scheduler;
var wrapper=this._clone(scheduler);
wrapper._recursiveOriginal=scheduler;
wrapper._recursiveWrapper=wrapper;
this._recursiveWrapper=wrapper;}

return this._recursiveWrapper;};


CatchScheduler.prototype.schedulePeriodic=function(state,period,action){
var self=this,failed=false,d=new SingleAssignmentDisposable();

d.setDisposable(this._scheduler.schedulePeriodic(state,period,function(state1){
if(failed){return null;}
var res=tryCatch(action)(state1);
if(res===errorObj){
failed=true;
if(!self._handler(res.e)){thrower(res.e);}
d.dispose();
return null;}

return res;}));


return d;};


return CatchScheduler;}(
Scheduler);




var Notification=Rx.Notification=function(){
function Notification(){}



Notification.prototype._accept=function(onNext,onError,onCompleted){
throw new NotImplementedError();};


Notification.prototype._acceptObserver=function(onNext,onError,onCompleted){
throw new NotImplementedError();};









Notification.prototype.accept=function(observerOrOnNext,onError,onCompleted){
return observerOrOnNext&&typeof observerOrOnNext==='object'?
this._acceptObserver(observerOrOnNext):
this._accept(observerOrOnNext,onError,onCompleted);};









Notification.prototype.toObservable=function(scheduler){
var self=this;
isScheduler(scheduler)||(scheduler=immediateScheduler);
return new AnonymousObservable(function(o){
return scheduler.schedule(self,function(_,notification){
notification._acceptObserver(o);
notification.kind==='N'&&o.onCompleted();});});};




return Notification;}();


var OnNextNotification=function(__super__){
inherits(OnNextNotification,__super__);
function OnNextNotification(value){
this.value=value;
this.kind='N';}


OnNextNotification.prototype._accept=function(onNext){
return onNext(this.value);};


OnNextNotification.prototype._acceptObserver=function(o){
return o.onNext(this.value);};


OnNextNotification.prototype.toString=function(){
return 'OnNext('+this.value+')';};


return OnNextNotification;}(
Notification);

var OnErrorNotification=function(__super__){
inherits(OnErrorNotification,__super__);
function OnErrorNotification(error){
this.error=error;
this.kind='E';}


OnErrorNotification.prototype._accept=function(onNext,onError){
return onError(this.error);};


OnErrorNotification.prototype._acceptObserver=function(o){
return o.onError(this.error);};


OnErrorNotification.prototype.toString=function(){
return 'OnError('+this.error+')';};


return OnErrorNotification;}(
Notification);

var OnCompletedNotification=function(__super__){
inherits(OnCompletedNotification,__super__);
function OnCompletedNotification(){
this.kind='C';}


OnCompletedNotification.prototype._accept=function(onNext,onError,onCompleted){
return onCompleted();};


OnCompletedNotification.prototype._acceptObserver=function(o){
return o.onCompleted();};


OnCompletedNotification.prototype.toString=function(){
return 'OnCompleted()';};


return OnCompletedNotification;}(
Notification);






var notificationCreateOnNext=Notification.createOnNext=function(value){
return new OnNextNotification(value);};







var notificationCreateOnError=Notification.createOnError=function(error){
return new OnErrorNotification(error);};






var notificationCreateOnCompleted=Notification.createOnCompleted=function(){
return new OnCompletedNotification();};





var Observer=Rx.Observer=function(){};





Observer.prototype.toNotifier=function(){
var observer=this;
return function(n){return n.accept(observer);};};






Observer.prototype.asObserver=function(){
var self=this;
return new AnonymousObserver(
function(x){self.onNext(x);},
function(err){self.onError(err);},
function(){self.onCompleted();});};







Observer.prototype.checked=function(){return new CheckedObserver(this);};








var observerCreate=Observer.create=function(onNext,onError,onCompleted){
onNext||(onNext=noop);
onError||(onError=defaultError);
onCompleted||(onCompleted=noop);
return new AnonymousObserver(onNext,onError,onCompleted);};







Observer.fromNotifier=function(handler,thisArg){
var cb=bindCallback(handler,thisArg,1);
return new AnonymousObserver(function(x){
return cb(notificationCreateOnNext(x));},
function(e){
return cb(notificationCreateOnError(e));},
function(){
return cb(notificationCreateOnCompleted());});};








Observer.prototype.notifyOn=function(scheduler){
return new ObserveOnObserver(scheduler,this);};


Observer.prototype.makeSafe=function(disposable){
return new AnonymousSafeObserver(this._onNext,this._onError,this._onCompleted,disposable);};






var AbstractObserver=Rx.internals.AbstractObserver=function(__super__){
inherits(AbstractObserver,__super__);




function AbstractObserver(){
this.isStopped=false;}



AbstractObserver.prototype.next=notImplemented;
AbstractObserver.prototype.error=notImplemented;
AbstractObserver.prototype.completed=notImplemented;





AbstractObserver.prototype.onNext=function(value){
!this.isStopped&&this.next(value);};






AbstractObserver.prototype.onError=function(error){
if(!this.isStopped){
this.isStopped=true;
this.error(error);}};






AbstractObserver.prototype.onCompleted=function(){
if(!this.isStopped){
this.isStopped=true;
this.completed();}};






AbstractObserver.prototype.dispose=function(){this.isStopped=true;};

AbstractObserver.prototype.fail=function(e){
if(!this.isStopped){
this.isStopped=true;
this.error(e);
return true;}


return false;};


return AbstractObserver;}(
Observer);




var AnonymousObserver=Rx.AnonymousObserver=function(__super__){
inherits(AnonymousObserver,__super__);







function AnonymousObserver(onNext,onError,onCompleted){
__super__.call(this);
this._onNext=onNext;
this._onError=onError;
this._onCompleted=onCompleted;}






AnonymousObserver.prototype.next=function(value){
this._onNext(value);};






AnonymousObserver.prototype.error=function(error){
this._onError(error);};





AnonymousObserver.prototype.completed=function(){
this._onCompleted();};


return AnonymousObserver;}(
AbstractObserver);

var CheckedObserver=function(__super__){
inherits(CheckedObserver,__super__);

function CheckedObserver(observer){
__super__.call(this);
this._observer=observer;
this._state=0;}


var CheckedObserverPrototype=CheckedObserver.prototype;

CheckedObserverPrototype.onNext=function(value){
this.checkAccess();
var res=tryCatch(this._observer.onNext).call(this._observer,value);
this._state=0;
res===errorObj&&thrower(res.e);};


CheckedObserverPrototype.onError=function(err){
this.checkAccess();
var res=tryCatch(this._observer.onError).call(this._observer,err);
this._state=2;
res===errorObj&&thrower(res.e);};


CheckedObserverPrototype.onCompleted=function(){
this.checkAccess();
var res=tryCatch(this._observer.onCompleted).call(this._observer);
this._state=2;
res===errorObj&&thrower(res.e);};


CheckedObserverPrototype.checkAccess=function(){
if(this._state===1){throw new Error('Re-entrancy detected');}
if(this._state===2){throw new Error('Observer completed');}
if(this._state===0){this._state=1;}};


return CheckedObserver;}(
Observer);

var ScheduledObserver=Rx.internals.ScheduledObserver=function(__super__){
inherits(ScheduledObserver,__super__);

function ScheduledObserver(scheduler,observer){
__super__.call(this);
this.scheduler=scheduler;
this.observer=observer;
this.isAcquired=false;
this.hasFaulted=false;
this.queue=[];
this.disposable=new SerialDisposable();}


function enqueueNext(observer,x){return function(){observer.onNext(x);};}
function enqueueError(observer,e){return function(){observer.onError(e);};}
function enqueueCompleted(observer){return function(){observer.onCompleted();};}

ScheduledObserver.prototype.next=function(x){
this.queue.push(enqueueNext(this.observer,x));};


ScheduledObserver.prototype.error=function(e){
this.queue.push(enqueueError(this.observer,e));};


ScheduledObserver.prototype.completed=function(){
this.queue.push(enqueueCompleted(this.observer));};



function scheduleMethod(state,recurse){
var work;
if(state.queue.length>0){
work=state.queue.shift();}else 
{
state.isAcquired=false;
return;}

var res=tryCatch(work)();
if(res===errorObj){
state.queue=[];
state.hasFaulted=true;
return thrower(res.e);}

recurse(state);}


ScheduledObserver.prototype.ensureActive=function(){
var isOwner=false;
if(!this.hasFaulted&&this.queue.length>0){
isOwner=!this.isAcquired;
this.isAcquired=true;}

isOwner&&
this.disposable.setDisposable(this.scheduler.scheduleRecursive(this,scheduleMethod));};


ScheduledObserver.prototype.dispose=function(){
__super__.prototype.dispose.call(this);
this.disposable.dispose();};


return ScheduledObserver;}(
AbstractObserver);

var ObserveOnObserver=function(__super__){
inherits(ObserveOnObserver,__super__);

function ObserveOnObserver(scheduler,observer,cancel){
__super__.call(this,scheduler,observer);
this._cancel=cancel;}


ObserveOnObserver.prototype.next=function(value){
__super__.prototype.next.call(this,value);
this.ensureActive();};


ObserveOnObserver.prototype.error=function(e){
__super__.prototype.error.call(this,e);
this.ensureActive();};


ObserveOnObserver.prototype.completed=function(){
__super__.prototype.completed.call(this);
this.ensureActive();};


ObserveOnObserver.prototype.dispose=function(){
__super__.prototype.dispose.call(this);
this._cancel&&this._cancel.dispose();
this._cancel=null;};


return ObserveOnObserver;}(
ScheduledObserver);

var observableProto;




var Observable=Rx.Observable=function(){

function makeSubscribe(self,subscribe){
return function(o){
var oldOnError=o.onError;
o.onError=function(e){
makeStackTraceLong(e,self);
oldOnError.call(o,e);};


return subscribe.call(self,o);};}



function Observable(){
if(Rx.config.longStackSupport&&hasStacks){
var oldSubscribe=this._subscribe;
var e=tryCatch(thrower)(new Error()).e;
this.stack=e.stack.substring(e.stack.indexOf('\n')+1);
this._subscribe=makeSubscribe(this,oldSubscribe);}}



observableProto=Observable.prototype;






Observable.isObservable=function(o){
return o&&isFunction(o.subscribe);};









observableProto.subscribe=observableProto.forEach=function(oOrOnNext,onError,onCompleted){
return this._subscribe(typeof oOrOnNext==='object'?
oOrOnNext:
observerCreate(oOrOnNext,onError,onCompleted));};








observableProto.subscribeOnNext=function(onNext,thisArg){
return this._subscribe(observerCreate(typeof thisArg!=='undefined'?function(x){onNext.call(thisArg,x);}:onNext));};








observableProto.subscribeOnError=function(onError,thisArg){
return this._subscribe(observerCreate(null,typeof thisArg!=='undefined'?function(e){onError.call(thisArg,e);}:onError));};








observableProto.subscribeOnCompleted=function(onCompleted,thisArg){
return this._subscribe(observerCreate(null,null,typeof thisArg!=='undefined'?function(){onCompleted.call(thisArg);}:onCompleted));};


return Observable;}();


var ObservableBase=Rx.ObservableBase=function(__super__){
inherits(ObservableBase,__super__);

function fixSubscriber(subscriber){
return subscriber&&isFunction(subscriber.dispose)?subscriber:
isFunction(subscriber)?disposableCreate(subscriber):disposableEmpty;}


function setDisposable(s,state){
var ado=state[0],self=state[1];
var sub=tryCatch(self.subscribeCore).call(self,ado);
if(sub===errorObj&&!ado.fail(errorObj.e)){thrower(errorObj.e);}
ado.setDisposable(fixSubscriber(sub));}


function ObservableBase(){
__super__.call(this);}


ObservableBase.prototype._subscribe=function(o){
var ado=new AutoDetachObserver(o),state=[ado,this];

if(currentThreadScheduler.scheduleRequired()){
currentThreadScheduler.schedule(state,setDisposable);}else 
{
setDisposable(null,state);}

return ado;};


ObservableBase.prototype.subscribeCore=notImplemented;

return ObservableBase;}(
Observable);

var FlatMapObservable=Rx.FlatMapObservable=function(__super__){

inherits(FlatMapObservable,__super__);

function FlatMapObservable(source,selector,resultSelector,thisArg){
this.resultSelector=isFunction(resultSelector)?resultSelector:null;
this.selector=bindCallback(isFunction(selector)?selector:function(){return selector;},thisArg,3);
this.source=source;
__super__.call(this);}


FlatMapObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new InnerObserver(o,this.selector,this.resultSelector,this));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(observer,selector,resultSelector,source){
this.i=0;
this.selector=selector;
this.resultSelector=resultSelector;
this.source=source;
this.o=observer;
AbstractObserver.call(this);}


InnerObserver.prototype._wrapResult=function(result,x,i){
return this.resultSelector?
result.map(function(y,i2){return this.resultSelector(x,y,i,i2);},this):
result;};


InnerObserver.prototype.next=function(x){
var i=this.i++;
var result=tryCatch(this.selector)(x,i,this.source);
if(result===errorObj){return this.o.onError(result.e);}

isPromise(result)&&(result=observableFromPromise(result));
(isArrayLike(result)||isIterable(result))&&(result=Observable.from(result));
this.o.onNext(this._wrapResult(result,x,i));};


InnerObserver.prototype.error=function(e){this.o.onError(e);};

InnerObserver.prototype.completed=function(){this.o.onCompleted();};

return FlatMapObservable;}(

ObservableBase);

var Enumerable=Rx.internals.Enumerable=function(){};

function IsDisposedDisposable(state){
this._s=state;
this.isDisposed=false;}


IsDisposedDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
this._s.isDisposed=true;}};



var ConcatEnumerableObservable=function(__super__){
inherits(ConcatEnumerableObservable,__super__);
function ConcatEnumerableObservable(sources){
this.sources=sources;
__super__.call(this);}


function scheduleMethod(state,recurse){
if(state.isDisposed){return;}
var currentItem=tryCatch(state.e.next).call(state.e);
if(currentItem===errorObj){return state.o.onError(currentItem.e);}
if(currentItem.done){return state.o.onCompleted();}


var currentValue=currentItem.value;
isPromise(currentValue)&&(currentValue=observableFromPromise(currentValue));

var d=new SingleAssignmentDisposable();
state.subscription.setDisposable(d);
d.setDisposable(currentValue.subscribe(new InnerObserver(state,recurse)));}


ConcatEnumerableObservable.prototype.subscribeCore=function(o){
var subscription=new SerialDisposable();
var state={
isDisposed:false,
o:o,
subscription:subscription,
e:this.sources[$iterator$]()};


var cancelable=currentThreadScheduler.scheduleRecursive(state,scheduleMethod);
return new NAryDisposable([subscription,cancelable,new IsDisposedDisposable(state)]);};


function InnerObserver(state,recurse){
this._state=state;
this._recurse=recurse;
AbstractObserver.call(this);}


inherits(InnerObserver,AbstractObserver);

InnerObserver.prototype.next=function(x){this._state.o.onNext(x);};
InnerObserver.prototype.error=function(e){this._state.o.onError(e);};
InnerObserver.prototype.completed=function(){this._recurse(this._state);};

return ConcatEnumerableObservable;}(
ObservableBase);

Enumerable.prototype.concat=function(){
return new ConcatEnumerableObservable(this);};


var CatchErrorObservable=function(__super__){
function CatchErrorObservable(sources){
this.sources=sources;
__super__.call(this);}


inherits(CatchErrorObservable,__super__);

function scheduleMethod(state,recurse){
if(state.isDisposed){return;}
var currentItem=tryCatch(state.e.next).call(state.e);
if(currentItem===errorObj){return state.o.onError(currentItem.e);}
if(currentItem.done){return state.lastError!==null?state.o.onError(state.lastError):state.o.onCompleted();}

var currentValue=currentItem.value;
isPromise(currentValue)&&(currentValue=observableFromPromise(currentValue));

var d=new SingleAssignmentDisposable();
state.subscription.setDisposable(d);
d.setDisposable(currentValue.subscribe(new InnerObserver(state,recurse)));}


CatchErrorObservable.prototype.subscribeCore=function(o){
var subscription=new SerialDisposable();
var state={
isDisposed:false,
e:this.sources[$iterator$](),
subscription:subscription,
lastError:null,
o:o};


var cancelable=currentThreadScheduler.scheduleRecursive(state,scheduleMethod);
return new NAryDisposable([subscription,cancelable,new IsDisposedDisposable(state)]);};


function InnerObserver(state,recurse){
this._state=state;
this._recurse=recurse;
AbstractObserver.call(this);}


inherits(InnerObserver,AbstractObserver);

InnerObserver.prototype.next=function(x){this._state.o.onNext(x);};
InnerObserver.prototype.error=function(e){this._state.lastError=e;this._recurse(this._state);};
InnerObserver.prototype.completed=function(){this._state.o.onCompleted();};

return CatchErrorObservable;}(
ObservableBase);

Enumerable.prototype.catchError=function(){
return new CatchErrorObservable(this);};


Enumerable.prototype.catchErrorWhen=function(notificationHandler){
var sources=this;
return new AnonymousObservable(function(o){
var exceptions=new Subject(),
notifier=new Subject(),
handled=notificationHandler(exceptions),
notificationDisposable=handled.subscribe(notifier);

var e=sources[$iterator$]();

var state={isDisposed:false},
lastError,
subscription=new SerialDisposable();
var cancelable=currentThreadScheduler.scheduleRecursive(null,function(_,self){
if(state.isDisposed){return;}
var currentItem=tryCatch(e.next).call(e);
if(currentItem===errorObj){return o.onError(currentItem.e);}

if(currentItem.done){
if(lastError){
o.onError(lastError);}else 
{
o.onCompleted();}

return;}



var currentValue=currentItem.value;
isPromise(currentValue)&&(currentValue=observableFromPromise(currentValue));

var outer=new SingleAssignmentDisposable();
var inner=new SingleAssignmentDisposable();
subscription.setDisposable(new BinaryDisposable(inner,outer));
outer.setDisposable(currentValue.subscribe(
function(x){o.onNext(x);},
function(exn){
inner.setDisposable(notifier.subscribe(self,function(ex){
o.onError(ex);},
function(){
o.onCompleted();}));


exceptions.onNext(exn);},

function(){o.onCompleted();}));});


return new NAryDisposable([notificationDisposable,subscription,cancelable,new IsDisposedDisposable(state)]);});};



var RepeatEnumerable=function(__super__){
inherits(RepeatEnumerable,__super__);
function RepeatEnumerable(v,c){
this.v=v;
this.c=c==null?-1:c;}


RepeatEnumerable.prototype[$iterator$]=function(){
return new RepeatEnumerator(this);};


function RepeatEnumerator(p){
this.v=p.v;
this.l=p.c;}


RepeatEnumerator.prototype.next=function(){
if(this.l===0){return doneEnumerator;}
if(this.l>0){this.l--;}
return {done:false,value:this.v};};


return RepeatEnumerable;}(
Enumerable);

var enumerableRepeat=Enumerable.repeat=function(value,repeatCount){
return new RepeatEnumerable(value,repeatCount);};


var OfEnumerable=function(__super__){
inherits(OfEnumerable,__super__);
function OfEnumerable(s,fn,thisArg){
this.s=s;
this.fn=fn?bindCallback(fn,thisArg,3):null;}

OfEnumerable.prototype[$iterator$]=function(){
return new OfEnumerator(this);};


function OfEnumerator(p){
this.i=-1;
this.s=p.s;
this.l=this.s.length;
this.fn=p.fn;}


OfEnumerator.prototype.next=function(){
return ++this.i<this.l?
{done:false,value:!this.fn?this.s[this.i]:this.fn(this.s[this.i],this.i,this.s)}:
doneEnumerator;};


return OfEnumerable;}(
Enumerable);

var enumerableOf=Enumerable.of=function(source,selector,thisArg){
return new OfEnumerable(source,selector,thisArg);};


var ObserveOnObservable=function(__super__){
inherits(ObserveOnObservable,__super__);
function ObserveOnObservable(source,s){
this.source=source;
this._s=s;
__super__.call(this);}


ObserveOnObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new ObserveOnObserver(this._s,o));};


return ObserveOnObservable;}(
ObservableBase);










observableProto.observeOn=function(scheduler){
return new ObserveOnObservable(this,scheduler);};


var SubscribeOnObservable=function(__super__){
inherits(SubscribeOnObservable,__super__);
function SubscribeOnObservable(source,s){
this.source=source;
this._s=s;
__super__.call(this);}


function scheduleMethod(scheduler,state){
var source=state[0],d=state[1],o=state[2];
d.setDisposable(new ScheduledDisposable(scheduler,source.subscribe(o)));}


SubscribeOnObservable.prototype.subscribeCore=function(o){
var m=new SingleAssignmentDisposable(),d=new SerialDisposable();
d.setDisposable(m);
m.setDisposable(this._s.schedule([this.source,d,o],scheduleMethod));
return d;};


return SubscribeOnObservable;}(
ObservableBase);











observableProto.subscribeOn=function(scheduler){
return new SubscribeOnObservable(this,scheduler);};


var FromPromiseObservable=function(__super__){
inherits(FromPromiseObservable,__super__);
function FromPromiseObservable(p,s){
this._p=p;
this._s=s;
__super__.call(this);}


function scheduleNext(s,state){
var o=state[0],data=state[1];
o.onNext(data);
o.onCompleted();}


function scheduleError(s,state){
var o=state[0],err=state[1];
o.onError(err);}


FromPromiseObservable.prototype.subscribeCore=function(o){
var sad=new SingleAssignmentDisposable(),self=this;

this._p.
then(function(data){
sad.setDisposable(self._s.schedule([o,data],scheduleNext));},
function(err){
sad.setDisposable(self._s.schedule([o,err],scheduleError));});


return sad;};


return FromPromiseObservable;}(
ObservableBase);






var observableFromPromise=Observable.fromPromise=function(promise,scheduler){
scheduler||(scheduler=defaultScheduler);
return new FromPromiseObservable(promise,scheduler);};













observableProto.toPromise=function(promiseCtor){
promiseCtor||(promiseCtor=Rx.config.Promise);
if(!promiseCtor){throw new NotSupportedError('Promise type not provided nor in Rx.config.Promise');}
var source=this;
return new promiseCtor(function(resolve,reject){

var value;
source.subscribe(function(v){
value=v;},
reject,function(){
resolve(value);});});};




var ToArrayObservable=function(__super__){
inherits(ToArrayObservable,__super__);
function ToArrayObservable(source){
this.source=source;
__super__.call(this);}


ToArrayObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new InnerObserver(o));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o){
this.o=o;
this.a=[];
AbstractObserver.call(this);}


InnerObserver.prototype.next=function(x){this.a.push(x);};
InnerObserver.prototype.error=function(e){this.o.onError(e);};
InnerObserver.prototype.completed=function(){this.o.onNext(this.a);this.o.onCompleted();};

return ToArrayObservable;}(
ObservableBase);





observableProto.toArray=function(){
return new ToArrayObservable(this);};











Observable.create=function(subscribe,parent){
return new AnonymousObservable(subscribe,parent);};


var Defer=function(__super__){
inherits(Defer,__super__);
function Defer(factory){
this._f=factory;
__super__.call(this);}


Defer.prototype.subscribeCore=function(o){
var result=tryCatch(this._f)();
if(result===errorObj){return observableThrow(result.e).subscribe(o);}
isPromise(result)&&(result=observableFromPromise(result));
return result.subscribe(o);};


return Defer;}(
ObservableBase);









var observableDefer=Observable.defer=function(observableFactory){
return new Defer(observableFactory);};


var EmptyObservable=function(__super__){
inherits(EmptyObservable,__super__);
function EmptyObservable(scheduler){
this.scheduler=scheduler;
__super__.call(this);}


EmptyObservable.prototype.subscribeCore=function(observer){
var sink=new EmptySink(observer,this.scheduler);
return sink.run();};


function EmptySink(observer,scheduler){
this.observer=observer;
this.scheduler=scheduler;}


function scheduleItem(s,state){
state.onCompleted();
return disposableEmpty;}


EmptySink.prototype.run=function(){
var state=this.observer;
return this.scheduler===immediateScheduler?
scheduleItem(null,state):
this.scheduler.schedule(state,scheduleItem);};


return EmptyObservable;}(
ObservableBase);

var EMPTY_OBSERVABLE=new EmptyObservable(immediateScheduler);










var observableEmpty=Observable.empty=function(scheduler){
isScheduler(scheduler)||(scheduler=immediateScheduler);
return scheduler===immediateScheduler?EMPTY_OBSERVABLE:new EmptyObservable(scheduler);};


var FromObservable=function(__super__){
inherits(FromObservable,__super__);
function FromObservable(iterable,fn,scheduler){
this._iterable=iterable;
this._fn=fn;
this._scheduler=scheduler;
__super__.call(this);}


function createScheduleMethod(o,it,fn){
return function loopRecursive(i,recurse){
var next=tryCatch(it.next).call(it);
if(next===errorObj){return o.onError(next.e);}
if(next.done){return o.onCompleted();}

var result=next.value;

if(isFunction(fn)){
result=tryCatch(fn)(result,i);
if(result===errorObj){return o.onError(result.e);}}


o.onNext(result);
recurse(i+1);};}



FromObservable.prototype.subscribeCore=function(o){
var list=Object(this._iterable),
it=getIterable(list);

return this._scheduler.scheduleRecursive(0,createScheduleMethod(o,it,this._fn));};


return FromObservable;}(
ObservableBase);

var maxSafeInteger=Math.pow(2,53)-1;

function StringIterable(s){
this._s=s;}


StringIterable.prototype[$iterator$]=function(){
return new StringIterator(this._s);};


function StringIterator(s){
this._s=s;
this._l=s.length;
this._i=0;}


StringIterator.prototype[$iterator$]=function(){
return this;};


StringIterator.prototype.next=function(){
return this._i<this._l?{done:false,value:this._s.charAt(this._i++)}:doneEnumerator;};


function ArrayIterable(a){
this._a=a;}


ArrayIterable.prototype[$iterator$]=function(){
return new ArrayIterator(this._a);};


function ArrayIterator(a){
this._a=a;
this._l=toLength(a);
this._i=0;}


ArrayIterator.prototype[$iterator$]=function(){
return this;};


ArrayIterator.prototype.next=function(){
return this._i<this._l?{done:false,value:this._a[this._i++]}:doneEnumerator;};


function numberIsFinite(value){
return typeof value==='number'&&root.isFinite(value);}


function isNan(n){
return n!==n;}


function getIterable(o){
var i=o[$iterator$],it;
if(!i&&typeof o==='string'){
it=new StringIterable(o);
return it[$iterator$]();}

if(!i&&o.length!==undefined){
it=new ArrayIterable(o);
return it[$iterator$]();}

if(!i){throw new TypeError('Object is not iterable');}
return o[$iterator$]();}


function sign(value){
var number=+value;
if(number===0){return number;}
if(isNaN(number)){return number;}
return number<0?-1:1;}


function toLength(o){
var len=+o.length;
if(isNaN(len)){return 0;}
if(len===0||!numberIsFinite(len)){return len;}
len=sign(len)*Math.floor(Math.abs(len));
if(len<=0){return 0;}
if(len>maxSafeInteger){return maxSafeInteger;}
return len;}









var observableFrom=Observable.from=function(iterable,mapFn,thisArg,scheduler){
if(iterable==null){
throw new Error('iterable cannot be null.');}

if(mapFn&&!isFunction(mapFn)){
throw new Error('mapFn when provided must be a function');}

if(mapFn){
var mapper=bindCallback(mapFn,thisArg,2);}

isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new FromObservable(iterable,mapper,scheduler);};


var FromArrayObservable=function(__super__){
inherits(FromArrayObservable,__super__);
function FromArrayObservable(args,scheduler){
this._args=args;
this._scheduler=scheduler;
__super__.call(this);}


function scheduleMethod(o,args){
var len=args.length;
return function loopRecursive(i,recurse){
if(i<len){
o.onNext(args[i]);
recurse(i+1);}else 
{
o.onCompleted();}};}




FromArrayObservable.prototype.subscribeCore=function(o){
return this._scheduler.scheduleRecursive(0,scheduleMethod(o,this._args));};


return FromArrayObservable;}(
ObservableBase);







var observableFromArray=Observable.fromArray=function(array,scheduler){
isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new FromArrayObservable(array,scheduler);};


var GenerateObservable=function(__super__){
inherits(GenerateObservable,__super__);
function GenerateObservable(state,cndFn,itrFn,resFn,s){
this._state=state;
this._cndFn=cndFn;
this._itrFn=itrFn;
this._resFn=resFn;
this._s=s;
this._first=true;
__super__.call(this);}


function scheduleRecursive(self,recurse){
if(self._first){
self._first=false;}else 
{
self._state=tryCatch(self._itrFn)(self._state);
if(self._state===errorObj){return self._o.onError(self._state.e);}}

var hasResult=tryCatch(self._cndFn)(self._state);
if(hasResult===errorObj){return self._o.onError(hasResult.e);}
if(hasResult){
var result=tryCatch(self._resFn)(self._state);
if(result===errorObj){return self._o.onError(result.e);}
self._o.onNext(result);
recurse(self);}else 
{
self._o.onCompleted();}}



GenerateObservable.prototype.subscribeCore=function(o){
this._o=o;
return this._s.scheduleRecursive(this,scheduleRecursive);};


return GenerateObservable;}(
ObservableBase);














Observable.generate=function(initialState,condition,iterate,resultSelector,scheduler){
isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new GenerateObservable(initialState,condition,iterate,resultSelector,scheduler);};


function observableOf(scheduler,array){
isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new FromArrayObservable(array,scheduler);}






Observable.of=function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return new FromArrayObservable(args,currentThreadScheduler);};







Observable.ofWithScheduler=function(scheduler){
var len=arguments.length,args=new Array(len-1);
for(var i=1;i<len;i++){args[i-1]=arguments[i];}
return new FromArrayObservable(args,scheduler);};







Observable.ofArrayChanges=function(array){
if(!Array.isArray(array)){throw new TypeError('Array.observe only accepts arrays.');}
if(typeof Array.observe!=='function'&&typeof Array.unobserve!=='function'){throw new TypeError('Array.observe is not supported on your platform');}
return new AnonymousObservable(function(observer){
function observerFn(changes){
for(var i=0,len=changes.length;i<len;i++){
observer.onNext(changes[i]);}}



Array.observe(array,observerFn);

return function(){
Array.unobserve(array,observerFn);};});};









Observable.ofObjectChanges=function(obj){
if(obj==null){throw new TypeError('object must not be null or undefined.');}
if(typeof Object.observe!=='function'&&typeof Object.unobserve!=='function'){throw new TypeError('Object.observe is not supported on your platform');}
return new AnonymousObservable(function(observer){
function observerFn(changes){
for(var i=0,len=changes.length;i<len;i++){
observer.onNext(changes[i]);}}



Object.observe(obj,observerFn);

return function(){
Object.unobserve(obj,observerFn);};});};




var NeverObservable=function(__super__){
inherits(NeverObservable,__super__);
function NeverObservable(){
__super__.call(this);}


NeverObservable.prototype.subscribeCore=function(observer){
return disposableEmpty;};


return NeverObservable;}(
ObservableBase);

var NEVER_OBSERVABLE=new NeverObservable();





var observableNever=Observable.never=function(){
return NEVER_OBSERVABLE;};


var PairsObservable=function(__super__){
inherits(PairsObservable,__super__);
function PairsObservable(o,scheduler){
this._o=o;
this._keys=Object.keys(o);
this._scheduler=scheduler;
__super__.call(this);}


function scheduleMethod(o,obj,keys){
return function loopRecursive(i,recurse){
if(i<keys.length){
var key=keys[i];
o.onNext([key,obj[key]]);
recurse(i+1);}else 
{
o.onCompleted();}};}




PairsObservable.prototype.subscribeCore=function(o){
return this._scheduler.scheduleRecursive(0,scheduleMethod(o,this._o,this._keys));};


return PairsObservable;}(
ObservableBase);







Observable.pairs=function(obj,scheduler){
scheduler||(scheduler=currentThreadScheduler);
return new PairsObservable(obj,scheduler);};


var RangeObservable=function(__super__){
inherits(RangeObservable,__super__);
function RangeObservable(start,count,scheduler){
this.start=start;
this.rangeCount=count;
this.scheduler=scheduler;
__super__.call(this);}


function loopRecursive(start,count,o){
return function loop(i,recurse){
if(i<count){
o.onNext(start+i);
recurse(i+1);}else 
{
o.onCompleted();}};}




RangeObservable.prototype.subscribeCore=function(o){
return this.scheduler.scheduleRecursive(
0,
loopRecursive(this.start,this.rangeCount,o));};



return RangeObservable;}(
ObservableBase);








Observable.range=function(start,count,scheduler){
isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new RangeObservable(start,count,scheduler);};


var RepeatObservable=function(__super__){
inherits(RepeatObservable,__super__);
function RepeatObservable(value,repeatCount,scheduler){
this.value=value;
this.repeatCount=repeatCount==null?-1:repeatCount;
this.scheduler=scheduler;
__super__.call(this);}


RepeatObservable.prototype.subscribeCore=function(observer){
var sink=new RepeatSink(observer,this);
return sink.run();};


return RepeatObservable;}(
ObservableBase);

function RepeatSink(observer,parent){
this.observer=observer;
this.parent=parent;}


RepeatSink.prototype.run=function(){
var observer=this.observer,value=this.parent.value;
function loopRecursive(i,recurse){
if(i===-1||i>0){
observer.onNext(value);
i>0&&i--;}

if(i===0){return observer.onCompleted();}
recurse(i);}


return this.parent.scheduler.scheduleRecursive(this.parent.repeatCount,loopRecursive);};









Observable.repeat=function(value,repeatCount,scheduler){
isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new RepeatObservable(value,repeatCount,scheduler);};


var JustObservable=function(__super__){
inherits(JustObservable,__super__);
function JustObservable(value,scheduler){
this._value=value;
this._scheduler=scheduler;
__super__.call(this);}


JustObservable.prototype.subscribeCore=function(o){
var state=[this._value,o];
return this._scheduler===immediateScheduler?
scheduleItem(null,state):
this._scheduler.schedule(state,scheduleItem);};


function scheduleItem(s,state){
var value=state[0],observer=state[1];
observer.onNext(value);
observer.onCompleted();
return disposableEmpty;}


return JustObservable;}(
ObservableBase);








var observableReturn=Observable['return']=Observable.just=function(value,scheduler){
isScheduler(scheduler)||(scheduler=immediateScheduler);
return new JustObservable(value,scheduler);};


var ThrowObservable=function(__super__){
inherits(ThrowObservable,__super__);
function ThrowObservable(error,scheduler){
this._error=error;
this._scheduler=scheduler;
__super__.call(this);}


ThrowObservable.prototype.subscribeCore=function(o){
var state=[this._error,o];
return this._scheduler===immediateScheduler?
scheduleItem(null,state):
this._scheduler.schedule(state,scheduleItem);};


function scheduleItem(s,state){
var e=state[0],o=state[1];
o.onError(e);
return disposableEmpty;}


return ThrowObservable;}(
ObservableBase);








var observableThrow=Observable['throw']=function(error,scheduler){
isScheduler(scheduler)||(scheduler=immediateScheduler);
return new ThrowObservable(error,scheduler);};


var UsingObservable=function(__super__){
inherits(UsingObservable,__super__);
function UsingObservable(resFn,obsFn){
this._resFn=resFn;
this._obsFn=obsFn;
__super__.call(this);}


UsingObservable.prototype.subscribeCore=function(o){
var disposable=disposableEmpty;
var resource=tryCatch(this._resFn)();
if(resource===errorObj){
return new BinaryDisposable(observableThrow(resource.e).subscribe(o),disposable);}

resource&&(disposable=resource);
var source=tryCatch(this._obsFn)(resource);
if(source===errorObj){
return new BinaryDisposable(observableThrow(source.e).subscribe(o),disposable);}

return new BinaryDisposable(source.subscribe(o),disposable);};


return UsingObservable;}(
ObservableBase);







Observable.using=function(resourceFactory,observableFactory){
return new UsingObservable(resourceFactory,observableFactory);};







observableProto.amb=function(rightSource){
var leftSource=this;
return new AnonymousObservable(function(observer){
var choice,
leftChoice='L',rightChoice='R',
leftSubscription=new SingleAssignmentDisposable(),
rightSubscription=new SingleAssignmentDisposable();

isPromise(rightSource)&&(rightSource=observableFromPromise(rightSource));

function choiceL(){
if(!choice){
choice=leftChoice;
rightSubscription.dispose();}}



function choiceR(){
if(!choice){
choice=rightChoice;
leftSubscription.dispose();}}



var leftSubscribe=observerCreate(
function(left){
choiceL();
choice===leftChoice&&observer.onNext(left);},

function(e){
choiceL();
choice===leftChoice&&observer.onError(e);},

function(){
choiceL();
choice===leftChoice&&observer.onCompleted();});


var rightSubscribe=observerCreate(
function(right){
choiceR();
choice===rightChoice&&observer.onNext(right);},

function(e){
choiceR();
choice===rightChoice&&observer.onError(e);},

function(){
choiceR();
choice===rightChoice&&observer.onCompleted();});



leftSubscription.setDisposable(leftSource.subscribe(leftSubscribe));
rightSubscription.setDisposable(rightSource.subscribe(rightSubscribe));

return new BinaryDisposable(leftSubscription,rightSubscription);});};



function amb(p,c){return p.amb(c);}





Observable.amb=function(){
var acc=observableNever(),items;
if(Array.isArray(arguments[0])){
items=arguments[0];}else 
{
var len=arguments.length;
items=new Array(items);
for(var i=0;i<len;i++){items[i]=arguments[i];}}

for(var i=0,len=items.length;i<len;i++){
acc=amb(acc,items[i]);}

return acc;};


var CatchObservable=function(__super__){
inherits(CatchObservable,__super__);
function CatchObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


CatchObservable.prototype.subscribeCore=function(o){
var d1=new SingleAssignmentDisposable(),subscription=new SerialDisposable();
subscription.setDisposable(d1);
d1.setDisposable(this.source.subscribe(new CatchObserver(o,subscription,this._fn)));
return subscription;};


return CatchObservable;}(
ObservableBase);

var CatchObserver=function(__super__){
inherits(CatchObserver,__super__);
function CatchObserver(o,s,fn){
this._o=o;
this._s=s;
this._fn=fn;
__super__.call(this);}


CatchObserver.prototype.next=function(x){this._o.onNext(x);};
CatchObserver.prototype.completed=function(){return this._o.onCompleted();};
CatchObserver.prototype.error=function(e){
var result=tryCatch(this._fn)(e);
if(result===errorObj){return this._o.onError(result.e);}
isPromise(result)&&(result=observableFromPromise(result));

var d=new SingleAssignmentDisposable();
this._s.setDisposable(d);
d.setDisposable(result.subscribe(this._o));};


return CatchObserver;}(
AbstractObserver);






observableProto['catch']=function(handlerOrSecond){
return isFunction(handlerOrSecond)?new CatchObservable(this,handlerOrSecond):observableCatch([this,handlerOrSecond]);};







var observableCatch=Observable['catch']=function(){
var items;
if(Array.isArray(arguments[0])){
items=arguments[0];}else 
{
var len=arguments.length;
items=new Array(len);
for(var i=0;i<len;i++){items[i]=arguments[i];}}

return enumerableOf(items).catchError();};











observableProto.combineLatest=function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
if(Array.isArray(args[0])){
args[0].unshift(this);}else 
{
args.unshift(this);}

return combineLatest.apply(this,args);};


function falseFactory(){return false;}
function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return args;}


var CombineLatestObservable=function(__super__){
inherits(CombineLatestObservable,__super__);
function CombineLatestObservable(params,cb){
this._params=params;
this._cb=cb;
__super__.call(this);}


CombineLatestObservable.prototype.subscribeCore=function(observer){
var len=this._params.length,
subscriptions=new Array(len);

var state={
hasValue:arrayInitialize(len,falseFactory),
hasValueAll:false,
isDone:arrayInitialize(len,falseFactory),
values:new Array(len)};


for(var i=0;i<len;i++){
var source=this._params[i],sad=new SingleAssignmentDisposable();
subscriptions[i]=sad;
isPromise(source)&&(source=observableFromPromise(source));
sad.setDisposable(source.subscribe(new CombineLatestObserver(observer,i,this._cb,state)));}


return new NAryDisposable(subscriptions);};


return CombineLatestObservable;}(
ObservableBase);

var CombineLatestObserver=function(__super__){
inherits(CombineLatestObserver,__super__);
function CombineLatestObserver(o,i,cb,state){
this._o=o;
this._i=i;
this._cb=cb;
this._state=state;
__super__.call(this);}


function notTheSame(i){
return function(x,j){
return j!==i;};}



CombineLatestObserver.prototype.next=function(x){
this._state.values[this._i]=x;
this._state.hasValue[this._i]=true;
if(this._state.hasValueAll||(this._state.hasValueAll=this._state.hasValue.every(identity))){
var res=tryCatch(this._cb).apply(null,this._state.values);
if(res===errorObj){return this._o.onError(res.e);}
this._o.onNext(res);}else 
if(this._state.isDone.filter(notTheSame(this._i)).every(identity)){
this._o.onCompleted();}};



CombineLatestObserver.prototype.error=function(e){
this._o.onError(e);};


CombineLatestObserver.prototype.completed=function(){
this._state.isDone[this._i]=true;
this._state.isDone.every(identity)&&this._o.onCompleted();};


return CombineLatestObserver;}(
AbstractObserver);









var combineLatest=Observable.combineLatest=function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
var resultSelector=isFunction(args[len-1])?args.pop():argumentsToArray;
Array.isArray(args[0])&&(args=args[0]);
return new CombineLatestObservable(args,resultSelector);};






observableProto.concat=function(){
for(var args=[],i=0,len=arguments.length;i<len;i++){args.push(arguments[i]);}
args.unshift(this);
return observableConcat.apply(null,args);};


var ConcatObserver=function(__super__){
inherits(ConcatObserver,__super__);
function ConcatObserver(s,fn){
this._s=s;
this._fn=fn;
__super__.call(this);}


ConcatObserver.prototype.next=function(x){this._s.o.onNext(x);};
ConcatObserver.prototype.error=function(e){this._s.o.onError(e);};
ConcatObserver.prototype.completed=function(){this._s.i++;this._fn(this._s);};

return ConcatObserver;}(
AbstractObserver);

var ConcatObservable=function(__super__){
inherits(ConcatObservable,__super__);
function ConcatObservable(sources){
this._sources=sources;
__super__.call(this);}


function scheduleRecursive(state,recurse){
if(state.disposable.isDisposed){return;}
if(state.i===state.sources.length){return state.o.onCompleted();}


var currentValue=state.sources[state.i];
isPromise(currentValue)&&(currentValue=observableFromPromise(currentValue));

var d=new SingleAssignmentDisposable();
state.subscription.setDisposable(d);
d.setDisposable(currentValue.subscribe(new ConcatObserver(state,recurse)));}


ConcatObservable.prototype.subscribeCore=function(o){
var subscription=new SerialDisposable();
var disposable=disposableCreate(noop);
var state={
o:o,
i:0,
subscription:subscription,
disposable:disposable,
sources:this._sources};


var cancelable=immediateScheduler.scheduleRecursive(state,scheduleRecursive);
return new NAryDisposable([subscription,disposable,cancelable]);};


return ConcatObservable;}(
ObservableBase);






var observableConcat=Observable.concat=function(){
var args;
if(Array.isArray(arguments[0])){
args=arguments[0];}else 
{
args=new Array(arguments.length);
for(var i=0,len=arguments.length;i<len;i++){args[i]=arguments[i];}}

return new ConcatObservable(args);};






observableProto.concatAll=function(){
return this.merge(1);};


var MergeObservable=function(__super__){
inherits(MergeObservable,__super__);

function MergeObservable(source,maxConcurrent){
this.source=source;
this.maxConcurrent=maxConcurrent;
__super__.call(this);}


MergeObservable.prototype.subscribeCore=function(observer){
var g=new CompositeDisposable();
g.add(this.source.subscribe(new MergeObserver(observer,this.maxConcurrent,g)));
return g;};


return MergeObservable;}(

ObservableBase);

var MergeObserver=function(__super__){
function MergeObserver(o,max,g){
this.o=o;
this.max=max;
this.g=g;
this.done=false;
this.q=[];
this.activeCount=0;
__super__.call(this);}


inherits(MergeObserver,__super__);

MergeObserver.prototype.handleSubscribe=function(xs){
var sad=new SingleAssignmentDisposable();
this.g.add(sad);
isPromise(xs)&&(xs=observableFromPromise(xs));
sad.setDisposable(xs.subscribe(new InnerObserver(this,sad)));};


MergeObserver.prototype.next=function(innerSource){
if(this.activeCount<this.max){
this.activeCount++;
this.handleSubscribe(innerSource);}else 
{
this.q.push(innerSource);}};


MergeObserver.prototype.error=function(e){this.o.onError(e);};
MergeObserver.prototype.completed=function(){this.done=true;this.activeCount===0&&this.o.onCompleted();};

function InnerObserver(parent,sad){
this.parent=parent;
this.sad=sad;
__super__.call(this);}


inherits(InnerObserver,__super__);

InnerObserver.prototype.next=function(x){this.parent.o.onNext(x);};
InnerObserver.prototype.error=function(e){this.parent.o.onError(e);};
InnerObserver.prototype.completed=function(){
this.parent.g.remove(this.sad);
if(this.parent.q.length>0){
this.parent.handleSubscribe(this.parent.q.shift());}else 
{
this.parent.activeCount--;
this.parent.done&&this.parent.activeCount===0&&this.parent.o.onCompleted();}};



return MergeObserver;}(
AbstractObserver);







observableProto.merge=function(maxConcurrentOrOther){
return typeof maxConcurrentOrOther!=='number'?
observableMerge(this,maxConcurrentOrOther):
new MergeObservable(this,maxConcurrentOrOther);};







var observableMerge=Observable.merge=function(){
var scheduler,sources=[],i,len=arguments.length;
if(!arguments[0]){
scheduler=immediateScheduler;
for(i=1;i<len;i++){sources.push(arguments[i]);}}else 
if(isScheduler(arguments[0])){
scheduler=arguments[0];
for(i=1;i<len;i++){sources.push(arguments[i]);}}else 
{
scheduler=immediateScheduler;
for(i=0;i<len;i++){sources.push(arguments[i]);}}

if(Array.isArray(sources[0])){
sources=sources[0];}

return observableOf(scheduler,sources).mergeAll();};


var MergeAllObservable=function(__super__){
inherits(MergeAllObservable,__super__);

function MergeAllObservable(source){
this.source=source;
__super__.call(this);}


MergeAllObservable.prototype.subscribeCore=function(o){
var g=new CompositeDisposable(),m=new SingleAssignmentDisposable();
g.add(m);
m.setDisposable(this.source.subscribe(new MergeAllObserver(o,g)));
return g;};


return MergeAllObservable;}(
ObservableBase);

var MergeAllObserver=function(__super__){
function MergeAllObserver(o,g){
this.o=o;
this.g=g;
this.done=false;
__super__.call(this);}


inherits(MergeAllObserver,__super__);

MergeAllObserver.prototype.next=function(innerSource){
var sad=new SingleAssignmentDisposable();
this.g.add(sad);
isPromise(innerSource)&&(innerSource=observableFromPromise(innerSource));
sad.setDisposable(innerSource.subscribe(new InnerObserver(this,sad)));};


MergeAllObserver.prototype.error=function(e){
this.o.onError(e);};


MergeAllObserver.prototype.completed=function(){
this.done=true;
this.g.length===1&&this.o.onCompleted();};


function InnerObserver(parent,sad){
this.parent=parent;
this.sad=sad;
__super__.call(this);}


inherits(InnerObserver,__super__);

InnerObserver.prototype.next=function(x){
this.parent.o.onNext(x);};

InnerObserver.prototype.error=function(e){
this.parent.o.onError(e);};

InnerObserver.prototype.completed=function(){
this.parent.g.remove(this.sad);
this.parent.done&&this.parent.g.length===1&&this.parent.o.onCompleted();};


return MergeAllObserver;}(
AbstractObserver);





observableProto.mergeAll=function(){
return new MergeAllObservable(this);};


var CompositeError=Rx.CompositeError=function(errors){
this.innerErrors=errors;
this.message='This contains multiple errors. Check the innerErrors';
Error.call(this);};

CompositeError.prototype=Object.create(Error.prototype);
CompositeError.prototype.name='CompositeError';

var MergeDelayErrorObservable=function(__super__){
inherits(MergeDelayErrorObservable,__super__);
function MergeDelayErrorObservable(source){
this.source=source;
__super__.call(this);}


MergeDelayErrorObservable.prototype.subscribeCore=function(o){
var group=new CompositeDisposable(),
m=new SingleAssignmentDisposable(),
state={isStopped:false,errors:[],o:o};

group.add(m);
m.setDisposable(this.source.subscribe(new MergeDelayErrorObserver(group,state)));

return group;};


return MergeDelayErrorObservable;}(
ObservableBase);

var MergeDelayErrorObserver=function(__super__){
inherits(MergeDelayErrorObserver,__super__);
function MergeDelayErrorObserver(group,state){
this._group=group;
this._state=state;
__super__.call(this);}


function setCompletion(o,errors){
if(errors.length===0){
o.onCompleted();}else 
if(errors.length===1){
o.onError(errors[0]);}else 
{
o.onError(new CompositeError(errors));}}



MergeDelayErrorObserver.prototype.next=function(x){
var inner=new SingleAssignmentDisposable();
this._group.add(inner);


isPromise(x)&&(x=observableFromPromise(x));
inner.setDisposable(x.subscribe(new InnerObserver(inner,this._group,this._state)));};


MergeDelayErrorObserver.prototype.error=function(e){
this._state.errors.push(e);
this._state.isStopped=true;
this._group.length===1&&setCompletion(this._state.o,this._state.errors);};


MergeDelayErrorObserver.prototype.completed=function(){
this._state.isStopped=true;
this._group.length===1&&setCompletion(this._state.o,this._state.errors);};


inherits(InnerObserver,__super__);
function InnerObserver(inner,group,state){
this._inner=inner;
this._group=group;
this._state=state;
__super__.call(this);}


InnerObserver.prototype.next=function(x){this._state.o.onNext(x);};
InnerObserver.prototype.error=function(e){
this._state.errors.push(e);
this._group.remove(this._inner);
this._state.isStopped&&this._group.length===1&&setCompletion(this._state.o,this._state.errors);};

InnerObserver.prototype.completed=function(){
this._group.remove(this._inner);
this._state.isStopped&&this._group.length===1&&setCompletion(this._state.o,this._state.errors);};


return MergeDelayErrorObserver;}(
AbstractObserver);












Observable.mergeDelayError=function(){
var args;
if(Array.isArray(arguments[0])){
args=arguments[0];}else 
{
var len=arguments.length;
args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}}

var source=observableOf(null,args);
return new MergeDelayErrorObservable(source);};







observableProto.onErrorResumeNext=function(second){
if(!second){throw new Error('Second observable is required');}
return onErrorResumeNext([this,second]);};


var OnErrorResumeNextObservable=function(__super__){
inherits(OnErrorResumeNextObservable,__super__);
function OnErrorResumeNextObservable(sources){
this.sources=sources;
__super__.call(this);}


function scheduleMethod(state,recurse){
if(state.pos<state.sources.length){
var current=state.sources[state.pos++];
isPromise(current)&&(current=observableFromPromise(current));
var d=new SingleAssignmentDisposable();
state.subscription.setDisposable(d);
d.setDisposable(current.subscribe(new OnErrorResumeNextObserver(state,recurse)));}else 
{
state.o.onCompleted();}}



OnErrorResumeNextObservable.prototype.subscribeCore=function(o){
var subscription=new SerialDisposable(),
state={pos:0,subscription:subscription,o:o,sources:this.sources},
cancellable=immediateScheduler.scheduleRecursive(state,scheduleMethod);

return new BinaryDisposable(subscription,cancellable);};


return OnErrorResumeNextObservable;}(
ObservableBase);

var OnErrorResumeNextObserver=function(__super__){
inherits(OnErrorResumeNextObserver,__super__);
function OnErrorResumeNextObserver(state,recurse){
this._state=state;
this._recurse=recurse;
__super__.call(this);}


OnErrorResumeNextObserver.prototype.next=function(x){this._state.o.onNext(x);};
OnErrorResumeNextObserver.prototype.error=function(){this._recurse(this._state);};
OnErrorResumeNextObserver.prototype.completed=function(){this._recurse(this._state);};

return OnErrorResumeNextObserver;}(
AbstractObserver);





var onErrorResumeNext=Observable.onErrorResumeNext=function(){
var sources=[];
if(Array.isArray(arguments[0])){
sources=arguments[0];}else 
{
var len=arguments.length;
sources=new Array(len);
for(var i=0;i<len;i++){sources[i]=arguments[i];}}

return new OnErrorResumeNextObservable(sources);};


var SkipUntilObservable=function(__super__){
inherits(SkipUntilObservable,__super__);

function SkipUntilObservable(source,other){
this._s=source;
this._o=isPromise(other)?observableFromPromise(other):other;
this._open=false;
__super__.call(this);}


SkipUntilObservable.prototype.subscribeCore=function(o){
var leftSubscription=new SingleAssignmentDisposable();
leftSubscription.setDisposable(this._s.subscribe(new SkipUntilSourceObserver(o,this)));

isPromise(this._o)&&(this._o=observableFromPromise(this._o));

var rightSubscription=new SingleAssignmentDisposable();
rightSubscription.setDisposable(this._o.subscribe(new SkipUntilOtherObserver(o,this,rightSubscription)));

return new BinaryDisposable(leftSubscription,rightSubscription);};


return SkipUntilObservable;}(
ObservableBase);

var SkipUntilSourceObserver=function(__super__){
inherits(SkipUntilSourceObserver,__super__);
function SkipUntilSourceObserver(o,p){
this._o=o;
this._p=p;
__super__.call(this);}


SkipUntilSourceObserver.prototype.next=function(x){
this._p._open&&this._o.onNext(x);};


SkipUntilSourceObserver.prototype.error=function(err){
this._o.onError(err);};


SkipUntilSourceObserver.prototype.onCompleted=function(){
this._p._open&&this._o.onCompleted();};


return SkipUntilSourceObserver;}(
AbstractObserver);

var SkipUntilOtherObserver=function(__super__){
inherits(SkipUntilOtherObserver,__super__);
function SkipUntilOtherObserver(o,p,r){
this._o=o;
this._p=p;
this._r=r;
__super__.call(this);}


SkipUntilOtherObserver.prototype.next=function(){
this._p._open=true;
this._r.dispose();};


SkipUntilOtherObserver.prototype.error=function(err){
this._o.onError(err);};


SkipUntilOtherObserver.prototype.onCompleted=function(){
this._r.dispose();};


return SkipUntilOtherObserver;}(
AbstractObserver);






observableProto.skipUntil=function(other){
return new SkipUntilObservable(this,other);};


var SwitchObservable=function(__super__){
inherits(SwitchObservable,__super__);
function SwitchObservable(source){
this.source=source;
__super__.call(this);}


SwitchObservable.prototype.subscribeCore=function(o){
var inner=new SerialDisposable(),s=this.source.subscribe(new SwitchObserver(o,inner));
return new BinaryDisposable(s,inner);};


inherits(SwitchObserver,AbstractObserver);
function SwitchObserver(o,inner){
this.o=o;
this.inner=inner;
this.stopped=false;
this.latest=0;
this.hasLatest=false;
AbstractObserver.call(this);}


SwitchObserver.prototype.next=function(innerSource){
var d=new SingleAssignmentDisposable(),id=++this.latest;
this.hasLatest=true;
this.inner.setDisposable(d);
isPromise(innerSource)&&(innerSource=observableFromPromise(innerSource));
d.setDisposable(innerSource.subscribe(new InnerObserver(this,id)));};


SwitchObserver.prototype.error=function(e){
this.o.onError(e);};


SwitchObserver.prototype.completed=function(){
this.stopped=true;
!this.hasLatest&&this.o.onCompleted();};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(parent,id){
this.parent=parent;
this.id=id;
AbstractObserver.call(this);}

InnerObserver.prototype.next=function(x){
this.parent.latest===this.id&&this.parent.o.onNext(x);};


InnerObserver.prototype.error=function(e){
this.parent.latest===this.id&&this.parent.o.onError(e);};


InnerObserver.prototype.completed=function(){
if(this.parent.latest===this.id){
this.parent.hasLatest=false;
this.parent.stopped&&this.parent.o.onCompleted();}};



return SwitchObservable;}(
ObservableBase);





observableProto['switch']=observableProto.switchLatest=function(){
return new SwitchObservable(this);};


var TakeUntilObservable=function(__super__){
inherits(TakeUntilObservable,__super__);

function TakeUntilObservable(source,other){
this.source=source;
this.other=isPromise(other)?observableFromPromise(other):other;
__super__.call(this);}


TakeUntilObservable.prototype.subscribeCore=function(o){
return new BinaryDisposable(
this.source.subscribe(o),
this.other.subscribe(new TakeUntilObserver(o)));};



return TakeUntilObservable;}(
ObservableBase);

var TakeUntilObserver=function(__super__){
inherits(TakeUntilObserver,__super__);
function TakeUntilObserver(o){
this._o=o;
__super__.call(this);}


TakeUntilObserver.prototype.next=function(){
this._o.onCompleted();};


TakeUntilObserver.prototype.error=function(err){
this._o.onError(err);};


TakeUntilObserver.prototype.onCompleted=noop;

return TakeUntilObserver;}(
AbstractObserver);






observableProto.takeUntil=function(other){
return new TakeUntilObservable(this,other);};


function falseFactory(){return false;}
function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return args;}


var WithLatestFromObservable=function(__super__){
inherits(WithLatestFromObservable,__super__);
function WithLatestFromObservable(source,sources,resultSelector){
this._s=source;
this._ss=sources;
this._cb=resultSelector;
__super__.call(this);}


WithLatestFromObservable.prototype.subscribeCore=function(o){
var len=this._ss.length;
var state={
hasValue:arrayInitialize(len,falseFactory),
hasValueAll:false,
values:new Array(len)};


var n=this._ss.length,subscriptions=new Array(n+1);
for(var i=0;i<n;i++){
var other=this._ss[i],sad=new SingleAssignmentDisposable();
isPromise(other)&&(other=observableFromPromise(other));
sad.setDisposable(other.subscribe(new WithLatestFromOtherObserver(o,i,state)));
subscriptions[i]=sad;}


var outerSad=new SingleAssignmentDisposable();
outerSad.setDisposable(this._s.subscribe(new WithLatestFromSourceObserver(o,this._cb,state)));
subscriptions[n]=outerSad;

return new NAryDisposable(subscriptions);};


return WithLatestFromObservable;}(
ObservableBase);

var WithLatestFromOtherObserver=function(__super__){
inherits(WithLatestFromOtherObserver,__super__);
function WithLatestFromOtherObserver(o,i,state){
this._o=o;
this._i=i;
this._state=state;
__super__.call(this);}


WithLatestFromOtherObserver.prototype.next=function(x){
this._state.values[this._i]=x;
this._state.hasValue[this._i]=true;
this._state.hasValueAll=this._state.hasValue.every(identity);};


WithLatestFromOtherObserver.prototype.error=function(e){
this._o.onError(e);};


WithLatestFromOtherObserver.prototype.completed=noop;

return WithLatestFromOtherObserver;}(
AbstractObserver);

var WithLatestFromSourceObserver=function(__super__){
inherits(WithLatestFromSourceObserver,__super__);
function WithLatestFromSourceObserver(o,cb,state){
this._o=o;
this._cb=cb;
this._state=state;
__super__.call(this);}


WithLatestFromSourceObserver.prototype.next=function(x){
var allValues=[x].concat(this._state.values);
if(!this._state.hasValueAll){return;}
var res=tryCatch(this._cb).apply(null,allValues);
if(res===errorObj){return this._o.onError(res.e);}
this._o.onNext(res);};


WithLatestFromSourceObserver.prototype.error=function(e){
this._o.onError(e);};


WithLatestFromSourceObserver.prototype.completed=function(){
this._o.onCompleted();};


return WithLatestFromSourceObserver;}(
AbstractObserver);





observableProto.withLatestFrom=function(){
if(arguments.length===0){throw new Error('invalid arguments');}

var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
var resultSelector=isFunction(args[len-1])?args.pop():argumentsToArray;
Array.isArray(args[0])&&(args=args[0]);

return new WithLatestFromObservable(this,args,resultSelector);};


function falseFactory(){return false;}
function emptyArrayFactory(){return [];}

var ZipObservable=function(__super__){
inherits(ZipObservable,__super__);
function ZipObservable(sources,resultSelector){
this._s=sources;
this._cb=resultSelector;
__super__.call(this);}


ZipObservable.prototype.subscribeCore=function(observer){
var n=this._s.length,
subscriptions=new Array(n),
done=arrayInitialize(n,falseFactory),
q=arrayInitialize(n,emptyArrayFactory);

for(var i=0;i<n;i++){
var source=this._s[i],sad=new SingleAssignmentDisposable();
subscriptions[i]=sad;
isPromise(source)&&(source=observableFromPromise(source));
sad.setDisposable(source.subscribe(new ZipObserver(observer,i,this,q,done)));}


return new NAryDisposable(subscriptions);};


return ZipObservable;}(
ObservableBase);

var ZipObserver=function(__super__){
inherits(ZipObserver,__super__);
function ZipObserver(o,i,p,q,d){
this._o=o;
this._i=i;
this._p=p;
this._q=q;
this._d=d;
__super__.call(this);}


function notEmpty(x){return x.length>0;}
function shiftEach(x){return x.shift();}
function notTheSame(i){
return function(x,j){
return j!==i;};}



ZipObserver.prototype.next=function(x){
this._q[this._i].push(x);
if(this._q.every(notEmpty)){
var queuedValues=this._q.map(shiftEach);
var res=tryCatch(this._p._cb).apply(null,queuedValues);
if(res===errorObj){return this._o.onError(res.e);}
this._o.onNext(res);}else 
if(this._d.filter(notTheSame(this._i)).every(identity)){
this._o.onCompleted();}};



ZipObserver.prototype.error=function(e){
this._o.onError(e);};


ZipObserver.prototype.completed=function(){
this._d[this._i]=true;
this._d.every(identity)&&this._o.onCompleted();};


return ZipObserver;}(
AbstractObserver);






observableProto.zip=function(){
if(arguments.length===0){throw new Error('invalid arguments');}

var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
var resultSelector=isFunction(args[len-1])?args.pop():argumentsToArray;
Array.isArray(args[0])&&(args=args[0]);

var parent=this;
args.unshift(parent);

return new ZipObservable(args,resultSelector);};








Observable.zip=function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
if(Array.isArray(args[0])){
args=isFunction(args[1])?args[0].concat(args[1]):args[0];}

var first=args.shift();
return first.zip.apply(first,args);};


function falseFactory(){return false;}
function emptyArrayFactory(){return [];}
function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return args;}


var ZipIterableObservable=function(__super__){
inherits(ZipIterableObservable,__super__);
function ZipIterableObservable(sources,cb){
this.sources=sources;
this._cb=cb;
__super__.call(this);}


ZipIterableObservable.prototype.subscribeCore=function(o){
var sources=this.sources,len=sources.length,subscriptions=new Array(len);

var state={
q:arrayInitialize(len,emptyArrayFactory),
done:arrayInitialize(len,falseFactory),
cb:this._cb,
o:o};


for(var i=0;i<len;i++){
(function(i){
var source=sources[i],sad=new SingleAssignmentDisposable();
(isArrayLike(source)||isIterable(source))&&(source=observableFrom(source));

subscriptions[i]=sad;
sad.setDisposable(source.subscribe(new ZipIterableObserver(state,i)));})(
i);}


return new NAryDisposable(subscriptions);};


return ZipIterableObservable;}(
ObservableBase);

var ZipIterableObserver=function(__super__){
inherits(ZipIterableObserver,__super__);
function ZipIterableObserver(s,i){
this._s=s;
this._i=i;
__super__.call(this);}


function notEmpty(x){return x.length>0;}
function shiftEach(x){return x.shift();}
function notTheSame(i){
return function(x,j){
return j!==i;};}



ZipIterableObserver.prototype.next=function(x){
this._s.q[this._i].push(x);
if(this._s.q.every(notEmpty)){
var queuedValues=this._s.q.map(shiftEach),
res=tryCatch(this._s.cb).apply(null,queuedValues);
if(res===errorObj){return this._s.o.onError(res.e);}
this._s.o.onNext(res);}else 
if(this._s.done.filter(notTheSame(this._i)).every(identity)){
this._s.o.onCompleted();}};



ZipIterableObserver.prototype.error=function(e){this._s.o.onError(e);};

ZipIterableObserver.prototype.completed=function(){
this._s.done[this._i]=true;
this._s.done.every(identity)&&this._s.o.onCompleted();};


return ZipIterableObserver;}(
AbstractObserver);






observableProto.zipIterable=function(){
if(arguments.length===0){throw new Error('invalid arguments');}

var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
var resultSelector=isFunction(args[len-1])?args.pop():argumentsToArray;

var parent=this;
args.unshift(parent);
return new ZipIterableObservable(args,resultSelector);};


function asObservable(source){
return function subscribe(o){return source.subscribe(o);};}






observableProto.asObservable=function(){
return new AnonymousObservable(asObservable(this),this);};


function toArray(x){return x.toArray();}
function notEmpty(x){return x.length>0;}







observableProto.bufferWithCount=function(count,skip){
typeof skip!=='number'&&(skip=count);
return this.windowWithCount(count,skip).
flatMap(toArray).
filter(notEmpty);};


var DematerializeObservable=function(__super__){
inherits(DematerializeObservable,__super__);
function DematerializeObservable(source){
this.source=source;
__super__.call(this);}


DematerializeObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new DematerializeObserver(o));};


return DematerializeObservable;}(
ObservableBase);

var DematerializeObserver=function(__super__){
inherits(DematerializeObserver,__super__);

function DematerializeObserver(o){
this._o=o;
__super__.call(this);}


DematerializeObserver.prototype.next=function(x){x.accept(this._o);};
DematerializeObserver.prototype.error=function(e){this._o.onError(e);};
DematerializeObserver.prototype.completed=function(){this._o.onCompleted();};

return DematerializeObserver;}(
AbstractObserver);





observableProto.dematerialize=function(){
return new DematerializeObservable(this);};


var DistinctUntilChangedObservable=function(__super__){
inherits(DistinctUntilChangedObservable,__super__);
function DistinctUntilChangedObservable(source,keyFn,comparer){
this.source=source;
this.keyFn=keyFn;
this.comparer=comparer;
__super__.call(this);}


DistinctUntilChangedObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new DistinctUntilChangedObserver(o,this.keyFn,this.comparer));};


return DistinctUntilChangedObservable;}(
ObservableBase);

var DistinctUntilChangedObserver=function(__super__){
inherits(DistinctUntilChangedObserver,__super__);
function DistinctUntilChangedObserver(o,keyFn,comparer){
this.o=o;
this.keyFn=keyFn;
this.comparer=comparer;
this.hasCurrentKey=false;
this.currentKey=null;
__super__.call(this);}


DistinctUntilChangedObserver.prototype.next=function(x){
var key=x,comparerEquals;
if(isFunction(this.keyFn)){
key=tryCatch(this.keyFn)(x);
if(key===errorObj){return this.o.onError(key.e);}}

if(this.hasCurrentKey){
comparerEquals=tryCatch(this.comparer)(this.currentKey,key);
if(comparerEquals===errorObj){return this.o.onError(comparerEquals.e);}}

if(!this.hasCurrentKey||!comparerEquals){
this.hasCurrentKey=true;
this.currentKey=key;
this.o.onNext(x);}};


DistinctUntilChangedObserver.prototype.error=function(e){
this.o.onError(e);};

DistinctUntilChangedObserver.prototype.completed=function(){
this.o.onCompleted();};


return DistinctUntilChangedObserver;}(
AbstractObserver);







observableProto.distinctUntilChanged=function(keyFn,comparer){
comparer||(comparer=defaultComparer);
return new DistinctUntilChangedObservable(this,keyFn,comparer);};


var TapObservable=function(__super__){
inherits(TapObservable,__super__);
function TapObservable(source,observerOrOnNext,onError,onCompleted){
this.source=source;
this._oN=observerOrOnNext;
this._oE=onError;
this._oC=onCompleted;
__super__.call(this);}


TapObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new InnerObserver(o,this));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,p){
this.o=o;
this.t=!p._oN||isFunction(p._oN)?
observerCreate(p._oN||noop,p._oE||noop,p._oC||noop):
p._oN;
this.isStopped=false;
AbstractObserver.call(this);}

InnerObserver.prototype.next=function(x){
var res=tryCatch(this.t.onNext).call(this.t,x);
if(res===errorObj){this.o.onError(res.e);}
this.o.onNext(x);};

InnerObserver.prototype.error=function(err){
var res=tryCatch(this.t.onError).call(this.t,err);
if(res===errorObj){return this.o.onError(res.e);}
this.o.onError(err);};

InnerObserver.prototype.completed=function(){
var res=tryCatch(this.t.onCompleted).call(this.t);
if(res===errorObj){return this.o.onError(res.e);}
this.o.onCompleted();};


return TapObservable;}(
ObservableBase);









observableProto['do']=observableProto.tap=observableProto.doAction=function(observerOrOnNext,onError,onCompleted){
return new TapObservable(this,observerOrOnNext,onError,onCompleted);};









observableProto.doOnNext=observableProto.tapOnNext=function(onNext,thisArg){
return this.tap(typeof thisArg!=='undefined'?function(x){onNext.call(thisArg,x);}:onNext);};









observableProto.doOnError=observableProto.tapOnError=function(onError,thisArg){
return this.tap(noop,typeof thisArg!=='undefined'?function(e){onError.call(thisArg,e);}:onError);};









observableProto.doOnCompleted=observableProto.tapOnCompleted=function(onCompleted,thisArg){
return this.tap(noop,null,typeof thisArg!=='undefined'?function(){onCompleted.call(thisArg);}:onCompleted);};


var FinallyObservable=function(__super__){
inherits(FinallyObservable,__super__);
function FinallyObservable(source,fn,thisArg){
this.source=source;
this._fn=bindCallback(fn,thisArg,0);
__super__.call(this);}


FinallyObservable.prototype.subscribeCore=function(o){
var d=tryCatch(this.source.subscribe).call(this.source,o);
if(d===errorObj){
this._fn();
thrower(d.e);}


return new FinallyDisposable(d,this._fn);};


function FinallyDisposable(s,fn){
this.isDisposed=false;
this._s=s;
this._fn=fn;}

FinallyDisposable.prototype.dispose=function(){
if(!this.isDisposed){
var res=tryCatch(this._s.dispose).call(this._s);
this._fn();
res===errorObj&&thrower(res.e);}};



return FinallyObservable;}(

ObservableBase);






observableProto['finally']=function(action,thisArg){
return new FinallyObservable(this,action,thisArg);};


var IgnoreElementsObservable=function(__super__){
inherits(IgnoreElementsObservable,__super__);

function IgnoreElementsObservable(source){
this.source=source;
__super__.call(this);}


IgnoreElementsObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new InnerObserver(o));};


function InnerObserver(o){
this.o=o;
this.isStopped=false;}

InnerObserver.prototype.onNext=noop;
InnerObserver.prototype.onError=function(err){
if(!this.isStopped){
this.isStopped=true;
this.o.onError(err);}};


InnerObserver.prototype.onCompleted=function(){
if(!this.isStopped){
this.isStopped=true;
this.o.onCompleted();}};


InnerObserver.prototype.dispose=function(){this.isStopped=true;};
InnerObserver.prototype.fail=function(e){
if(!this.isStopped){
this.isStopped=true;
this.observer.onError(e);
return true;}


return false;};


return IgnoreElementsObservable;}(
ObservableBase);





observableProto.ignoreElements=function(){
return new IgnoreElementsObservable(this);};


var MaterializeObservable=function(__super__){
inherits(MaterializeObservable,__super__);
function MaterializeObservable(source,fn){
this.source=source;
__super__.call(this);}


MaterializeObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new MaterializeObserver(o));};


return MaterializeObservable;}(
ObservableBase);

var MaterializeObserver=function(__super__){
inherits(MaterializeObserver,__super__);

function MaterializeObserver(o){
this._o=o;
__super__.call(this);}


MaterializeObserver.prototype.next=function(x){this._o.onNext(notificationCreateOnNext(x));};
MaterializeObserver.prototype.error=function(e){this._o.onNext(notificationCreateOnError(e));this._o.onCompleted();};
MaterializeObserver.prototype.completed=function(){this._o.onNext(notificationCreateOnCompleted());this._o.onCompleted();};

return MaterializeObserver;}(
AbstractObserver);





observableProto.materialize=function(){
return new MaterializeObservable(this);};







observableProto.repeat=function(repeatCount){
return enumerableRepeat(this,repeatCount).concat();};












observableProto.retry=function(retryCount){
return enumerableRepeat(this,retryCount).catchError();};












observableProto.retryWhen=function(notifier){
return enumerableRepeat(this).catchErrorWhen(notifier);};

var ScanObservable=function(__super__){
inherits(ScanObservable,__super__);
function ScanObservable(source,accumulator,hasSeed,seed){
this.source=source;
this.accumulator=accumulator;
this.hasSeed=hasSeed;
this.seed=seed;
__super__.call(this);}


ScanObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new ScanObserver(o,this));};


return ScanObservable;}(
ObservableBase);

var ScanObserver=function(__super__){
inherits(ScanObserver,__super__);
function ScanObserver(o,parent){
this._o=o;
this._p=parent;
this._fn=parent.accumulator;
this._hs=parent.hasSeed;
this._s=parent.seed;
this._ha=false;
this._a=null;
this._hv=false;
this._i=0;
__super__.call(this);}


ScanObserver.prototype.next=function(x){
!this._hv&&(this._hv=true);
if(this._ha){
this._a=tryCatch(this._fn)(this._a,x,this._i,this._p);}else 
{
this._a=this._hs?tryCatch(this._fn)(this._s,x,this._i,this._p):x;
this._ha=true;}

if(this._a===errorObj){return this._o.onError(this._a.e);}
this._o.onNext(this._a);
this._i++;};


ScanObserver.prototype.error=function(e){
this._o.onError(e);};


ScanObserver.prototype.completed=function(){
!this._hv&&this._hs&&this._o.onNext(this._s);
this._o.onCompleted();};


return ScanObserver;}(
AbstractObserver);








observableProto.scan=function(){
var hasSeed=false,seed,accumulator=arguments[0];
if(arguments.length===2){
hasSeed=true;
seed=arguments[1];}

return new ScanObservable(this,accumulator,hasSeed,seed);};


var SkipLastObservable=function(__super__){
inherits(SkipLastObservable,__super__);
function SkipLastObservable(source,c){
this.source=source;
this._c=c;
__super__.call(this);}


SkipLastObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SkipLastObserver(o,this._c));};


return SkipLastObservable;}(
ObservableBase);

var SkipLastObserver=function(__super__){
inherits(SkipLastObserver,__super__);
function SkipLastObserver(o,c){
this._o=o;
this._c=c;
this._q=[];
__super__.call(this);}


SkipLastObserver.prototype.next=function(x){
this._q.push(x);
this._q.length>this._c&&this._o.onNext(this._q.shift());};


SkipLastObserver.prototype.error=function(e){
this._o.onError(e);};


SkipLastObserver.prototype.completed=function(){
this._o.onCompleted();};


return SkipLastObserver;}(
AbstractObserver);









observableProto.skipLast=function(count){
if(count<0){throw new ArgumentOutOfRangeError();}
return new SkipLastObservable(this,count);};










observableProto.startWith=function(){
var values,scheduler,start=0;
if(!!arguments.length&&isScheduler(arguments[0])){
scheduler=arguments[0];
start=1;}else 
{
scheduler=immediateScheduler;}

for(var args=[],i=start,len=arguments.length;i<len;i++){args.push(arguments[i]);}
return enumerableOf([observableFromArray(args,scheduler),this]).concat();};


var TakeLastObserver=function(__super__){
inherits(TakeLastObserver,__super__);
function TakeLastObserver(o,c){
this._o=o;
this._c=c;
this._q=[];
__super__.call(this);}


TakeLastObserver.prototype.next=function(x){
this._q.push(x);
this._q.length>this._c&&this._q.shift();};


TakeLastObserver.prototype.error=function(e){
this._o.onError(e);};


TakeLastObserver.prototype.completed=function(){
while(this._q.length>0){this._o.onNext(this._q.shift());}
this._o.onCompleted();};


return TakeLastObserver;}(
AbstractObserver);









observableProto.takeLast=function(count){
if(count<0){throw new ArgumentOutOfRangeError();}
var source=this;
return new AnonymousObservable(function(o){
return source.subscribe(new TakeLastObserver(o,count));},
source);};


var TakeLastBufferObserver=function(__super__){
inherits(TakeLastBufferObserver,__super__);
function TakeLastBufferObserver(o,c){
this._o=o;
this._c=c;
this._q=[];
__super__.call(this);}


TakeLastBufferObserver.prototype.next=function(x){
this._q.push(x);
this._q.length>this._c&&this._q.shift();};


TakeLastBufferObserver.prototype.error=function(e){
this._o.onError(e);};


TakeLastBufferObserver.prototype.completed=function(){
this._o.onNext(this._q);
this._o.onCompleted();};


return TakeLastBufferObserver;}(
AbstractObserver);










observableProto.takeLastBuffer=function(count){
if(count<0){throw new ArgumentOutOfRangeError();}
var source=this;
return new AnonymousObservable(function(o){
return source.subscribe(new TakeLastBufferObserver(o,count));},
source);};








observableProto.windowWithCount=function(count,skip){
var source=this;
+count||(count=0);
Math.abs(count)===Infinity&&(count=0);
if(count<=0){throw new ArgumentOutOfRangeError();}
skip==null&&(skip=count);
+skip||(skip=0);
Math.abs(skip)===Infinity&&(skip=0);

if(skip<=0){throw new ArgumentOutOfRangeError();}
return new AnonymousObservable(function(observer){
var m=new SingleAssignmentDisposable(),
refCountDisposable=new RefCountDisposable(m),
n=0,
q=[];

function createWindow(){
var s=new Subject();
q.push(s);
observer.onNext(addRef(s,refCountDisposable));}


createWindow();

m.setDisposable(source.subscribe(
function(x){
for(var i=0,len=q.length;i<len;i++){q[i].onNext(x);}
var c=n-count+1;
c>=0&&c%skip===0&&q.shift().onCompleted();
++n%skip===0&&createWindow();},

function(e){
while(q.length>0){q.shift().onError(e);}
observer.onError(e);},

function(){
while(q.length>0){q.shift().onCompleted();}
observer.onCompleted();}));


return refCountDisposable;},
source);};


function concatMap(source,selector,thisArg){
var selectorFunc=bindCallback(selector,thisArg,3);
return source.map(function(x,i){
var result=selectorFunc(x,i,source);
isPromise(result)&&(result=observableFromPromise(result));
(isArrayLike(result)||isIterable(result))&&(result=observableFrom(result));
return result;}).
concatAll();}





















observableProto.selectConcat=observableProto.concatMap=function(selector,resultSelector,thisArg){
if(isFunction(selector)&&isFunction(resultSelector)){
return this.concatMap(function(x,i){
var selectorResult=selector(x,i);
isPromise(selectorResult)&&(selectorResult=observableFromPromise(selectorResult));
(isArrayLike(selectorResult)||isIterable(selectorResult))&&(selectorResult=observableFrom(selectorResult));

return selectorResult.map(function(y,i2){
return resultSelector(x,y,i,i2);});});}



return isFunction(selector)?
concatMap(this,selector,thisArg):
concatMap(this,function(){return selector;});};










observableProto.concatMapObserver=observableProto.selectConcatObserver=function(onNext,onError,onCompleted,thisArg){
var source=this,
onNextFunc=bindCallback(onNext,thisArg,2),
onErrorFunc=bindCallback(onError,thisArg,1),
onCompletedFunc=bindCallback(onCompleted,thisArg,0);
return new AnonymousObservable(function(observer){
var index=0;
return source.subscribe(
function(x){
var result;
try{
result=onNextFunc(x,index++);}
catch(e){
observer.onError(e);
return;}

isPromise(result)&&(result=observableFromPromise(result));
observer.onNext(result);},

function(err){
var result;
try{
result=onErrorFunc(err);}
catch(e){
observer.onError(e);
return;}

isPromise(result)&&(result=observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();},

function(){
var result;
try{
result=onCompletedFunc();}
catch(e){
observer.onError(e);
return;}

isPromise(result)&&(result=observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();});},

this).concatAll();};


var DefaultIfEmptyObserver=function(__super__){
inherits(DefaultIfEmptyObserver,__super__);
function DefaultIfEmptyObserver(o,d){
this._o=o;
this._d=d;
this._f=false;
__super__.call(this);}


DefaultIfEmptyObserver.prototype.next=function(x){
this._f=true;
this._o.onNext(x);};


DefaultIfEmptyObserver.prototype.error=function(e){
this._o.onError(e);};


DefaultIfEmptyObserver.prototype.completed=function(){
!this._f&&this._o.onNext(this._d);
this._o.onCompleted();};


return DefaultIfEmptyObserver;}(
AbstractObserver);











observableProto.defaultIfEmpty=function(defaultValue){
var source=this;
defaultValue===undefined&&(defaultValue=null);
return new AnonymousObservable(function(o){
return source.subscribe(new DefaultIfEmptyObserver(o,defaultValue));},
source);};



function arrayIndexOfComparer(array,item,comparer){
for(var i=0,len=array.length;i<len;i++){
if(comparer(array[i],item)){return i;}}

return -1;}


function HashSet(comparer){
this.comparer=comparer;
this.set=[];}

HashSet.prototype.push=function(value){
var retValue=arrayIndexOfComparer(this.set,value,this.comparer)===-1;
retValue&&this.set.push(value);
return retValue;};


var DistinctObservable=function(__super__){
inherits(DistinctObservable,__super__);
function DistinctObservable(source,keyFn,cmpFn){
this.source=source;
this._keyFn=keyFn;
this._cmpFn=cmpFn;
__super__.call(this);}


DistinctObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new DistinctObserver(o,this._keyFn,this._cmpFn));};


return DistinctObservable;}(
ObservableBase);

var DistinctObserver=function(__super__){
inherits(DistinctObserver,__super__);
function DistinctObserver(o,keyFn,cmpFn){
this._o=o;
this._keyFn=keyFn;
this._h=new HashSet(cmpFn);
__super__.call(this);}


DistinctObserver.prototype.next=function(x){
var key=x;
if(isFunction(this._keyFn)){
key=tryCatch(this._keyFn)(x);
if(key===errorObj){return this._o.onError(key.e);}}

this._h.push(key)&&this._o.onNext(x);};


DistinctObserver.prototype.error=function(e){this._o.onError(e);};
DistinctObserver.prototype.completed=function(){this._o.onCompleted();};

return DistinctObserver;}(
AbstractObserver);













observableProto.distinct=function(keySelector,comparer){
comparer||(comparer=defaultComparer);
return new DistinctObservable(this,keySelector,comparer);};













observableProto.groupBy=function(keySelector,elementSelector){
return this.groupByUntil(keySelector,elementSelector,observableNever);};


















observableProto.groupByUntil=function(keySelector,elementSelector,durationSelector){
var source=this;
return new AnonymousObservable(function(o){
var map=new Map(),
groupDisposable=new CompositeDisposable(),
refCountDisposable=new RefCountDisposable(groupDisposable),
handleError=function(e){return function(item){item.onError(e);};};

groupDisposable.add(
source.subscribe(function(x){
var key=tryCatch(keySelector)(x);
if(key===errorObj){
map.forEach(handleError(key.e));
return o.onError(key.e);}


var fireNewMapEntry=false,writer=map.get(key);
if(writer===undefined){
writer=new Subject();
map.set(key,writer);
fireNewMapEntry=true;}


if(fireNewMapEntry){
var group=new GroupedObservable(key,writer,refCountDisposable),
durationGroup=new GroupedObservable(key,writer);
var duration=tryCatch(durationSelector)(durationGroup);
if(duration===errorObj){
map.forEach(handleError(duration.e));
return o.onError(duration.e);}


o.onNext(group);

var md=new SingleAssignmentDisposable();
groupDisposable.add(md);

md.setDisposable(duration.take(1).subscribe(
noop,
function(e){
map.forEach(handleError(e));
o.onError(e);},

function(){
if(map['delete'](key)){writer.onCompleted();}
groupDisposable.remove(md);}));}



var element=x;
if(isFunction(elementSelector)){
element=tryCatch(elementSelector)(x);
if(element===errorObj){
map.forEach(handleError(element.e));
return o.onError(element.e);}}



writer.onNext(element);},
function(e){
map.forEach(handleError(e));
o.onError(e);},
function(){
map.forEach(function(item){item.onCompleted();});
o.onCompleted();}));


return refCountDisposable;},
source);};


var MapObservable=function(__super__){
inherits(MapObservable,__super__);

function MapObservable(source,selector,thisArg){
this.source=source;
this.selector=bindCallback(selector,thisArg,3);
__super__.call(this);}


function innerMap(selector,self){
return function(x,i,o){return selector.call(this,self.selector(x,i,o),i,o);};}


MapObservable.prototype.internalMap=function(selector,thisArg){
return new MapObservable(this.source,innerMap(selector,this),thisArg);};


MapObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new InnerObserver(o,this.selector,this));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,selector,source){
this.o=o;
this.selector=selector;
this.source=source;
this.i=0;
AbstractObserver.call(this);}


InnerObserver.prototype.next=function(x){
var result=tryCatch(this.selector)(x,this.i++,this.source);
if(result===errorObj){return this.o.onError(result.e);}
this.o.onNext(result);};


InnerObserver.prototype.error=function(e){
this.o.onError(e);};


InnerObserver.prototype.completed=function(){
this.o.onCompleted();};


return MapObservable;}(

ObservableBase);







observableProto.map=observableProto.select=function(selector,thisArg){
var selectorFn=typeof selector==='function'?selector:function(){return selector;};
return this instanceof MapObservable?
this.internalMap(selectorFn,thisArg):
new MapObservable(this,selectorFn,thisArg);};


function plucker(args,len){
return function mapper(x){
var currentProp=x;
for(var i=0;i<len;i++){
var p=currentProp[args[i]];
if(typeof p!=='undefined'){
currentProp=p;}else 
{
return undefined;}}


return currentProp;};}









observableProto.pluck=function(){
var len=arguments.length,args=new Array(len);
if(len===0){throw new Error('List of properties cannot be empty.');}
for(var i=0;i<len;i++){args[i]=arguments[i];}
return this.map(plucker(args,len));};


observableProto.flatMap=observableProto.selectMany=function(selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).mergeAll();};










observableProto.flatMapObserver=observableProto.selectManyObserver=function(onNext,onError,onCompleted,thisArg){
var source=this;
return new AnonymousObservable(function(observer){
var index=0;

return source.subscribe(
function(x){
var result;
try{
result=onNext.call(thisArg,x,index++);}
catch(e){
observer.onError(e);
return;}

isPromise(result)&&(result=observableFromPromise(result));
observer.onNext(result);},

function(err){
var result;
try{
result=onError.call(thisArg,err);}
catch(e){
observer.onError(e);
return;}

isPromise(result)&&(result=observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();},

function(){
var result;
try{
result=onCompleted.call(thisArg);}
catch(e){
observer.onError(e);
return;}

isPromise(result)&&(result=observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();});},

source).mergeAll();};


Rx.Observable.prototype.flatMapLatest=function(selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).switchLatest();};

var SkipObservable=function(__super__){
inherits(SkipObservable,__super__);
function SkipObservable(source,count){
this.source=source;
this._count=count;
__super__.call(this);}


SkipObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SkipObserver(o,this._count));};


function SkipObserver(o,c){
this._o=o;
this._r=c;
AbstractObserver.call(this);}


inherits(SkipObserver,AbstractObserver);

SkipObserver.prototype.next=function(x){
if(this._r<=0){
this._o.onNext(x);}else 
{
this._r--;}};


SkipObserver.prototype.error=function(e){this._o.onError(e);};
SkipObserver.prototype.completed=function(){this._o.onCompleted();};

return SkipObservable;}(
ObservableBase);






observableProto.skip=function(count){
if(count<0){throw new ArgumentOutOfRangeError();}
return new SkipObservable(this,count);};


var SkipWhileObservable=function(__super__){
inherits(SkipWhileObservable,__super__);
function SkipWhileObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


SkipWhileObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SkipWhileObserver(o,this));};


return SkipWhileObservable;}(
ObservableBase);

var SkipWhileObserver=function(__super__){
inherits(SkipWhileObserver,__super__);

function SkipWhileObserver(o,p){
this._o=o;
this._p=p;
this._i=0;
this._r=false;
__super__.call(this);}


SkipWhileObserver.prototype.next=function(x){
if(!this._r){
var res=tryCatch(this._p._fn)(x,this._i++,this._p);
if(res===errorObj){return this._o.onError(res.e);}
this._r=!res;}

this._r&&this._o.onNext(x);};

SkipWhileObserver.prototype.error=function(e){this._o.onError(e);};
SkipWhileObserver.prototype.completed=function(){this._o.onCompleted();};

return SkipWhileObserver;}(
AbstractObserver);











observableProto.skipWhile=function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new SkipWhileObservable(this,fn);};


var TakeObservable=function(__super__){
inherits(TakeObservable,__super__);
function TakeObservable(source,count){
this.source=source;
this._count=count;
__super__.call(this);}


TakeObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new TakeObserver(o,this._count));};


function TakeObserver(o,c){
this._o=o;
this._c=c;
this._r=c;
AbstractObserver.call(this);}


inherits(TakeObserver,AbstractObserver);

TakeObserver.prototype.next=function(x){
if(this._r-->0){
this._o.onNext(x);
this._r<=0&&this._o.onCompleted();}};



TakeObserver.prototype.error=function(e){this._o.onError(e);};
TakeObserver.prototype.completed=function(){this._o.onCompleted();};

return TakeObservable;}(
ObservableBase);







observableProto.take=function(count,scheduler){
if(count<0){throw new ArgumentOutOfRangeError();}
if(count===0){return observableEmpty(scheduler);}
return new TakeObservable(this,count);};


var TakeWhileObservable=function(__super__){
inherits(TakeWhileObservable,__super__);
function TakeWhileObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


TakeWhileObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new TakeWhileObserver(o,this));};


return TakeWhileObservable;}(
ObservableBase);

var TakeWhileObserver=function(__super__){
inherits(TakeWhileObserver,__super__);

function TakeWhileObserver(o,p){
this._o=o;
this._p=p;
this._i=0;
this._r=true;
__super__.call(this);}


TakeWhileObserver.prototype.next=function(x){
if(this._r){
this._r=tryCatch(this._p._fn)(x,this._i++,this._p);
if(this._r===errorObj){return this._o.onError(this._r.e);}}

if(this._r){
this._o.onNext(x);}else 
{
this._o.onCompleted();}};


TakeWhileObserver.prototype.error=function(e){this._o.onError(e);};
TakeWhileObserver.prototype.completed=function(){this._o.onCompleted();};

return TakeWhileObserver;}(
AbstractObserver);








observableProto.takeWhile=function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new TakeWhileObservable(this,fn);};


var FilterObservable=function(__super__){
inherits(FilterObservable,__super__);

function FilterObservable(source,predicate,thisArg){
this.source=source;
this.predicate=bindCallback(predicate,thisArg,3);
__super__.call(this);}


FilterObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new InnerObserver(o,this.predicate,this));};


function innerPredicate(predicate,self){
return function(x,i,o){return self.predicate(x,i,o)&&predicate.call(this,x,i,o);};}


FilterObservable.prototype.internalFilter=function(predicate,thisArg){
return new FilterObservable(this.source,innerPredicate(predicate,this),thisArg);};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,predicate,source){
this.o=o;
this.predicate=predicate;
this.source=source;
this.i=0;
AbstractObserver.call(this);}


InnerObserver.prototype.next=function(x){
var shouldYield=tryCatch(this.predicate)(x,this.i++,this.source);
if(shouldYield===errorObj){
return this.o.onError(shouldYield.e);}

shouldYield&&this.o.onNext(x);};


InnerObserver.prototype.error=function(e){
this.o.onError(e);};


InnerObserver.prototype.completed=function(){
this.o.onCompleted();};


return FilterObservable;}(

ObservableBase);







observableProto.filter=observableProto.where=function(predicate,thisArg){
return this instanceof FilterObservable?this.internalFilter(predicate,thisArg):
new FilterObservable(this,predicate,thisArg);};


var ExtremaByObservable=function(__super__){
inherits(ExtremaByObservable,__super__);
function ExtremaByObservable(source,k,c){
this.source=source;
this._k=k;
this._c=c;
__super__.call(this);}


ExtremaByObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new ExtremaByObserver(o,this._k,this._c));};


return ExtremaByObservable;}(
ObservableBase);

var ExtremaByObserver=function(__super__){
inherits(ExtremaByObserver,__super__);
function ExtremaByObserver(o,k,c){
this._o=o;
this._k=k;
this._c=c;
this._v=null;
this._hv=false;
this._l=[];
__super__.call(this);}


ExtremaByObserver.prototype.next=function(x){
var key=tryCatch(this._k)(x);
if(key===errorObj){return this._o.onError(key.e);}
var comparison=0;
if(!this._hv){
this._hv=true;
this._v=key;}else 
{
comparison=tryCatch(this._c)(key,this._v);
if(comparison===errorObj){return this._o.onError(comparison.e);}}

if(comparison>0){
this._v=key;
this._l=[];}

if(comparison>=0){this._l.push(x);}};


ExtremaByObserver.prototype.error=function(e){
this._o.onError(e);};


ExtremaByObserver.prototype.completed=function(){
this._o.onNext(this._l);
this._o.onCompleted();};


return ExtremaByObserver;}(
AbstractObserver);

function firstOnly(x){
if(x.length===0){throw new EmptyError();}
return x[0];}


var ReduceObservable=function(__super__){
inherits(ReduceObservable,__super__);
function ReduceObservable(source,accumulator,hasSeed,seed){
this.source=source;
this.accumulator=accumulator;
this.hasSeed=hasSeed;
this.seed=seed;
__super__.call(this);}


ReduceObservable.prototype.subscribeCore=function(observer){
return this.source.subscribe(new ReduceObserver(observer,this));};


return ReduceObservable;}(
ObservableBase);

var ReduceObserver=function(__super__){
inherits(ReduceObserver,__super__);
function ReduceObserver(o,parent){
this._o=o;
this._p=parent;
this._fn=parent.accumulator;
this._hs=parent.hasSeed;
this._s=parent.seed;
this._ha=false;
this._a=null;
this._hv=false;
this._i=0;
__super__.call(this);}


ReduceObserver.prototype.next=function(x){
!this._hv&&(this._hv=true);
if(this._ha){
this._a=tryCatch(this._fn)(this._a,x,this._i,this._p);}else 
{
this._a=this._hs?tryCatch(this._fn)(this._s,x,this._i,this._p):x;
this._ha=true;}

if(this._a===errorObj){return this._o.onError(this._a.e);}
this._i++;};


ReduceObserver.prototype.error=function(e){
this._o.onError(e);};


ReduceObserver.prototype.completed=function(){
this._hv&&this._o.onNext(this._a);
!this._hv&&this._hs&&this._o.onNext(this._s);
!this._hv&&!this._hs&&this._o.onError(new EmptyError());
this._o.onCompleted();};


return ReduceObserver;}(
AbstractObserver);








observableProto.reduce=function(){
var hasSeed=false,seed,accumulator=arguments[0];
if(arguments.length===2){
hasSeed=true;
seed=arguments[1];}

return new ReduceObservable(this,accumulator,hasSeed,seed);};


var SomeObservable=function(__super__){
inherits(SomeObservable,__super__);
function SomeObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


SomeObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SomeObserver(o,this._fn,this.source));};


return SomeObservable;}(
ObservableBase);

var SomeObserver=function(__super__){
inherits(SomeObserver,__super__);

function SomeObserver(o,fn,s){
this._o=o;
this._fn=fn;
this._s=s;
this._i=0;
__super__.call(this);}


SomeObserver.prototype.next=function(x){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result===errorObj){return this._o.onError(result.e);}
if(Boolean(result)){
this._o.onNext(true);
this._o.onCompleted();}};


SomeObserver.prototype.error=function(e){this._o.onError(e);};
SomeObserver.prototype.completed=function(){
this._o.onNext(false);
this._o.onCompleted();};


return SomeObserver;}(
AbstractObserver);






observableProto.some=function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new SomeObservable(this,fn);};


var IsEmptyObservable=function(__super__){
inherits(IsEmptyObservable,__super__);
function IsEmptyObservable(source){
this.source=source;
__super__.call(this);}


IsEmptyObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new IsEmptyObserver(o));};


return IsEmptyObservable;}(
ObservableBase);

var IsEmptyObserver=function(__super__){
inherits(IsEmptyObserver,__super__);
function IsEmptyObserver(o){
this._o=o;
__super__.call(this);}


IsEmptyObserver.prototype.next=function(){
this._o.onNext(false);
this._o.onCompleted();};

IsEmptyObserver.prototype.error=function(e){this._o.onError(e);};
IsEmptyObserver.prototype.completed=function(){
this._o.onNext(true);
this._o.onCompleted();};


return IsEmptyObserver;}(
AbstractObserver);





observableProto.isEmpty=function(){
return new IsEmptyObservable(this);};


var EveryObservable=function(__super__){
inherits(EveryObservable,__super__);
function EveryObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


EveryObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new EveryObserver(o,this._fn,this.source));};


return EveryObservable;}(
ObservableBase);

var EveryObserver=function(__super__){
inherits(EveryObserver,__super__);

function EveryObserver(o,fn,s){
this._o=o;
this._fn=fn;
this._s=s;
this._i=0;
__super__.call(this);}


EveryObserver.prototype.next=function(x){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result===errorObj){return this._o.onError(result.e);}
if(!Boolean(result)){
this._o.onNext(false);
this._o.onCompleted();}};


EveryObserver.prototype.error=function(e){this._o.onError(e);};
EveryObserver.prototype.completed=function(){
this._o.onNext(true);
this._o.onCompleted();};


return EveryObserver;}(
AbstractObserver);







observableProto.every=function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new EveryObservable(this,fn);};


var IncludesObservable=function(__super__){
inherits(IncludesObservable,__super__);
function IncludesObservable(source,elem,idx){
var n=+idx||0;
Math.abs(n)===Infinity&&(n=0);

this.source=source;
this._elem=elem;
this._n=n;
__super__.call(this);}


IncludesObservable.prototype.subscribeCore=function(o){
if(this._n<0){
o.onNext(false);
o.onCompleted();
return disposableEmpty;}


return this.source.subscribe(new IncludesObserver(o,this._elem,this._n));};


return IncludesObservable;}(
ObservableBase);

var IncludesObserver=function(__super__){
inherits(IncludesObserver,__super__);
function IncludesObserver(o,elem,n){
this._o=o;
this._elem=elem;
this._n=n;
this._i=0;
__super__.call(this);}


function comparer(a,b){
return a===0&&b===0||a===b||isNaN(a)&&isNaN(b);}


IncludesObserver.prototype.next=function(x){
if(this._i++>=this._n&&comparer(x,this._elem)){
this._o.onNext(true);
this._o.onCompleted();}};


IncludesObserver.prototype.error=function(e){this._o.onError(e);};
IncludesObserver.prototype.completed=function(){this._o.onNext(false);this._o.onCompleted();};

return IncludesObserver;}(
AbstractObserver);







observableProto.includes=function(searchElement,fromIndex){
return new IncludesObservable(this,searchElement,fromIndex);};


var CountObservable=function(__super__){
inherits(CountObservable,__super__);
function CountObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


CountObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new CountObserver(o,this._fn,this.source));};


return CountObservable;}(
ObservableBase);

var CountObserver=function(__super__){
inherits(CountObserver,__super__);

function CountObserver(o,fn,s){
this._o=o;
this._fn=fn;
this._s=s;
this._i=0;
this._c=0;
__super__.call(this);}


CountObserver.prototype.next=function(x){
if(this._fn){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result===errorObj){return this._o.onError(result.e);}
Boolean(result)&&this._c++;}else 
{
this._c++;}};


CountObserver.prototype.error=function(e){this._o.onError(e);};
CountObserver.prototype.completed=function(){
this._o.onNext(this._c);
this._o.onCompleted();};


return CountObserver;}(
AbstractObserver);










observableProto.count=function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new CountObservable(this,fn);};


var IndexOfObservable=function(__super__){
inherits(IndexOfObservable,__super__);
function IndexOfObservable(source,e,n){
this.source=source;
this._e=e;
this._n=n;
__super__.call(this);}


IndexOfObservable.prototype.subscribeCore=function(o){
if(this._n<0){
o.onNext(-1);
o.onCompleted();
return disposableEmpty;}


return this.source.subscribe(new IndexOfObserver(o,this._e,this._n));};


return IndexOfObservable;}(
ObservableBase);

var IndexOfObserver=function(__super__){
inherits(IndexOfObserver,__super__);
function IndexOfObserver(o,e,n){
this._o=o;
this._e=e;
this._n=n;
this._i=0;
__super__.call(this);}


IndexOfObserver.prototype.next=function(x){
if(this._i>=this._n&&x===this._e){
this._o.onNext(this._i);
this._o.onCompleted();}

this._i++;};

IndexOfObserver.prototype.error=function(e){this._o.onError(e);};
IndexOfObserver.prototype.completed=function(){this._o.onNext(-1);this._o.onCompleted();};

return IndexOfObserver;}(
AbstractObserver);







observableProto.indexOf=function(searchElement,fromIndex){
var n=+fromIndex||0;
Math.abs(n)===Infinity&&(n=0);
return new IndexOfObservable(this,searchElement,n);};


var SumObservable=function(__super__){
inherits(SumObservable,__super__);
function SumObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


SumObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SumObserver(o,this._fn,this.source));};


return SumObservable;}(
ObservableBase);

var SumObserver=function(__super__){
inherits(SumObserver,__super__);

function SumObserver(o,fn,s){
this._o=o;
this._fn=fn;
this._s=s;
this._i=0;
this._c=0;
__super__.call(this);}


SumObserver.prototype.next=function(x){
if(this._fn){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result===errorObj){return this._o.onError(result.e);}
this._c+=result;}else 
{
this._c+=x;}};


SumObserver.prototype.error=function(e){this._o.onError(e);};
SumObserver.prototype.completed=function(){
this._o.onNext(this._c);
this._o.onCompleted();};


return SumObserver;}(
AbstractObserver);







observableProto.sum=function(keySelector,thisArg){
var fn=bindCallback(keySelector,thisArg,3);
return new SumObservable(this,fn);};











observableProto.minBy=function(keySelector,comparer){
comparer||(comparer=defaultSubComparer);
return new ExtremaByObservable(this,keySelector,function(x,y){return comparer(x,y)*-1;});};










observableProto.min=function(comparer){
return this.minBy(identity,comparer).map(function(x){return firstOnly(x);});};











observableProto.maxBy=function(keySelector,comparer){
comparer||(comparer=defaultSubComparer);
return new ExtremaByObservable(this,keySelector,comparer);};










observableProto.max=function(comparer){
return this.maxBy(identity,comparer).map(function(x){return firstOnly(x);});};


var AverageObservable=function(__super__){
inherits(AverageObservable,__super__);
function AverageObservable(source,fn){
this.source=source;
this._fn=fn;
__super__.call(this);}


AverageObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new AverageObserver(o,this._fn,this.source));};


return AverageObservable;}(
ObservableBase);

var AverageObserver=function(__super__){
inherits(AverageObserver,__super__);
function AverageObserver(o,fn,s){
this._o=o;
this._fn=fn;
this._s=s;
this._c=0;
this._t=0;
__super__.call(this);}


AverageObserver.prototype.next=function(x){
if(this._fn){
var r=tryCatch(this._fn)(x,this._c++,this._s);
if(r===errorObj){return this._o.onError(r.e);}
this._t+=r;}else 
{
this._c++;
this._t+=x;}};


AverageObserver.prototype.error=function(e){this._o.onError(e);};
AverageObserver.prototype.completed=function(){
if(this._c===0){return this._o.onError(new EmptyError());}
this._o.onNext(this._t/this._c);
this._o.onCompleted();};


return AverageObserver;}(
AbstractObserver);







observableProto.average=function(keySelector,thisArg){
var source=this,fn;
if(isFunction(keySelector)){
fn=bindCallback(keySelector,thisArg,3);}

return new AverageObservable(source,fn);};














observableProto.sequenceEqual=function(second,comparer){
var first=this;
comparer||(comparer=defaultComparer);
return new AnonymousObservable(function(o){
var donel=false,doner=false,ql=[],qr=[];
var subscription1=first.subscribe(function(x){
if(qr.length>0){
var v=qr.shift();
var equal=tryCatch(comparer)(v,x);
if(equal===errorObj){return o.onError(equal.e);}
if(!equal){
o.onNext(false);
o.onCompleted();}}else 

if(doner){
o.onNext(false);
o.onCompleted();}else 
{
ql.push(x);}},

function(e){o.onError(e);},function(){
donel=true;
if(ql.length===0){
if(qr.length>0){
o.onNext(false);
o.onCompleted();}else 
if(doner){
o.onNext(true);
o.onCompleted();}}});




(isArrayLike(second)||isIterable(second))&&(second=observableFrom(second));
isPromise(second)&&(second=observableFromPromise(second));
var subscription2=second.subscribe(function(x){
if(ql.length>0){
var v=ql.shift();
var equal=tryCatch(comparer)(v,x);
if(equal===errorObj){return o.onError(equal.e);}
if(!equal){
o.onNext(false);
o.onCompleted();}}else 

if(donel){
o.onNext(false);
o.onCompleted();}else 
{
qr.push(x);}},

function(e){o.onError(e);},function(){
doner=true;
if(qr.length===0){
if(ql.length>0){
o.onNext(false);
o.onCompleted();}else 
if(donel){
o.onNext(true);
o.onCompleted();}}});



return new BinaryDisposable(subscription1,subscription2);},
first);};


var ElementAtObservable=function(__super__){
inherits(ElementAtObservable,__super__);
function ElementAtObservable(source,i,d){
this.source=source;
this._i=i;
this._d=d;
__super__.call(this);}


ElementAtObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new ElementAtObserver(o,this._i,this._d));};


return ElementAtObservable;}(
ObservableBase);

var ElementAtObserver=function(__super__){
inherits(ElementAtObserver,__super__);

function ElementAtObserver(o,i,d){
this._o=o;
this._i=i;
this._d=d;
__super__.call(this);}


ElementAtObserver.prototype.next=function(x){
if(this._i--===0){
this._o.onNext(x);
this._o.onCompleted();}};


ElementAtObserver.prototype.error=function(e){this._o.onError(e);};
ElementAtObserver.prototype.completed=function(){
if(this._d===undefined){
this._o.onError(new ArgumentOutOfRangeError());}else 
{
this._o.onNext(this._d);
this._o.onCompleted();}};



return ElementAtObserver;}(
AbstractObserver);







observableProto.elementAt=function(index,defaultValue){
if(index<0){throw new ArgumentOutOfRangeError();}
return new ElementAtObservable(this,index,defaultValue);};


var SingleObserver=function(__super__){
inherits(SingleObserver,__super__);
function SingleObserver(o,obj,s){
this._o=o;
this._obj=obj;
this._s=s;
this._i=0;
this._hv=false;
this._v=null;
__super__.call(this);}


SingleObserver.prototype.next=function(x){
var shouldYield=false;
if(this._obj.predicate){
var res=tryCatch(this._obj.predicate)(x,this._i++,this._s);
if(res===errorObj){return this._o.onError(res.e);}
Boolean(res)&&(shouldYield=true);}else 
if(!this._obj.predicate){
shouldYield=true;}

if(shouldYield){
if(this._hv){
return this._o.onError(new Error('Sequence contains more than one matching element'));}

this._hv=true;
this._v=x;}};


SingleObserver.prototype.error=function(e){this._o.onError(e);};
SingleObserver.prototype.completed=function(){
if(this._hv){
this._o.onNext(this._v);
this._o.onCompleted();}else 

if(this._obj.defaultValue===undefined){
this._o.onError(new EmptyError());}else 
{
this._o.onNext(this._obj.defaultValue);
this._o.onCompleted();}};



return SingleObserver;}(
AbstractObserver);






observableProto.single=function(predicate,thisArg){
var obj={},source=this;
if(typeof arguments[0]==='object'){
obj=arguments[0];}else 
{
obj={
predicate:arguments[0],
thisArg:arguments[1],
defaultValue:arguments[2]};}


if(isFunction(obj.predicate)){
var fn=obj.predicate;
obj.predicate=bindCallback(fn,obj.thisArg,3);}

return new AnonymousObservable(function(o){
return source.subscribe(new SingleObserver(o,obj,source));},
source);};


var FirstObservable=function(__super__){
inherits(FirstObservable,__super__);
function FirstObservable(source,obj){
this.source=source;
this._obj=obj;
__super__.call(this);}


FirstObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new FirstObserver(o,this._obj,this.source));};


return FirstObservable;}(
ObservableBase);

var FirstObserver=function(__super__){
inherits(FirstObserver,__super__);
function FirstObserver(o,obj,s){
this._o=o;
this._obj=obj;
this._s=s;
this._i=0;
__super__.call(this);}


FirstObserver.prototype.next=function(x){
if(this._obj.predicate){
var res=tryCatch(this._obj.predicate)(x,this._i++,this._s);
if(res===errorObj){return this._o.onError(res.e);}
if(Boolean(res)){
this._o.onNext(x);
this._o.onCompleted();}}else 

if(!this._obj.predicate){
this._o.onNext(x);
this._o.onCompleted();}};


FirstObserver.prototype.error=function(e){this._o.onError(e);};
FirstObserver.prototype.completed=function(){
if(this._obj.defaultValue===undefined){
this._o.onError(new EmptyError());}else 
{
this._o.onNext(this._obj.defaultValue);
this._o.onCompleted();}};



return FirstObserver;}(
AbstractObserver);





observableProto.first=function(){
var obj={},source=this;
if(typeof arguments[0]==='object'){
obj=arguments[0];}else 
{
obj={
predicate:arguments[0],
thisArg:arguments[1],
defaultValue:arguments[2]};}


if(isFunction(obj.predicate)){
var fn=obj.predicate;
obj.predicate=bindCallback(fn,obj.thisArg,3);}

return new FirstObservable(this,obj);};


var LastObservable=function(__super__){
inherits(LastObservable,__super__);
function LastObservable(source,obj){
this.source=source;
this._obj=obj;
__super__.call(this);}


LastObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new LastObserver(o,this._obj,this.source));};


return LastObservable;}(
ObservableBase);

var LastObserver=function(__super__){
inherits(LastObserver,__super__);
function LastObserver(o,obj,s){
this._o=o;
this._obj=obj;
this._s=s;
this._i=0;
this._hv=false;
this._v=null;
__super__.call(this);}


LastObserver.prototype.next=function(x){
var shouldYield=false;
if(this._obj.predicate){
var res=tryCatch(this._obj.predicate)(x,this._i++,this._s);
if(res===errorObj){return this._o.onError(res.e);}
Boolean(res)&&(shouldYield=true);}else 
if(!this._obj.predicate){
shouldYield=true;}

if(shouldYield){
this._hv=true;
this._v=x;}};


LastObserver.prototype.error=function(e){this._o.onError(e);};
LastObserver.prototype.completed=function(){
if(this._hv){
this._o.onNext(this._v);
this._o.onCompleted();}else 

if(this._obj.defaultValue===undefined){
this._o.onError(new EmptyError());}else 
{
this._o.onNext(this._obj.defaultValue);
this._o.onCompleted();}};



return LastObserver;}(
AbstractObserver);





observableProto.last=function(){
var obj={},source=this;
if(typeof arguments[0]==='object'){
obj=arguments[0];}else 
{
obj={
predicate:arguments[0],
thisArg:arguments[1],
defaultValue:arguments[2]};}


if(isFunction(obj.predicate)){
var fn=obj.predicate;
obj.predicate=bindCallback(fn,obj.thisArg,3);}

return new LastObservable(this,obj);};


var FindValueObserver=function(__super__){
inherits(FindValueObserver,__super__);
function FindValueObserver(observer,source,callback,yieldIndex){
this._o=observer;
this._s=source;
this._cb=callback;
this._y=yieldIndex;
this._i=0;
__super__.call(this);}


FindValueObserver.prototype.next=function(x){
var shouldRun=tryCatch(this._cb)(x,this._i,this._s);
if(shouldRun===errorObj){return this._o.onError(shouldRun.e);}
if(shouldRun){
this._o.onNext(this._y?this._i:x);
this._o.onCompleted();}else 
{
this._i++;}};



FindValueObserver.prototype.error=function(e){
this._o.onError(e);};


FindValueObserver.prototype.completed=function(){
this._y&&this._o.onNext(-1);
this._o.onCompleted();};


return FindValueObserver;}(
AbstractObserver);

function findValue(source,predicate,thisArg,yieldIndex){
var callback=bindCallback(predicate,thisArg,3);
return new AnonymousObservable(function(o){
return source.subscribe(new FindValueObserver(o,source,callback,yieldIndex));},
source);}








observableProto.find=function(predicate,thisArg){
return findValue(this,predicate,thisArg,false);};









observableProto.findIndex=function(predicate,thisArg){
return findValue(this,predicate,thisArg,true);};


var ToSetObservable=function(__super__){
inherits(ToSetObservable,__super__);
function ToSetObservable(source){
this.source=source;
__super__.call(this);}


ToSetObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new ToSetObserver(o));};


return ToSetObservable;}(
ObservableBase);

var ToSetObserver=function(__super__){
inherits(ToSetObserver,__super__);
function ToSetObserver(o){
this._o=o;
this._s=new root.Set();
__super__.call(this);}


ToSetObserver.prototype.next=function(x){
this._s.add(x);};


ToSetObserver.prototype.error=function(e){
this._o.onError(e);};


ToSetObserver.prototype.completed=function(){
this._o.onNext(this._s);
this._o.onCompleted();};


return ToSetObserver;}(
AbstractObserver);





observableProto.toSet=function(){
if(typeof root.Set==='undefined'){throw new TypeError();}
return new ToSetObservable(this);};


var ToMapObservable=function(__super__){
inherits(ToMapObservable,__super__);
function ToMapObservable(source,k,e){
this.source=source;
this._k=k;
this._e=e;
__super__.call(this);}


ToMapObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new ToMapObserver(o,this._k,this._e));};


return ToMapObservable;}(
ObservableBase);

var ToMapObserver=function(__super__){
inherits(ToMapObserver,__super__);
function ToMapObserver(o,k,e){
this._o=o;
this._k=k;
this._e=e;
this._m=new root.Map();
__super__.call(this);}


ToMapObserver.prototype.next=function(x){
var key=tryCatch(this._k)(x);
if(key===errorObj){return this._o.onError(key.e);}
var elem=x;
if(this._e){
elem=tryCatch(this._e)(x);
if(elem===errorObj){return this._o.onError(elem.e);}}


this._m.set(key,elem);};


ToMapObserver.prototype.error=function(e){
this._o.onError(e);};


ToMapObserver.prototype.completed=function(){
this._o.onNext(this._m);
this._o.onCompleted();};


return ToMapObserver;}(
AbstractObserver);







observableProto.toMap=function(keySelector,elementSelector){
if(typeof root.Map==='undefined'){throw new TypeError();}
return new ToMapObservable(this,keySelector,elementSelector);};


var SliceObservable=function(__super__){
inherits(SliceObservable,__super__);
function SliceObservable(source,b,e){
this.source=source;
this._b=b;
this._e=e;
__super__.call(this);}


SliceObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SliceObserver(o,this._b,this._e));};


return SliceObservable;}(
ObservableBase);

var SliceObserver=function(__super__){
inherits(SliceObserver,__super__);

function SliceObserver(o,b,e){
this._o=o;
this._b=b;
this._e=e;
this._i=0;
__super__.call(this);}


SliceObserver.prototype.next=function(x){
if(this._i>=this._b){
if(this._e===this._i){
this._o.onCompleted();}else 
{
this._o.onNext(x);}}


this._i++;};

SliceObserver.prototype.error=function(e){this._o.onError(e);};
SliceObserver.prototype.completed=function(){this._o.onCompleted();};

return SliceObserver;}(
AbstractObserver);









observableProto.slice=function(begin,end){
var start=begin||0;
if(start<0){throw new Rx.ArgumentOutOfRangeError();}
if(typeof end==='number'&&end<start){
throw new Rx.ArgumentOutOfRangeError();}

return new SliceObservable(this,start,end);};


var LastIndexOfObservable=function(__super__){
inherits(LastIndexOfObservable,__super__);
function LastIndexOfObservable(source,e,n){
this.source=source;
this._e=e;
this._n=n;
__super__.call(this);}


LastIndexOfObservable.prototype.subscribeCore=function(o){
if(this._n<0){
o.onNext(-1);
o.onCompleted();
return disposableEmpty;}


return this.source.subscribe(new LastIndexOfObserver(o,this._e,this._n));};


return LastIndexOfObservable;}(
ObservableBase);

var LastIndexOfObserver=function(__super__){
inherits(LastIndexOfObserver,__super__);
function LastIndexOfObserver(o,e,n){
this._o=o;
this._e=e;
this._n=n;
this._v=0;
this._hv=false;
this._i=0;
__super__.call(this);}


LastIndexOfObserver.prototype.next=function(x){
if(this._i>=this._n&&x===this._e){
this._hv=true;
this._v=this._i;}

this._i++;};

LastIndexOfObserver.prototype.error=function(e){this._o.onError(e);};
LastIndexOfObserver.prototype.completed=function(){
if(this._hv){
this._o.onNext(this._v);}else 
{
this._o.onNext(-1);}

this._o.onCompleted();};


return LastIndexOfObserver;}(
AbstractObserver);







observableProto.lastIndexOf=function(searchElement,fromIndex){
var n=+fromIndex||0;
Math.abs(n)===Infinity&&(n=0);
return new LastIndexOfObservable(this,searchElement,n);};


Observable.wrap=function(fn){
function createObservable(){
return Observable.spawn.call(this,fn.apply(this,arguments));}


createObservable.__generatorFunction__=fn;
return createObservable;};


var spawn=Observable.spawn=function(){
var gen=arguments[0],self=this,args=[];
for(var i=1,len=arguments.length;i<len;i++){args.push(arguments[i]);}

return new AnonymousObservable(function(o){
var g=new CompositeDisposable();

if(isFunction(gen)){gen=gen.apply(self,args);}
if(!gen||!isFunction(gen.next)){
o.onNext(gen);
return o.onCompleted();}


function processGenerator(res){
var ret=tryCatch(gen.next).call(gen,res);
if(ret===errorObj){return o.onError(ret.e);}
next(ret);}


processGenerator();

function onError(err){
var ret=tryCatch(gen.next).call(gen,err);
if(ret===errorObj){return o.onError(ret.e);}
next(ret);}


function next(ret){
if(ret.done){
o.onNext(ret.value);
o.onCompleted();
return;}

var obs=toObservable.call(self,ret.value);
var value=null;
var hasValue=false;
if(Observable.isObservable(obs)){
g.add(obs.subscribe(function(val){
hasValue=true;
value=val;},
onError,function(){
hasValue&&processGenerator(value);}));}else 

{
onError(new TypeError('type not supported'));}}



return g;});};



function toObservable(obj){
if(!obj){return obj;}
if(Observable.isObservable(obj)){return obj;}
if(isPromise(obj)){return Observable.fromPromise(obj);}
if(isGeneratorFunction(obj)||isGenerator(obj)){return spawn.call(this,obj);}
if(isFunction(obj)){return thunkToObservable.call(this,obj);}
if(isArrayLike(obj)||isIterable(obj)){return arrayToObservable.call(this,obj);}
if(isObject(obj)){return objectToObservable.call(this,obj);}
return obj;}


function arrayToObservable(obj){
return Observable.from(obj).concatMap(function(o){
if(Observable.isObservable(o)||isObject(o)){
return toObservable.call(null,o);}else 
{
return Rx.Observable.just(o);}}).

toArray();}


function objectToObservable(obj){
var results=new obj.constructor(),keys=Object.keys(obj),observables=[];
for(var i=0,len=keys.length;i<len;i++){
var key=keys[i];
var observable=toObservable.call(this,obj[key]);

if(observable&&Observable.isObservable(observable)){
defer(observable,key);}else 
{
results[key]=obj[key];}}



return Observable.forkJoin.apply(Observable,observables).map(function(){
return results;});



function defer(observable,key){
results[key]=undefined;
observables.push(observable.map(function(next){
results[key]=next;}));}}




function thunkToObservable(fn){
var self=this;
return new AnonymousObservable(function(o){
fn.call(self,function(){
var err=arguments[0],res=arguments[1];
if(err){return o.onError(err);}
if(arguments.length>2){
var args=[];
for(var i=1,len=arguments.length;i<len;i++){args.push(arguments[i]);}
res=args;}

o.onNext(res);
o.onCompleted();});});}




function isGenerator(obj){
return isFunction(obj.next)&&isFunction(obj['throw']);}


function isGeneratorFunction(obj){
var ctor=obj.constructor;
if(!ctor){return false;}
if(ctor.name==='GeneratorFunction'||ctor.displayName==='GeneratorFunction'){return true;}
return isGenerator(ctor.prototype);}


function isObject(val){
return Object==val.constructor;}



















Observable.start=function(func,context,scheduler){
return observableToAsync(func,context,scheduler)();};









var observableToAsync=Observable.toAsync=function(func,context,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return function(){
var args=arguments,
subject=new AsyncSubject();

scheduler.schedule(null,function(){
var result;
try{
result=func.apply(context,args);}
catch(e){
subject.onError(e);
return;}

subject.onNext(result);
subject.onCompleted();});

return subject.asObservable();};};



function createCbObservable(fn,ctx,selector,args){
var o=new AsyncSubject();

args.push(createCbHandler(o,ctx,selector));
fn.apply(ctx,args);

return o.asObservable();}


function createCbHandler(o,ctx,selector){
return function handler(){
var len=arguments.length,results=new Array(len);
for(var i=0;i<len;i++){results[i]=arguments[i];}

if(isFunction(selector)){
results=tryCatch(selector).apply(ctx,results);
if(results===errorObj){return o.onError(results.e);}
o.onNext(results);}else 
{
if(results.length<=1){
o.onNext(results[0]);}else 
{
o.onNext(results);}}



o.onCompleted();};}











Observable.fromCallback=function(fn,ctx,selector){
return function(){
typeof ctx==='undefined'&&(ctx=this);

var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return createCbObservable(fn,ctx,selector,args);};};



function createNodeObservable(fn,ctx,selector,args){
var o=new AsyncSubject();

args.push(createNodeHandler(o,ctx,selector));
fn.apply(ctx,args);

return o.asObservable();}


function createNodeHandler(o,ctx,selector){
return function handler(){
var err=arguments[0];
if(err){return o.onError(err);}

var len=arguments.length,results=[];
for(var i=1;i<len;i++){results[i-1]=arguments[i];}

if(isFunction(selector)){
var results=tryCatch(selector).apply(ctx,results);
if(results===errorObj){return o.onError(results.e);}
o.onNext(results);}else 
{
if(results.length<=1){
o.onNext(results[0]);}else 
{
o.onNext(results);}}



o.onCompleted();};}










Observable.fromNodeCallback=function(fn,ctx,selector){
return function(){
typeof ctx==='undefined'&&(ctx=this);
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return createNodeObservable(fn,ctx,selector,args);};};



function isNodeList(el){
if(root.StaticNodeList){


return el instanceof root.StaticNodeList||el instanceof root.NodeList;}else 
{
return Object.prototype.toString.call(el)==='[object NodeList]';}}



function ListenDisposable(e,n,fn){
this._e=e;
this._n=n;
this._fn=fn;
this._e.addEventListener(this._n,this._fn,false);
this.isDisposed=false;}

ListenDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this._e.removeEventListener(this._n,this._fn,false);
this.isDisposed=true;}};



function createEventListener(el,eventName,handler){
var disposables=new CompositeDisposable();


var elemToString=Object.prototype.toString.call(el);
if(isNodeList(el)||elemToString==='[object HTMLCollection]'){
for(var i=0,len=el.length;i<len;i++){
disposables.add(createEventListener(el.item(i),eventName,handler));}}else 

if(el){
disposables.add(new ListenDisposable(el,eventName,handler));}


return disposables;}





Rx.config.useNativeEvents=false;

var EventObservable=function(__super__){
inherits(EventObservable,__super__);
function EventObservable(el,name,fn){
this._el=el;
this._n=name;
this._fn=fn;
__super__.call(this);}


function createHandler(o,fn){
return function handler(){
var results=arguments[0];
if(isFunction(fn)){
results=tryCatch(fn).apply(null,arguments);
if(results===errorObj){return o.onError(results.e);}}

o.onNext(results);};}



EventObservable.prototype.subscribeCore=function(o){
return createEventListener(
this._el,
this._n,
createHandler(o,this._fn));};


return EventObservable;}(
ObservableBase);








Observable.fromEvent=function(element,eventName,selector){

if(element.addListener){
return fromEventPattern(
function(h){element.addListener(eventName,h);},
function(h){element.removeListener(eventName,h);},
selector);}



if(!Rx.config.useNativeEvents){

if(typeof element.on==='function'&&typeof element.off==='function'){
return fromEventPattern(
function(h){element.on(eventName,h);},
function(h){element.off(eventName,h);},
selector);}}



return new EventObservable(element,eventName,selector).publish().refCount();};


var EventPatternObservable=function(__super__){
inherits(EventPatternObservable,__super__);
function EventPatternObservable(add,del,fn){
this._add=add;
this._del=del;
this._fn=fn;
__super__.call(this);}


function createHandler(o,fn){
return function handler(){
var results=arguments[0];
if(isFunction(fn)){
results=tryCatch(fn).apply(null,arguments);
if(results===errorObj){return o.onError(results.e);}}

o.onNext(results);};}



EventPatternObservable.prototype.subscribeCore=function(o){
var fn=createHandler(o,this._fn);
var returnValue=this._add(fn);
return new EventPatternDisposable(this._del,fn,returnValue);};


function EventPatternDisposable(del,fn,ret){
this._del=del;
this._fn=fn;
this._ret=ret;
this.isDisposed=false;}


EventPatternDisposable.prototype.dispose=function(){
if(!this.isDisposed){
isFunction(this._del)&&this._del(this._fn,this._ret);}};



return EventPatternObservable;}(
ObservableBase);








var fromEventPattern=Observable.fromEventPattern=function(addHandler,removeHandler,selector){
return new EventPatternObservable(addHandler,removeHandler,selector).publish().refCount();};







Observable.startAsync=function(functionAsync){
var promise=tryCatch(functionAsync)();
if(promise===errorObj){return observableThrow(promise.e);}
return observableFromPromise(promise);};


var PausableObservable=function(__super__){
inherits(PausableObservable,__super__);
function PausableObservable(source,pauser){
this.source=source;
this.controller=new Subject();

if(pauser&&pauser.subscribe){
this.pauser=this.controller.merge(pauser);}else 
{
this.pauser=this.controller;}


__super__.call(this);}


PausableObservable.prototype._subscribe=function(o){
var conn=this.source.publish(),
subscription=conn.subscribe(o),
connection=disposableEmpty;

var pausable=this.pauser.distinctUntilChanged().subscribe(function(b){
if(b){
connection=conn.connect();}else 
{
connection.dispose();
connection=disposableEmpty;}});



return new NAryDisposable([subscription,connection,pausable]);};


PausableObservable.prototype.pause=function(){
this.controller.onNext(false);};


PausableObservable.prototype.resume=function(){
this.controller.onNext(true);};


return PausableObservable;}(

Observable);









observableProto.pausable=function(pauser){
return new PausableObservable(this,pauser);};


function combineLatestSource(source,subject,resultSelector){
return new AnonymousObservable(function(o){
var hasValue=[false,false],
hasValueAll=false,
isDone=false,
values=new Array(2),
err;

function next(x,i){
values[i]=x;
hasValue[i]=true;
if(hasValueAll||(hasValueAll=hasValue.every(identity))){
if(err){return o.onError(err);}
var res=tryCatch(resultSelector).apply(null,values);
if(res===errorObj){return o.onError(res.e);}
o.onNext(res);}

isDone&&values[1]&&o.onCompleted();}


return new BinaryDisposable(
source.subscribe(
function(x){
next(x,0);},

function(e){
if(values[1]){
o.onError(e);}else 
{
err=e;}},


function(){
isDone=true;
values[1]&&o.onCompleted();}),

subject.subscribe(
function(x){
next(x,1);},

function(e){o.onError(e);},
function(){
isDone=true;
next(true,1);}));},


source);}


var PausableBufferedObservable=function(__super__){
inherits(PausableBufferedObservable,__super__);
function PausableBufferedObservable(source,pauser){
this.source=source;
this.controller=new Subject();

if(pauser&&pauser.subscribe){
this.pauser=this.controller.merge(pauser);}else 
{
this.pauser=this.controller;}


__super__.call(this);}


PausableBufferedObservable.prototype._subscribe=function(o){
var q=[],previousShouldFire;

function drainQueue(){while(q.length>0){o.onNext(q.shift());}}

var subscription=
combineLatestSource(
this.source,
this.pauser.startWith(false).distinctUntilChanged(),
function(data,shouldFire){
return {data:data,shouldFire:shouldFire};}).

subscribe(
function(results){
if(previousShouldFire!==undefined&&results.shouldFire!==previousShouldFire){
previousShouldFire=results.shouldFire;

if(results.shouldFire){drainQueue();}}else 
{
previousShouldFire=results.shouldFire;

if(results.shouldFire){
o.onNext(results.data);}else 
{
q.push(results.data);}}},



function(err){
drainQueue();
o.onError(err);},

function(){
drainQueue();
o.onCompleted();});


return subscription;};


PausableBufferedObservable.prototype.pause=function(){
this.controller.onNext(false);};


PausableBufferedObservable.prototype.resume=function(){
this.controller.onNext(true);};


return PausableBufferedObservable;}(

Observable);










observableProto.pausableBuffered=function(pauser){
return new PausableBufferedObservable(this,pauser);};


var ControlledObservable=function(__super__){
inherits(ControlledObservable,__super__);
function ControlledObservable(source,enableQueue,scheduler){
__super__.call(this);
this.subject=new ControlledSubject(enableQueue,scheduler);
this.source=source.multicast(this.subject).refCount();}


ControlledObservable.prototype._subscribe=function(o){
return this.source.subscribe(o);};


ControlledObservable.prototype.request=function(numberOfItems){
return this.subject.request(numberOfItems==null?-1:numberOfItems);};


return ControlledObservable;}(

Observable);

var ControlledSubject=function(__super__){
inherits(ControlledSubject,__super__);
function ControlledSubject(enableQueue,scheduler){
enableQueue==null&&(enableQueue=true);

__super__.call(this);
this.subject=new Subject();
this.enableQueue=enableQueue;
this.queue=enableQueue?[]:null;
this.requestedCount=0;
this.requestedDisposable=null;
this.error=null;
this.hasFailed=false;
this.hasCompleted=false;
this.scheduler=scheduler||currentThreadScheduler;}


addProperties(ControlledSubject.prototype,Observer,{
_subscribe:function(o){
return this.subject.subscribe(o);},

onCompleted:function(){
this.hasCompleted=true;
if(!this.enableQueue||this.queue.length===0){
this.subject.onCompleted();
this.disposeCurrentRequest();}else 
{
this.queue.push(Notification.createOnCompleted());}},


onError:function(error){
this.hasFailed=true;
this.error=error;
if(!this.enableQueue||this.queue.length===0){
this.subject.onError(error);
this.disposeCurrentRequest();}else 
{
this.queue.push(Notification.createOnError(error));}},


onNext:function(value){
if(this.requestedCount<=0){
this.enableQueue&&this.queue.push(Notification.createOnNext(value));}else 
{
this.requestedCount--===0&&this.disposeCurrentRequest();
this.subject.onNext(value);}},


_processRequest:function(numberOfItems){
if(this.enableQueue){
while(this.queue.length>0&&(numberOfItems>0||this.queue[0].kind!=='N')){
var first=this.queue.shift();
first.accept(this.subject);
if(first.kind==='N'){
numberOfItems--;}else 
{
this.disposeCurrentRequest();
this.queue=[];}}}




return numberOfItems;},

request:function(number){
this.disposeCurrentRequest();
var self=this;

this.requestedDisposable=this.scheduler.schedule(number,
function(s,i){
var remaining=self._processRequest(i);
var stopped=self.hasCompleted||self.hasFailed;
if(!stopped&&remaining>0){
self.requestedCount=remaining;

return disposableCreate(function(){
self.requestedCount=0;});}});







return this.requestedDisposable;},

disposeCurrentRequest:function(){
if(this.requestedDisposable){
this.requestedDisposable.dispose();
this.requestedDisposable=null;}}});




return ControlledSubject;}(
Observable);










observableProto.controlled=function(enableQueue,scheduler){

if(enableQueue&&isScheduler(enableQueue)){
scheduler=enableQueue;
enableQueue=true;}


if(enableQueue==null){enableQueue=true;}
return new ControlledObservable(this,enableQueue,scheduler);};


var StopAndWaitObservable=function(__super__){
inherits(StopAndWaitObservable,__super__);
function StopAndWaitObservable(source){
__super__.call(this);
this.source=source;}


function scheduleMethod(s,self){
self.source.request(1);}


StopAndWaitObservable.prototype._subscribe=function(o){
this.subscription=this.source.subscribe(new StopAndWaitObserver(o,this,this.subscription));
return new BinaryDisposable(
this.subscription,
defaultScheduler.schedule(this,scheduleMethod));};



var StopAndWaitObserver=function(__sub__){
inherits(StopAndWaitObserver,__sub__);
function StopAndWaitObserver(observer,observable,cancel){
__sub__.call(this);
this.observer=observer;
this.observable=observable;
this.cancel=cancel;
this.scheduleDisposable=null;}


StopAndWaitObserver.prototype.completed=function(){
this.observer.onCompleted();
this.dispose();};


StopAndWaitObserver.prototype.error=function(error){
this.observer.onError(error);
this.dispose();};


function innerScheduleMethod(s,self){
self.observable.source.request(1);}


StopAndWaitObserver.prototype.next=function(value){
this.observer.onNext(value);
this.scheduleDisposable=defaultScheduler.schedule(this,innerScheduleMethod);};


StopAndWaitObservable.dispose=function(){
this.observer=null;
if(this.cancel){
this.cancel.dispose();
this.cancel=null;}

if(this.scheduleDisposable){
this.scheduleDisposable.dispose();
this.scheduleDisposable=null;}

__sub__.prototype.dispose.call(this);};


return StopAndWaitObserver;}(
AbstractObserver);

return StopAndWaitObservable;}(
Observable);






ControlledObservable.prototype.stopAndWait=function(){
return new StopAndWaitObservable(this);};


var WindowedObservable=function(__super__){
inherits(WindowedObservable,__super__);
function WindowedObservable(source,windowSize){
__super__.call(this);
this.source=source;
this.windowSize=windowSize;}


function scheduleMethod(s,self){
self.source.request(self.windowSize);}


WindowedObservable.prototype._subscribe=function(o){
this.subscription=this.source.subscribe(new WindowedObserver(o,this,this.subscription));
return new BinaryDisposable(
this.subscription,
defaultScheduler.schedule(this,scheduleMethod));};



var WindowedObserver=function(__sub__){
inherits(WindowedObserver,__sub__);
function WindowedObserver(observer,observable,cancel){
this.observer=observer;
this.observable=observable;
this.cancel=cancel;
this.received=0;
this.scheduleDisposable=null;
__sub__.call(this);}


WindowedObserver.prototype.completed=function(){
this.observer.onCompleted();
this.dispose();};


WindowedObserver.prototype.error=function(error){
this.observer.onError(error);
this.dispose();};


function innerScheduleMethod(s,self){
self.observable.source.request(self.observable.windowSize);}


WindowedObserver.prototype.next=function(value){
this.observer.onNext(value);
this.received=++this.received%this.observable.windowSize;
this.received===0&&(this.scheduleDisposable=defaultScheduler.schedule(this,innerScheduleMethod));};


WindowedObserver.prototype.dispose=function(){
this.observer=null;
if(this.cancel){
this.cancel.dispose();
this.cancel=null;}

if(this.scheduleDisposable){
this.scheduleDisposable.dispose();
this.scheduleDisposable=null;}

__sub__.prototype.dispose.call(this);};


return WindowedObserver;}(
AbstractObserver);

return WindowedObservable;}(
Observable);






ControlledObservable.prototype.windowed=function(windowSize){
return new WindowedObservable(this,windowSize);};







observableProto.pipe=function(dest){
var source=this.pausableBuffered();

function onDrain(){
source.resume();}


dest.addListener('drain',onDrain);

source.subscribe(
function(x){
!dest.write(String(x))&&source.pause();},

function(err){
dest.emit('error',err);},

function(){

!dest._isStdio&&dest.end();
dest.removeListener('drain',onDrain);});


source.resume();

return dest;};


var MulticastObservable=function(__super__){
inherits(MulticastObservable,__super__);
function MulticastObservable(source,fn1,fn2){
this.source=source;
this._fn1=fn1;
this._fn2=fn2;
__super__.call(this);}


MulticastObservable.prototype.subscribeCore=function(o){
var connectable=this.source.multicast(this._fn1());
return new BinaryDisposable(this._fn2(connectable).subscribe(o),connectable.connect());};


return MulticastObservable;}(
ObservableBase);


















observableProto.multicast=function(subjectOrSubjectSelector,selector){
return isFunction(subjectOrSubjectSelector)?
new MulticastObservable(this,subjectOrSubjectSelector,selector):
new ConnectableObservable(this,subjectOrSubjectSelector);};













observableProto.publish=function(selector){
return selector&&isFunction(selector)?
this.multicast(function(){return new Subject();},selector):
this.multicast(new Subject());};







observableProto.share=function(){
return this.publish().refCount();};













observableProto.publishLast=function(selector){
return selector&&isFunction(selector)?
this.multicast(function(){return new AsyncSubject();},selector):
this.multicast(new AsyncSubject());};














observableProto.publishValue=function(initialValueOrSelector,initialValue){
return arguments.length===2?
this.multicast(function(){
return new BehaviorSubject(initialValue);},
initialValueOrSelector):
this.multicast(new BehaviorSubject(initialValueOrSelector));};








observableProto.shareValue=function(initialValue){
return this.publishValue(initialValue).refCount();};


















observableProto.replay=function(selector,bufferSize,windowSize,scheduler){
return selector&&isFunction(selector)?
this.multicast(function(){return new ReplaySubject(bufferSize,windowSize,scheduler);},selector):
this.multicast(new ReplaySubject(bufferSize,windowSize,scheduler));};

















observableProto.shareReplay=function(bufferSize,windowSize,scheduler){
return this.replay(null,bufferSize,windowSize,scheduler).refCount();};


var InnerSubscription=function(s,o){
this._s=s;
this._o=o;};


InnerSubscription.prototype.dispose=function(){
if(!this._s.isDisposed&&this._o!==null){
var idx=this._s.observers.indexOf(this._o);
this._s.observers.splice(idx,1);
this._o=null;}};



var RefCountObservable=function(__super__){
inherits(RefCountObservable,__super__);
function RefCountObservable(source){
this.source=source;
this._count=0;
this._connectableSubscription=null;
__super__.call(this);}


RefCountObservable.prototype.subscribeCore=function(o){
var subscription=this.source.subscribe(o);
++this._count===1&&(this._connectableSubscription=this.source.connect());
return new RefCountDisposable(this,subscription);};


function RefCountDisposable(p,s){
this._p=p;
this._s=s;
this.isDisposed=false;}


RefCountDisposable.prototype.dispose=function(){
if(!this.isDisposed){
this.isDisposed=true;
this._s.dispose();
--this._p._count===0&&this._p._connectableSubscription.dispose();}};



return RefCountObservable;}(
ObservableBase);

var ConnectableObservable=Rx.ConnectableObservable=function(__super__){
inherits(ConnectableObservable,__super__);
function ConnectableObservable(source,subject){
this.source=source;
this._connection=null;
this._source=source.asObservable();
this._subject=subject;
__super__.call(this);}


function ConnectDisposable(parent,subscription){
this._p=parent;
this._s=subscription;}


ConnectDisposable.prototype.dispose=function(){
if(this._s){
this._s.dispose();
this._s=null;
this._p._connection=null;}};



ConnectableObservable.prototype.connect=function(){
if(!this._connection){
var subscription=this._source.subscribe(this._subject);
this._connection=new ConnectDisposable(this,subscription);}

return this._connection;};


ConnectableObservable.prototype._subscribe=function(o){
return this._subject.subscribe(o);};


ConnectableObservable.prototype.refCount=function(){
return new RefCountObservable(this);};


return ConnectableObservable;}(
Observable);






observableProto.singleInstance=function(){
var source=this,hasObservable=false,observable;

function getObservable(){
if(!hasObservable){
hasObservable=true;
observable=source['finally'](function(){hasObservable=false;}).publish().refCount();}

return observable;}


return new AnonymousObservable(function(o){
return getObservable().subscribe(o);});};












observableProto.join=function(right,leftDurationSelector,rightDurationSelector,resultSelector){
var left=this;
return new AnonymousObservable(function(o){
var group=new CompositeDisposable();
var leftDone=false,rightDone=false;
var leftId=0,rightId=0;
var leftMap=new Map(),rightMap=new Map();
var handleError=function(e){o.onError(e);};

group.add(left.subscribe(
function(value){
var id=leftId++,md=new SingleAssignmentDisposable();

leftMap.set(id,value);
group.add(md);

var duration=tryCatch(leftDurationSelector)(value);
if(duration===errorObj){return o.onError(duration.e);}

md.setDisposable(duration.take(1).subscribe(
noop,
handleError,
function(){
leftMap['delete'](id)&&leftMap.size===0&&leftDone&&o.onCompleted();
group.remove(md);}));


rightMap.forEach(function(v){
var result=tryCatch(resultSelector)(value,v);
if(result===errorObj){return o.onError(result.e);}
o.onNext(result);});},


handleError,
function(){
leftDone=true;
(rightDone||leftMap.size===0)&&o.onCompleted();}));



group.add(right.subscribe(
function(value){
var id=rightId++,md=new SingleAssignmentDisposable();

rightMap.set(id,value);
group.add(md);

var duration=tryCatch(rightDurationSelector)(value);
if(duration===errorObj){return o.onError(duration.e);}

md.setDisposable(duration.take(1).subscribe(
noop,
handleError,
function(){
rightMap['delete'](id)&&rightMap.size===0&&rightDone&&o.onCompleted();
group.remove(md);}));


leftMap.forEach(function(v){
var result=tryCatch(resultSelector)(v,value);
if(result===errorObj){return o.onError(result.e);}
o.onNext(result);});},


handleError,
function(){
rightDone=true;
(leftDone||rightMap.size===0)&&o.onCompleted();}));


return group;},
left);};











observableProto.groupJoin=function(right,leftDurationSelector,rightDurationSelector,resultSelector){
var left=this;
return new AnonymousObservable(function(o){
var group=new CompositeDisposable();
var r=new RefCountDisposable(group);
var leftMap=new Map(),rightMap=new Map();
var leftId=0,rightId=0;
var handleError=function(e){return function(v){v.onError(e);};};

function handleError(e){};

group.add(left.subscribe(
function(value){
var s=new Subject();
var id=leftId++;
leftMap.set(id,s);

var result=tryCatch(resultSelector)(value,addRef(s,r));
if(result===errorObj){
leftMap.forEach(handleError(result.e));
return o.onError(result.e);}

o.onNext(result);

rightMap.forEach(function(v){s.onNext(v);});

var md=new SingleAssignmentDisposable();
group.add(md);

var duration=tryCatch(leftDurationSelector)(value);
if(duration===errorObj){
leftMap.forEach(handleError(duration.e));
return o.onError(duration.e);}


md.setDisposable(duration.take(1).subscribe(
noop,
function(e){
leftMap.forEach(handleError(e));
o.onError(e);},

function(){
leftMap['delete'](id)&&s.onCompleted();
group.remove(md);}));},


function(e){
leftMap.forEach(handleError(e));
o.onError(e);},

function(){o.onCompleted();}));


group.add(right.subscribe(
function(value){
var id=rightId++;
rightMap.set(id,value);

var md=new SingleAssignmentDisposable();
group.add(md);

var duration=tryCatch(rightDurationSelector)(value);
if(duration===errorObj){
leftMap.forEach(handleError(duration.e));
return o.onError(duration.e);}


md.setDisposable(duration.take(1).subscribe(
noop,
function(e){
leftMap.forEach(handleError(e));
o.onError(e);},

function(){
rightMap['delete'](id);
group.remove(md);}));


leftMap.forEach(function(v){v.onNext(value);});},

function(e){
leftMap.forEach(handleError(e));
o.onError(e);}));



return r;},
left);};


function toArray(x){return x.toArray();}







observableProto.buffer=function(){
return this.window.apply(this,arguments).
flatMap(toArray);};









observableProto.window=function(windowOpeningsOrClosingSelector,windowClosingSelector){
if(arguments.length===1&&typeof arguments[0]!=='function'){
return observableWindowWithBoundaries.call(this,windowOpeningsOrClosingSelector);}

return typeof windowOpeningsOrClosingSelector==='function'?
observableWindowWithClosingSelector.call(this,windowOpeningsOrClosingSelector):
observableWindowWithOpenings.call(this,windowOpeningsOrClosingSelector,windowClosingSelector);};


function observableWindowWithOpenings(windowOpenings,windowClosingSelector){
return windowOpenings.groupJoin(this,windowClosingSelector,observableEmpty,function(_,win){
return win;});}



function observableWindowWithBoundaries(windowBoundaries){
var source=this;
return new AnonymousObservable(function(observer){
var win=new Subject(),
d=new CompositeDisposable(),
r=new RefCountDisposable(d);

observer.onNext(addRef(win,r));

d.add(source.subscribe(function(x){
win.onNext(x);},
function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
observer.onCompleted();}));


isPromise(windowBoundaries)&&(windowBoundaries=observableFromPromise(windowBoundaries));

d.add(windowBoundaries.subscribe(function(w){
win.onCompleted();
win=new Subject();
observer.onNext(addRef(win,r));},
function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
observer.onCompleted();}));


return r;},
source);}


function observableWindowWithClosingSelector(windowClosingSelector){
var source=this;
return new AnonymousObservable(function(observer){
var m=new SerialDisposable(),
d=new CompositeDisposable(m),
r=new RefCountDisposable(d),
win=new Subject();
observer.onNext(addRef(win,r));
d.add(source.subscribe(function(x){
win.onNext(x);},
function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
observer.onCompleted();}));


function createWindowClose(){
var windowClose;
try{
windowClose=windowClosingSelector();}
catch(e){
observer.onError(e);
return;}


isPromise(windowClose)&&(windowClose=observableFromPromise(windowClose));

var m1=new SingleAssignmentDisposable();
m.setDisposable(m1);
m1.setDisposable(windowClose.take(1).subscribe(noop,function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
win=new Subject();
observer.onNext(addRef(win,r));
createWindowClose();}));}



createWindowClose();
return r;},
source);}


var PairwiseObservable=function(__super__){
inherits(PairwiseObservable,__super__);
function PairwiseObservable(source){
this.source=source;
__super__.call(this);}


PairwiseObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new PairwiseObserver(o));};


return PairwiseObservable;}(
ObservableBase);

var PairwiseObserver=function(__super__){
inherits(PairwiseObserver,__super__);
function PairwiseObserver(o){
this._o=o;
this._p=null;
this._hp=false;}


PairwiseObserver.prototype.next=function(x){
if(this._hp){
this._o.onNext([this._p,x]);}else 
{
this._hp=true;}

this._p=x;};

PairwiseObserver.prototype.error=function(err){this._o.onError(err);};
PairwiseObserver.prototype.completed=function(){this._o.onCompleted();};

return PairwiseObserver;}(
AbstractObserver);







observableProto.pairwise=function(){
return new PairwiseObservable(this);};















observableProto.partition=function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return [
this.filter(predicate,thisArg),
this.filter(function(x,i,o){return !fn(x,i,o);})];};



var WhileEnumerable=function(__super__){
inherits(WhileEnumerable,__super__);
function WhileEnumerable(c,s){
this.c=c;
this.s=s;}

WhileEnumerable.prototype[$iterator$]=function(){
var self=this;
return {
next:function(){
return self.c()?
{done:false,value:self.s}:
{done:true,value:void 0};}};};



return WhileEnumerable;}(
Enumerable);

function enumerableWhile(condition,source){
return new WhileEnumerable(condition,source);}









observableProto.letBind=observableProto['let']=function(func){
return func(this);};














Observable['if']=function(condition,thenSource,elseSourceOrScheduler){
return observableDefer(function(){
elseSourceOrScheduler||(elseSourceOrScheduler=observableEmpty());

isPromise(thenSource)&&(thenSource=observableFromPromise(thenSource));
isPromise(elseSourceOrScheduler)&&(elseSourceOrScheduler=observableFromPromise(elseSourceOrScheduler));


typeof elseSourceOrScheduler.now==='function'&&(elseSourceOrScheduler=observableEmpty(elseSourceOrScheduler));
return condition()?thenSource:elseSourceOrScheduler;});};










Observable['for']=Observable.forIn=function(sources,resultSelector,thisArg){
return enumerableOf(sources,resultSelector,thisArg).concat();};










var observableWhileDo=Observable['while']=Observable.whileDo=function(condition,source){
isPromise(source)&&(source=observableFromPromise(source));
return enumerableWhile(condition,source).concat();};









observableProto.doWhile=function(condition){
return observableConcat([this,observableWhileDo(condition,this)]);};










Observable['case']=function(selector,sources,defaultSourceOrScheduler){
return observableDefer(function(){
isPromise(defaultSourceOrScheduler)&&(defaultSourceOrScheduler=observableFromPromise(defaultSourceOrScheduler));
defaultSourceOrScheduler||(defaultSourceOrScheduler=observableEmpty());

isScheduler(defaultSourceOrScheduler)&&(defaultSourceOrScheduler=observableEmpty(defaultSourceOrScheduler));

var result=sources[selector()];
isPromise(result)&&(result=observableFromPromise(result));

return result||defaultSourceOrScheduler;});};



var ExpandObservable=function(__super__){
inherits(ExpandObservable,__super__);
function ExpandObservable(source,fn,scheduler){
this.source=source;
this._fn=fn;
this._scheduler=scheduler;
__super__.call(this);}


function scheduleRecursive(args,recurse){
var state=args[0],self=args[1];
var work;
if(state.q.length>0){
work=state.q.shift();}else 
{
state.isAcquired=false;
return;}

var m1=new SingleAssignmentDisposable();
state.d.add(m1);
m1.setDisposable(work.subscribe(new ExpandObserver(state,self,m1)));
recurse([state,self]);}


ExpandObservable.prototype._ensureActive=function(state){
var isOwner=false;
if(state.q.length>0){
isOwner=!state.isAcquired;
state.isAcquired=true;}

isOwner&&state.m.setDisposable(this._scheduler.scheduleRecursive([state,this],scheduleRecursive));};


ExpandObservable.prototype.subscribeCore=function(o){
var m=new SerialDisposable(),
d=new CompositeDisposable(m),
state={
q:[],
m:m,
d:d,
activeCount:0,
isAcquired:false,
o:o};


state.q.push(this.source);
state.activeCount++;
this._ensureActive(state);
return d;};


return ExpandObservable;}(
ObservableBase);

var ExpandObserver=function(__super__){
inherits(ExpandObserver,__super__);
function ExpandObserver(state,parent,m1){
this._s=state;
this._p=parent;
this._m1=m1;
__super__.call(this);}


ExpandObserver.prototype.next=function(x){
this._s.o.onNext(x);
var result=tryCatch(this._p._fn)(x);
if(result===errorObj){return this._s.o.onError(result.e);}
this._s.q.push(result);
this._s.activeCount++;
this._p._ensureActive(this._s);};


ExpandObserver.prototype.error=function(e){
this._s.o.onError(e);};


ExpandObserver.prototype.completed=function(){
this._s.d.remove(this._m1);
this._s.activeCount--;
this._s.activeCount===0&&this._s.o.onCompleted();};


return ExpandObserver;}(
AbstractObserver);








observableProto.expand=function(selector,scheduler){
isScheduler(scheduler)||(scheduler=currentThreadScheduler);
return new ExpandObservable(this,selector,scheduler);};


function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
return args;}


var ForkJoinObservable=function(__super__){
inherits(ForkJoinObservable,__super__);
function ForkJoinObservable(sources,cb){
this._sources=sources;
this._cb=cb;
__super__.call(this);}


ForkJoinObservable.prototype.subscribeCore=function(o){
if(this._sources.length===0){
o.onCompleted();
return disposableEmpty;}


var count=this._sources.length;
var state={
finished:false,
hasResults:new Array(count),
hasCompleted:new Array(count),
results:new Array(count)};


var subscriptions=new CompositeDisposable();
for(var i=0,len=this._sources.length;i<len;i++){
var source=this._sources[i];
isPromise(source)&&(source=observableFromPromise(source));
subscriptions.add(source.subscribe(new ForkJoinObserver(o,state,i,this._cb,subscriptions)));}


return subscriptions;};


return ForkJoinObservable;}(
ObservableBase);

var ForkJoinObserver=function(__super__){
inherits(ForkJoinObserver,__super__);
function ForkJoinObserver(o,s,i,cb,subs){
this._o=o;
this._s=s;
this._i=i;
this._cb=cb;
this._subs=subs;
__super__.call(this);}


ForkJoinObserver.prototype.next=function(x){
if(!this._s.finished){
this._s.hasResults[this._i]=true;
this._s.results[this._i]=x;}};



ForkJoinObserver.prototype.error=function(e){
this._s.finished=true;
this._o.onError(e);
this._subs.dispose();};


ForkJoinObserver.prototype.completed=function(){
if(!this._s.finished){
if(!this._s.hasResults[this._i]){
return this._o.onCompleted();}

this._s.hasCompleted[this._i]=true;
for(var i=0;i<this._s.results.length;i++){
if(!this._s.hasCompleted[i]){return;}}

this._s.finished=true;

var res=tryCatch(this._cb).apply(null,this._s.results);
if(res===errorObj){return this._o.onError(res.e);}

this._o.onNext(res);
this._o.onCompleted();}};



return ForkJoinObserver;}(
AbstractObserver);









Observable.forkJoin=function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
var resultSelector=isFunction(args[len-1])?args.pop():argumentsToArray;
Array.isArray(args[0])&&(args=args[0]);
return new ForkJoinObservable(args,resultSelector);};








observableProto.forkJoin=function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}
if(Array.isArray(args[0])){
args[0].unshift(this);}else 
{
args.unshift(this);}

return Observable.forkJoin.apply(null,args);};








observableProto.manySelect=observableProto.extend=function(selector,scheduler){
isScheduler(scheduler)||(scheduler=Rx.Scheduler.immediate);
var source=this;
return observableDefer(function(){
var chain;

return source.
map(function(x){
var curr=new ChainObservable(x);

chain&&chain.onNext(x);
chain=curr;

return curr;}).

tap(
noop,
function(e){chain&&chain.onError(e);},
function(){chain&&chain.onCompleted();}).

observeOn(scheduler).
map(selector);},
source);};


var ChainObservable=function(__super__){
inherits(ChainObservable,__super__);
function ChainObservable(head){
__super__.call(this);
this.head=head;
this.tail=new AsyncSubject();}


addProperties(ChainObservable.prototype,Observer,{
_subscribe:function(o){
var g=new CompositeDisposable();
g.add(currentThreadScheduler.schedule(this,function(_,self){
o.onNext(self.head);
g.add(self.tail.mergeAll().subscribe(o));}));


return g;},

onCompleted:function(){
this.onNext(Observable.empty());},

onError:function(e){
this.onNext(Observable['throw'](e));},

onNext:function(v){
this.tail.onNext(v);
this.tail.onCompleted();}});



return ChainObservable;}(

Observable);

var Map=root.Map||function(){
function Map(){
this.size=0;
this._values=[];
this._keys=[];}


Map.prototype['delete']=function(key){
var i=this._keys.indexOf(key);
if(i===-1){return false;}
this._values.splice(i,1);
this._keys.splice(i,1);
this.size--;
return true;};


Map.prototype.get=function(key){
var i=this._keys.indexOf(key);
return i===-1?undefined:this._values[i];};


Map.prototype.set=function(key,value){
var i=this._keys.indexOf(key);
if(i===-1){
this._keys.push(key);
this._values.push(value);
this.size++;}else 
{
this._values[i]=value;}

return this;};


Map.prototype.forEach=function(cb,thisArg){
for(var i=0;i<this.size;i++){
cb.call(thisArg,this._values[i],this._keys[i]);}};



return Map;}();






function Pattern(patterns){
this.patterns=patterns;}







Pattern.prototype.and=function(other){
return new Pattern(this.patterns.concat(other));};







Pattern.prototype.thenDo=function(selector){
return new Plan(this,selector);};


function Plan(expression,selector){
this.expression=expression;
this.selector=selector;}


function handleOnError(o){return function(e){o.onError(e);};}
function handleOnNext(self,observer){
return function onNext(){
var result=tryCatch(self.selector).apply(self,arguments);
if(result===errorObj){return observer.onError(result.e);}
observer.onNext(result);};}



Plan.prototype.activate=function(externalSubscriptions,observer,deactivate){
var joinObservers=[],errHandler=handleOnError(observer);
for(var i=0,len=this.expression.patterns.length;i<len;i++){
joinObservers.push(planCreateObserver(externalSubscriptions,this.expression.patterns[i],errHandler));}

var activePlan=new ActivePlan(joinObservers,handleOnNext(this,observer),function(){
for(var j=0,jlen=joinObservers.length;j<jlen;j++){
joinObservers[j].removeActivePlan(activePlan);}

deactivate(activePlan);});

for(i=0,len=joinObservers.length;i<len;i++){
joinObservers[i].addActivePlan(activePlan);}

return activePlan;};


function planCreateObserver(externalSubscriptions,observable,onError){
var entry=externalSubscriptions.get(observable);
if(!entry){
var observer=new JoinObserver(observable,onError);
externalSubscriptions.set(observable,observer);
return observer;}

return entry;}


function ActivePlan(joinObserverArray,onNext,onCompleted){
this.joinObserverArray=joinObserverArray;
this.onNext=onNext;
this.onCompleted=onCompleted;
this.joinObservers=new Map();
for(var i=0,len=this.joinObserverArray.length;i<len;i++){
var joinObserver=this.joinObserverArray[i];
this.joinObservers.set(joinObserver,joinObserver);}}



ActivePlan.prototype.dequeue=function(){
this.joinObservers.forEach(function(v){v.queue.shift();});};


ActivePlan.prototype.match=function(){
var i,len,hasValues=true;
for(i=0,len=this.joinObserverArray.length;i<len;i++){
if(this.joinObserverArray[i].queue.length===0){
hasValues=false;
break;}}


if(hasValues){
var firstValues=[],
isCompleted=false;
for(i=0,len=this.joinObserverArray.length;i<len;i++){
firstValues.push(this.joinObserverArray[i].queue[0]);
this.joinObserverArray[i].queue[0].kind==='C'&&(isCompleted=true);}

if(isCompleted){
this.onCompleted();}else 
{
this.dequeue();
var values=[];
for(i=0,len=firstValues.length;i<firstValues.length;i++){
values.push(firstValues[i].value);}

this.onNext.apply(this,values);}}};




var JoinObserver=function(__super__){
inherits(JoinObserver,__super__);

function JoinObserver(source,onError){
__super__.call(this);
this.source=source;
this.onError=onError;
this.queue=[];
this.activePlans=[];
this.subscription=new SingleAssignmentDisposable();
this.isDisposed=false;}


var JoinObserverPrototype=JoinObserver.prototype;

JoinObserverPrototype.next=function(notification){
if(!this.isDisposed){
if(notification.kind==='E'){
return this.onError(notification.error);}

this.queue.push(notification);
var activePlans=this.activePlans.slice(0);
for(var i=0,len=activePlans.length;i<len;i++){
activePlans[i].match();}}};




JoinObserverPrototype.error=noop;
JoinObserverPrototype.completed=noop;

JoinObserverPrototype.addActivePlan=function(activePlan){
this.activePlans.push(activePlan);};


JoinObserverPrototype.subscribe=function(){
this.subscription.setDisposable(this.source.materialize().subscribe(this));};


JoinObserverPrototype.removeActivePlan=function(activePlan){
this.activePlans.splice(this.activePlans.indexOf(activePlan),1);
this.activePlans.length===0&&this.dispose();};


JoinObserverPrototype.dispose=function(){
__super__.prototype.dispose.call(this);
if(!this.isDisposed){
this.isDisposed=true;
this.subscription.dispose();}};



return JoinObserver;}(
AbstractObserver);







observableProto.and=function(right){
return new Pattern([this,right]);};








observableProto.thenDo=function(selector){
return new Pattern([this]).thenDo(selector);};








Observable.when=function(){
var len=arguments.length,plans;
if(Array.isArray(arguments[0])){
plans=arguments[0];}else 
{
plans=new Array(len);
for(var i=0;i<len;i++){plans[i]=arguments[i];}}

return new AnonymousObservable(function(o){
var activePlans=[],
externalSubscriptions=new Map();
var outObserver=observerCreate(
function(x){o.onNext(x);},
function(err){
externalSubscriptions.forEach(function(v){v.onError(err);});
o.onError(err);},

function(x){o.onCompleted();});

try{
for(var i=0,len=plans.length;i<len;i++){
activePlans.push(plans[i].activate(externalSubscriptions,outObserver,function(activePlan){
var idx=activePlans.indexOf(activePlan);
activePlans.splice(idx,1);
activePlans.length===0&&o.onCompleted();}));}}


catch(e){
observableThrow(e).subscribe(o);}

var group=new CompositeDisposable();
externalSubscriptions.forEach(function(joinObserver){
joinObserver.subscribe();
group.add(joinObserver);});


return group;});};



var TimerObservable=function(__super__){
inherits(TimerObservable,__super__);
function TimerObservable(dt,s){
this._dt=dt;
this._s=s;
__super__.call(this);}


TimerObservable.prototype.subscribeCore=function(o){
return this._s.scheduleFuture(o,this._dt,scheduleMethod);};


function scheduleMethod(s,o){
o.onNext(0);
o.onCompleted();}


return TimerObservable;}(
ObservableBase);

function _observableTimer(dueTime,scheduler){
return new TimerObservable(dueTime,scheduler);}


function observableTimerDateAndPeriod(dueTime,period,scheduler){
return new AnonymousObservable(function(observer){
var d=dueTime,p=normalizeTime(period);
return scheduler.scheduleRecursiveFuture(0,d,function(count,self){
if(p>0){
var now=scheduler.now();
d=new Date(d.getTime()+p);
d.getTime()<=now&&(d=new Date(now+p));}

observer.onNext(count);
self(count+1,new Date(d));});});}




function observableTimerTimeSpanAndPeriod(dueTime,period,scheduler){
return dueTime===period?
new AnonymousObservable(function(observer){
return scheduler.schedulePeriodic(0,period,function(count){
observer.onNext(count);
return count+1;});}):


observableDefer(function(){
return observableTimerDateAndPeriod(new Date(scheduler.now()+dueTime),period,scheduler);});}














var observableinterval=Observable.interval=function(period,scheduler){
return observableTimerTimeSpanAndPeriod(period,period,isScheduler(scheduler)?scheduler:defaultScheduler);};









var observableTimer=Observable.timer=function(dueTime,periodOrScheduler,scheduler){
var period;
isScheduler(scheduler)||(scheduler=defaultScheduler);
if(periodOrScheduler!=null&&typeof periodOrScheduler==='number'){
period=periodOrScheduler;}else 
if(isScheduler(periodOrScheduler)){
scheduler=periodOrScheduler;}

if((dueTime instanceof Date||typeof dueTime==='number')&&period===undefined){
return _observableTimer(dueTime,scheduler);}

if(dueTime instanceof Date&&period!==undefined){
return observableTimerDateAndPeriod(dueTime.getTime(),periodOrScheduler,scheduler);}

return observableTimerTimeSpanAndPeriod(dueTime,period,scheduler);};


function observableDelayRelative(source,dueTime,scheduler){
return new AnonymousObservable(function(o){
var active=false,
cancelable=new SerialDisposable(),
exception=null,
q=[],
running=false,
subscription;
subscription=source.materialize().timestamp(scheduler).subscribe(function(notification){
var d,shouldRun;
if(notification.value.kind==='E'){
q=[];
q.push(notification);
exception=notification.value.error;
shouldRun=!running;}else 
{
q.push({value:notification.value,timestamp:notification.timestamp+dueTime});
shouldRun=!active;
active=true;}

if(shouldRun){
if(exception!==null){
o.onError(exception);}else 
{
d=new SingleAssignmentDisposable();
cancelable.setDisposable(d);
d.setDisposable(scheduler.scheduleRecursiveFuture(null,dueTime,function(_,self){
var e,recurseDueTime,result,shouldRecurse;
if(exception!==null){
return;}

running=true;
do {
result=null;
if(q.length>0&&q[0].timestamp-scheduler.now()<=0){
result=q.shift().value;}

if(result!==null){
result.accept(o);}}while(

result!==null);
shouldRecurse=false;
recurseDueTime=0;
if(q.length>0){
shouldRecurse=true;
recurseDueTime=Math.max(0,q[0].timestamp-scheduler.now());}else 
{
active=false;}

e=exception;
running=false;
if(e!==null){
o.onError(e);}else 
if(shouldRecurse){
self(null,recurseDueTime);}}));}}});





return new BinaryDisposable(subscription,cancelable);},
source);}


function observableDelayAbsolute(source,dueTime,scheduler){
return observableDefer(function(){
return observableDelayRelative(source,dueTime-scheduler.now(),scheduler);});}



function delayWithSelector(source,subscriptionDelay,delayDurationSelector){
var subDelay,selector;
if(isFunction(subscriptionDelay)){
selector=subscriptionDelay;}else 
{
subDelay=subscriptionDelay;
selector=delayDurationSelector;}

return new AnonymousObservable(function(o){
var delays=new CompositeDisposable(),atEnd=false,subscription=new SerialDisposable();

function start(){
subscription.setDisposable(source.subscribe(
function(x){
var delay=tryCatch(selector)(x);
if(delay===errorObj){return o.onError(delay.e);}
var d=new SingleAssignmentDisposable();
delays.add(d);
d.setDisposable(delay.subscribe(
function(){
o.onNext(x);
delays.remove(d);
done();},

function(e){o.onError(e);},
function(){
o.onNext(x);
delays.remove(d);
done();}));},



function(e){o.onError(e);},
function(){
atEnd=true;
subscription.dispose();
done();}));}




function done(){
atEnd&&delays.length===0&&o.onCompleted();}


if(!subDelay){
start();}else 
{
subscription.setDisposable(subDelay.subscribe(start,function(e){o.onError(e);},start));}


return new BinaryDisposable(subscription,delays);},
this);}










observableProto.delay=function(){
var firstArg=arguments[0];
if(typeof firstArg==='number'||firstArg instanceof Date){
var dueTime=firstArg,scheduler=arguments[1];
isScheduler(scheduler)||(scheduler=defaultScheduler);
return dueTime instanceof Date?
observableDelayAbsolute(this,dueTime,scheduler):
observableDelayRelative(this,dueTime,scheduler);}else 
if(Observable.isObservable(firstArg)||isFunction(firstArg)){
return delayWithSelector(this,firstArg,arguments[1]);}else 
{
throw new Error('Invalid arguments');}};



var DebounceObservable=function(__super__){
inherits(DebounceObservable,__super__);
function DebounceObservable(source,dt,s){
isScheduler(s)||(s=defaultScheduler);
this.source=source;
this._dt=dt;
this._s=s;
__super__.call(this);}


DebounceObservable.prototype.subscribeCore=function(o){
var cancelable=new SerialDisposable();
return new BinaryDisposable(
this.source.subscribe(new DebounceObserver(o,this.source,this._dt,this._s,cancelable)),
cancelable);};


return DebounceObservable;}(
ObservableBase);

var DebounceObserver=function(__super__){
inherits(DebounceObserver,__super__);
function DebounceObserver(observer,source,dueTime,scheduler,cancelable){
this._o=observer;
this._s=source;
this._d=dueTime;
this._scheduler=scheduler;
this._c=cancelable;
this._v=null;
this._hv=false;
this._id=0;
__super__.call(this);}


DebounceObserver.prototype.next=function(x){
this._hv=true;
this._v=x;
var currentId=++this._id,d=new SingleAssignmentDisposable();
this._c.setDisposable(d);
d.setDisposable(this._scheduler.scheduleFuture(this,this._d,function(_,self){
self._hv&&self._id===currentId&&self._o.onNext(x);
self._hv=false;}));};



DebounceObserver.prototype.error=function(e){
this._c.dispose();
this._o.onError(e);
this._hv=false;
this._id++;};


DebounceObserver.prototype.completed=function(){
this._c.dispose();
this._hv&&this._o.onNext(this._v);
this._o.onCompleted();
this._hv=false;
this._id++;};


return DebounceObserver;}(
AbstractObserver);

function debounceWithSelector(source,durationSelector){
return new AnonymousObservable(function(o){
var value,hasValue=false,cancelable=new SerialDisposable(),id=0;
var subscription=source.subscribe(
function(x){
var throttle=tryCatch(durationSelector)(x);
if(throttle===errorObj){return o.onError(throttle.e);}

isPromise(throttle)&&(throttle=observableFromPromise(throttle));

hasValue=true;
value=x;
id++;
var currentid=id,d=new SingleAssignmentDisposable();
cancelable.setDisposable(d);
d.setDisposable(throttle.subscribe(
function(){
hasValue&&id===currentid&&o.onNext(value);
hasValue=false;
d.dispose();},

function(e){o.onError(e);},
function(){
hasValue&&id===currentid&&o.onNext(value);
hasValue=false;
d.dispose();}));},



function(e){
cancelable.dispose();
o.onError(e);
hasValue=false;
id++;},

function(){
cancelable.dispose();
hasValue&&o.onNext(value);
o.onCompleted();
hasValue=false;
id++;});


return new BinaryDisposable(subscription,cancelable);},
source);}


observableProto.debounce=function(){
if(isFunction(arguments[0])){
return debounceWithSelector(this,arguments[0]);}else 
if(typeof arguments[0]==='number'){
return new DebounceObservable(this,arguments[0],arguments[1]);}else 
{
throw new Error('Invalid arguments');}};










observableProto.windowWithTime=function(timeSpan,timeShiftOrScheduler,scheduler){
var source=this,timeShift;
timeShiftOrScheduler==null&&(timeShift=timeSpan);
isScheduler(scheduler)||(scheduler=defaultScheduler);
if(typeof timeShiftOrScheduler==='number'){
timeShift=timeShiftOrScheduler;}else 
if(isScheduler(timeShiftOrScheduler)){
timeShift=timeSpan;
scheduler=timeShiftOrScheduler;}

return new AnonymousObservable(function(observer){
var groupDisposable,
nextShift=timeShift,
nextSpan=timeSpan,
q=[],
refCountDisposable,
timerD=new SerialDisposable(),
totalTime=0;
groupDisposable=new CompositeDisposable(timerD),
refCountDisposable=new RefCountDisposable(groupDisposable);

function createTimer(){
var m=new SingleAssignmentDisposable(),
isSpan=false,
isShift=false;
timerD.setDisposable(m);
if(nextSpan===nextShift){
isSpan=true;
isShift=true;}else 
if(nextSpan<nextShift){
isSpan=true;}else 
{
isShift=true;}

var newTotalTime=isSpan?nextSpan:nextShift,
ts=newTotalTime-totalTime;
totalTime=newTotalTime;
if(isSpan){
nextSpan+=timeShift;}

if(isShift){
nextShift+=timeShift;}

m.setDisposable(scheduler.scheduleFuture(null,ts,function(){
if(isShift){
var s=new Subject();
q.push(s);
observer.onNext(addRef(s,refCountDisposable));}

isSpan&&q.shift().onCompleted();
createTimer();}));}

;
q.push(new Subject());
observer.onNext(addRef(q[0],refCountDisposable));
createTimer();
groupDisposable.add(source.subscribe(
function(x){
for(var i=0,len=q.length;i<len;i++){q[i].onNext(x);}},

function(e){
for(var i=0,len=q.length;i<len;i++){q[i].onError(e);}
observer.onError(e);},

function(){
for(var i=0,len=q.length;i<len;i++){q[i].onCompleted();}
observer.onCompleted();}));


return refCountDisposable;},
source);};









observableProto.windowWithTimeOrCount=function(timeSpan,count,scheduler){
var source=this;
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new AnonymousObservable(function(observer){
var timerD=new SerialDisposable(),
groupDisposable=new CompositeDisposable(timerD),
refCountDisposable=new RefCountDisposable(groupDisposable),
n=0,
windowId=0,
s=new Subject();

function createTimer(id){
var m=new SingleAssignmentDisposable();
timerD.setDisposable(m);
m.setDisposable(scheduler.scheduleFuture(null,timeSpan,function(){
if(id!==windowId){return;}
n=0;
var newId=++windowId;
s.onCompleted();
s=new Subject();
observer.onNext(addRef(s,refCountDisposable));
createTimer(newId);}));}



observer.onNext(addRef(s,refCountDisposable));
createTimer(0);

groupDisposable.add(source.subscribe(
function(x){
var newId=0,newWindow=false;
s.onNext(x);
if(++n===count){
newWindow=true;
n=0;
newId=++windowId;
s.onCompleted();
s=new Subject();
observer.onNext(addRef(s,refCountDisposable));}

newWindow&&createTimer(newId);},

function(e){
s.onError(e);
observer.onError(e);},
function(){
s.onCompleted();
observer.onCompleted();}));


return refCountDisposable;},
source);};


function toArray(x){return x.toArray();}








observableProto.bufferWithTime=function(timeSpan,timeShiftOrScheduler,scheduler){
return this.windowWithTime(timeSpan,timeShiftOrScheduler,scheduler).flatMap(toArray);};


function toArray(x){return x.toArray();}








observableProto.bufferWithTimeOrCount=function(timeSpan,count,scheduler){
return this.windowWithTimeOrCount(timeSpan,count,scheduler).flatMap(toArray);};


var TimeIntervalObservable=function(__super__){
inherits(TimeIntervalObservable,__super__);
function TimeIntervalObservable(source,s){
this.source=source;
this._s=s;
__super__.call(this);}


TimeIntervalObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new TimeIntervalObserver(o,this._s));};


return TimeIntervalObservable;}(
ObservableBase);

var TimeIntervalObserver=function(__super__){
inherits(TimeIntervalObserver,__super__);

function TimeIntervalObserver(o,s){
this._o=o;
this._s=s;
this._l=s.now();
__super__.call(this);}


TimeIntervalObserver.prototype.next=function(x){
var now=this._s.now(),span=now-this._l;
this._l=now;
this._o.onNext({value:x,interval:span});};

TimeIntervalObserver.prototype.error=function(e){this._o.onError(e);};
TimeIntervalObserver.prototype.completed=function(){this._o.onCompleted();};

return TimeIntervalObserver;}(
AbstractObserver);











observableProto.timeInterval=function(scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new TimeIntervalObservable(this,scheduler);};


var TimestampObservable=function(__super__){
inherits(TimestampObservable,__super__);
function TimestampObservable(source,s){
this.source=source;
this._s=s;
__super__.call(this);}


TimestampObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new TimestampObserver(o,this._s));};


return TimestampObservable;}(
ObservableBase);

var TimestampObserver=function(__super__){
inherits(TimestampObserver,__super__);
function TimestampObserver(o,s){
this._o=o;
this._s=s;
__super__.call(this);}


TimestampObserver.prototype.next=function(x){
this._o.onNext({value:x,timestamp:this._s.now()});};


TimestampObserver.prototype.error=function(e){
this._o.onError(e);};


TimestampObserver.prototype.completed=function(){
this._o.onCompleted();};


return TimestampObserver;}(
AbstractObserver);











observableProto.timestamp=function(scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new TimestampObservable(this,scheduler);};


function sampleObservable(source,sampler){
return new AnonymousObservable(function(o){
var atEnd=false,value,hasValue=false;

function sampleSubscribe(){
if(hasValue){
hasValue=false;
o.onNext(value);}

atEnd&&o.onCompleted();}


var sourceSubscription=new SingleAssignmentDisposable();
sourceSubscription.setDisposable(source.subscribe(
function(newValue){
hasValue=true;
value=newValue;},

function(e){o.onError(e);},
function(){
atEnd=true;
sourceSubscription.dispose();}));



return new BinaryDisposable(
sourceSubscription,
sampler.subscribe(sampleSubscribe,function(e){o.onError(e);},sampleSubscribe));},

source);}














observableProto.sample=observableProto.throttleLatest=function(intervalOrSampler,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return typeof intervalOrSampler==='number'?
sampleObservable(this,observableinterval(intervalOrSampler,scheduler)):
sampleObservable(this,intervalOrSampler);};


var TimeoutError=Rx.TimeoutError=function(message){
this.message=message||'Timeout has occurred';
this.name='TimeoutError';
Error.call(this);};

TimeoutError.prototype=Object.create(Error.prototype);

function timeoutWithSelector(source,firstTimeout,timeoutDurationSelector,other){
if(isFunction(firstTimeout)){
other=timeoutDurationSelector;
timeoutDurationSelector=firstTimeout;
firstTimeout=observableNever();}

Observable.isObservable(other)||(other=observableThrow(new TimeoutError()));
return new AnonymousObservable(function(o){
var subscription=new SerialDisposable(),
timer=new SerialDisposable(),
original=new SingleAssignmentDisposable();

subscription.setDisposable(original);

var id=0,switched=false;

function setTimer(timeout){
var myId=id,d=new SingleAssignmentDisposable();

function timerWins(){
switched=myId===id;
return switched;}


timer.setDisposable(d);
d.setDisposable(timeout.subscribe(function(){
timerWins()&&subscription.setDisposable(other.subscribe(o));
d.dispose();},
function(e){
timerWins()&&o.onError(e);},
function(){
timerWins()&&subscription.setDisposable(other.subscribe(o));}));}

;

setTimer(firstTimeout);

function oWins(){
var res=!switched;
if(res){id++;}
return res;}


original.setDisposable(source.subscribe(function(x){
if(oWins()){
o.onNext(x);
var timeout=tryCatch(timeoutDurationSelector)(x);
if(timeout===errorObj){return o.onError(timeout.e);}
setTimer(isPromise(timeout)?observableFromPromise(timeout):timeout);}},

function(e){
oWins()&&o.onError(e);},
function(){
oWins()&&o.onCompleted();}));

return new BinaryDisposable(subscription,timer);},
source);}


function timeout(source,dueTime,other,scheduler){
if(isScheduler(other)){
scheduler=other;
other=observableThrow(new TimeoutError());}

if(other instanceof Error){other=observableThrow(other);}
isScheduler(scheduler)||(scheduler=defaultScheduler);
Observable.isObservable(other)||(other=observableThrow(new TimeoutError()));
return new AnonymousObservable(function(o){
var id=0,
original=new SingleAssignmentDisposable(),
subscription=new SerialDisposable(),
switched=false,
timer=new SerialDisposable();

subscription.setDisposable(original);

function createTimer(){
var myId=id;
timer.setDisposable(scheduler.scheduleFuture(null,dueTime,function(){
switched=id===myId;
if(switched){
isPromise(other)&&(other=observableFromPromise(other));
subscription.setDisposable(other.subscribe(o));}}));}




createTimer();

original.setDisposable(source.subscribe(function(x){
if(!switched){
id++;
o.onNext(x);
createTimer();}},

function(e){
if(!switched){
id++;
o.onError(e);}},

function(){
if(!switched){
id++;
o.onCompleted();}}));


return new BinaryDisposable(subscription,timer);},
source);}


observableProto.timeout=function(){
var firstArg=arguments[0];
if(firstArg instanceof Date||typeof firstArg==='number'){
return timeout(this,firstArg,arguments[1],arguments[2]);}else 
if(Observable.isObservable(firstArg)||isFunction(firstArg)){
return timeoutWithSelector(this,firstArg,arguments[1],arguments[2]);}else 
{
throw new Error('Invalid arguments');}};



var GenerateAbsoluteObservable=function(__super__){
inherits(GenerateAbsoluteObservable,__super__);
function GenerateAbsoluteObservable(state,cndFn,itrFn,resFn,timeFn,s){
this._state=state;
this._cndFn=cndFn;
this._itrFn=itrFn;
this._resFn=resFn;
this._timeFn=timeFn;
this._s=s;
this._first=true;
this._hasResult=false;
__super__.call(this);}


function scheduleRecursive(self,recurse){
self._hasResult&&self._o.onNext(self._state);

if(self._first){
self._first=false;}else 
{
self._state=tryCatch(self._itrFn)(self._state);
if(self._state===errorObj){return self._o.onError(self._state.e);}}

self._hasResult=tryCatch(self._cndFn)(self._state);
if(self._hasResult===errorObj){return self._o.onError(self._hasResult.e);}
if(self._hasResult){
var result=tryCatch(self._resFn)(self._state);
if(result===errorObj){return self._o.onError(result.e);}
var time=tryCatch(self._timeFn)(self._state);
if(time===errorObj){return self._o.onError(time.e);}
recurse(self,time);}else 
{
self._o.onCompleted();}}



GenerateAbsoluteObservable.prototype.subscribeCore=function(o){
this._o=o;
return this._s.scheduleRecursiveFuture(this,new Date(this._s.now()),scheduleRecursive);};


return GenerateAbsoluteObservable;}(
ObservableBase);




















Observable.generateWithAbsoluteTime=function(initialState,condition,iterate,resultSelector,timeSelector,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new GenerateAbsoluteObservable(initialState,condition,iterate,resultSelector,timeSelector,scheduler);};


var GenerateRelativeObservable=function(__super__){
inherits(GenerateRelativeObservable,__super__);
function GenerateRelativeObservable(state,cndFn,itrFn,resFn,timeFn,s){
this._state=state;
this._cndFn=cndFn;
this._itrFn=itrFn;
this._resFn=resFn;
this._timeFn=timeFn;
this._s=s;
this._first=true;
this._hasResult=false;
__super__.call(this);}


function scheduleRecursive(self,recurse){
self._hasResult&&self._o.onNext(self._state);

if(self._first){
self._first=false;}else 
{
self._state=tryCatch(self._itrFn)(self._state);
if(self._state===errorObj){return self._o.onError(self._state.e);}}

self._hasResult=tryCatch(self._cndFn)(self._state);
if(self._hasResult===errorObj){return self._o.onError(self._hasResult.e);}
if(self._hasResult){
var result=tryCatch(self._resFn)(self._state);
if(result===errorObj){return self._o.onError(result.e);}
var time=tryCatch(self._timeFn)(self._state);
if(time===errorObj){return self._o.onError(time.e);}
recurse(self,time);}else 
{
self._o.onCompleted();}}



GenerateRelativeObservable.prototype.subscribeCore=function(o){
this._o=o;
return this._s.scheduleRecursiveFuture(this,0,scheduleRecursive);};


return GenerateRelativeObservable;}(
ObservableBase);




















Observable.generateWithRelativeTime=function(initialState,condition,iterate,resultSelector,timeSelector,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new GenerateRelativeObservable(initialState,condition,iterate,resultSelector,timeSelector,scheduler);};


var DelaySubscription=function(__super__){
inherits(DelaySubscription,__super__);
function DelaySubscription(source,dt,s){
this.source=source;
this._dt=dt;
this._s=s;
__super__.call(this);}


DelaySubscription.prototype.subscribeCore=function(o){
var d=new SerialDisposable();

d.setDisposable(this._s.scheduleFuture([this.source,o,d],this._dt,scheduleMethod));

return d;};


function scheduleMethod(s,state){
var source=state[0],o=state[1],d=state[2];
d.setDisposable(source.subscribe(o));}


return DelaySubscription;}(
ObservableBase);












observableProto.delaySubscription=function(dueTime,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new DelaySubscription(this,dueTime,scheduler);};


var SkipLastWithTimeObservable=function(__super__){
inherits(SkipLastWithTimeObservable,__super__);
function SkipLastWithTimeObservable(source,d,s){
this.source=source;
this._d=d;
this._s=s;
__super__.call(this);}


SkipLastWithTimeObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new SkipLastWithTimeObserver(o,this));};


return SkipLastWithTimeObservable;}(
ObservableBase);

var SkipLastWithTimeObserver=function(__super__){
inherits(SkipLastWithTimeObserver,__super__);

function SkipLastWithTimeObserver(o,p){
this._o=o;
this._s=p._s;
this._d=p._d;
this._q=[];
__super__.call(this);}


SkipLastWithTimeObserver.prototype.next=function(x){
var now=this._s.now();
this._q.push({interval:now,value:x});
while(this._q.length>0&&now-this._q[0].interval>=this._d){
this._o.onNext(this._q.shift().value);}};


SkipLastWithTimeObserver.prototype.error=function(e){this._o.onError(e);};
SkipLastWithTimeObserver.prototype.completed=function(){
var now=this._s.now();
while(this._q.length>0&&now-this._q[0].interval>=this._d){
this._o.onNext(this._q.shift().value);}

this._o.onCompleted();};


return SkipLastWithTimeObserver;}(
AbstractObserver);











observableProto.skipLastWithTime=function(duration,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new SkipLastWithTimeObservable(this,duration,scheduler);};


var TakeLastWithTimeObservable=function(__super__){
inherits(TakeLastWithTimeObservable,__super__);
function TakeLastWithTimeObservable(source,d,s){
this.source=source;
this._d=d;
this._s=s;
__super__.call(this);}


TakeLastWithTimeObservable.prototype.subscribeCore=function(o){
return this.source.subscribe(new TakeLastWithTimeObserver(o,this._d,this._s));};


return TakeLastWithTimeObservable;}(
ObservableBase);

var TakeLastWithTimeObserver=function(__super__){
inherits(TakeLastWithTimeObserver,__super__);

function TakeLastWithTimeObserver(o,d,s){
this._o=o;
this._d=d;
this._s=s;
this._q=[];
__super__.call(this);}


TakeLastWithTimeObserver.prototype.next=function(x){
var now=this._s.now();
this._q.push({interval:now,value:x});
while(this._q.length>0&&now-this._q[0].interval>=this._d){
this._q.shift();}};


TakeLastWithTimeObserver.prototype.error=function(e){this._o.onError(e);};
TakeLastWithTimeObserver.prototype.completed=function(){
var now=this._s.now();
while(this._q.length>0){
var next=this._q.shift();
if(now-next.interval<=this._d){this._o.onNext(next.value);}}

this._o.onCompleted();};


return TakeLastWithTimeObserver;}(
AbstractObserver);











observableProto.takeLastWithTime=function(duration,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new TakeLastWithTimeObservable(this,duration,scheduler);};












observableProto.takeLastBufferWithTime=function(duration,scheduler){
var source=this;
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new AnonymousObservable(function(o){
var q=[];
return source.subscribe(function(x){
var now=scheduler.now();
q.push({interval:now,value:x});
while(q.length>0&&now-q[0].interval>=duration){
q.shift();}},

function(e){o.onError(e);},function(){
var now=scheduler.now(),res=[];
while(q.length>0){
var next=q.shift();
now-next.interval<=duration&&res.push(next.value);}

o.onNext(res);
o.onCompleted();});},

source);};


var TakeWithTimeObservable=function(__super__){
inherits(TakeWithTimeObservable,__super__);
function TakeWithTimeObservable(source,d,s){
this.source=source;
this._d=d;
this._s=s;
__super__.call(this);}


function scheduleMethod(s,o){
o.onCompleted();}


TakeWithTimeObservable.prototype.subscribeCore=function(o){
return new BinaryDisposable(
this._s.scheduleFuture(o,this._d,scheduleMethod),
this.source.subscribe(o));};



return TakeWithTimeObservable;}(
ObservableBase);














observableProto.takeWithTime=function(duration,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new TakeWithTimeObservable(this,duration,scheduler);};


var SkipWithTimeObservable=function(__super__){
inherits(SkipWithTimeObservable,__super__);
function SkipWithTimeObservable(source,d,s){
this.source=source;
this._d=d;
this._s=s;
this._open=false;
__super__.call(this);}


function scheduleMethod(s,self){
self._open=true;}


SkipWithTimeObservable.prototype.subscribeCore=function(o){
return new BinaryDisposable(
this._s.scheduleFuture(this,this._d,scheduleMethod),
this.source.subscribe(new SkipWithTimeObserver(o,this)));};



return SkipWithTimeObservable;}(
ObservableBase);

var SkipWithTimeObserver=function(__super__){
inherits(SkipWithTimeObserver,__super__);

function SkipWithTimeObserver(o,p){
this._o=o;
this._p=p;
__super__.call(this);}


SkipWithTimeObserver.prototype.next=function(x){this._p._open&&this._o.onNext(x);};
SkipWithTimeObserver.prototype.error=function(e){this._o.onError(e);};
SkipWithTimeObserver.prototype.completed=function(){this._o.onCompleted();};

return SkipWithTimeObserver;}(
AbstractObserver);













observableProto.skipWithTime=function(duration,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new SkipWithTimeObservable(this,duration,scheduler);};


var SkipUntilWithTimeObservable=function(__super__){
inherits(SkipUntilWithTimeObservable,__super__);
function SkipUntilWithTimeObservable(source,startTime,scheduler){
this.source=source;
this._st=startTime;
this._s=scheduler;
__super__.call(this);}


function scheduleMethod(s,state){
state._open=true;}


SkipUntilWithTimeObservable.prototype.subscribeCore=function(o){
this._open=false;
return new BinaryDisposable(
this._s.scheduleFuture(this,this._st,scheduleMethod),
this.source.subscribe(new SkipUntilWithTimeObserver(o,this)));};



return SkipUntilWithTimeObservable;}(
ObservableBase);

var SkipUntilWithTimeObserver=function(__super__){
inherits(SkipUntilWithTimeObserver,__super__);

function SkipUntilWithTimeObserver(o,p){
this._o=o;
this._p=p;
__super__.call(this);}


SkipUntilWithTimeObserver.prototype.next=function(x){this._p._open&&this._o.onNext(x);};
SkipUntilWithTimeObserver.prototype.error=function(e){this._o.onError(e);};
SkipUntilWithTimeObserver.prototype.completed=function(){this._o.onCompleted();};

return SkipUntilWithTimeObserver;}(
AbstractObserver);













observableProto.skipUntilWithTime=function(startTime,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
return new SkipUntilWithTimeObservable(this,startTime,scheduler);};








observableProto.takeUntilWithTime=function(endTime,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
var source=this;
return new AnonymousObservable(function(o){
return new BinaryDisposable(
scheduler.scheduleFuture(o,endTime,function(_,o){o.onCompleted();}),
source.subscribe(o));},
source);};








observableProto.throttle=function(windowDuration,scheduler){
isScheduler(scheduler)||(scheduler=defaultScheduler);
var duration=+windowDuration||0;
if(duration<=0){throw new RangeError('windowDuration cannot be less or equal zero.');}
var source=this;
return new AnonymousObservable(function(o){
var lastOnNext=0;
return source.subscribe(
function(x){
var now=scheduler.now();
if(lastOnNext===0||now-lastOnNext>=duration){
lastOnNext=now;
o.onNext(x);}},

function(e){o.onError(e);},function(){o.onCompleted();});},

source);};


var TransduceObserver=function(__super__){
inherits(TransduceObserver,__super__);
function TransduceObserver(o,xform){
this._o=o;
this._xform=xform;
__super__.call(this);}


TransduceObserver.prototype.next=function(x){
var res=tryCatch(this._xform['@@transducer/step']).call(this._xform,this._o,x);
if(res===errorObj){this._o.onError(res.e);}};


TransduceObserver.prototype.error=function(e){this._o.onError(e);};

TransduceObserver.prototype.completed=function(){
this._xform['@@transducer/result'](this._o);};


return TransduceObserver;}(
AbstractObserver);

function transformForObserver(o){
return {
'@@transducer/init':function(){
return o;},

'@@transducer/step':function(obs,input){
return obs.onNext(input);},

'@@transducer/result':function(obs){
return obs.onCompleted();}};}









observableProto.transduce=function(transducer){
var source=this;
return new AnonymousObservable(function(o){
var xform=transducer(transformForObserver(o));
return source.subscribe(new TransduceObserver(o,xform));},
source);};


var SwitchFirstObservable=function(__super__){
inherits(SwitchFirstObservable,__super__);
function SwitchFirstObservable(source){
this.source=source;
__super__.call(this);}


SwitchFirstObservable.prototype.subscribeCore=function(o){
var m=new SingleAssignmentDisposable(),
g=new CompositeDisposable(),
state={
hasCurrent:false,
isStopped:false,
o:o,
g:g};


g.add(m);
m.setDisposable(this.source.subscribe(new SwitchFirstObserver(state)));
return g;};


return SwitchFirstObservable;}(
ObservableBase);

var SwitchFirstObserver=function(__super__){
inherits(SwitchFirstObserver,__super__);
function SwitchFirstObserver(state){
this._s=state;
__super__.call(this);}


SwitchFirstObserver.prototype.next=function(x){
if(!this._s.hasCurrent){
this._s.hasCurrent=true;
isPromise(x)&&(x=observableFromPromise(x));
var inner=new SingleAssignmentDisposable();
this._s.g.add(inner);
inner.setDisposable(x.subscribe(new InnerObserver(this._s,inner)));}};



SwitchFirstObserver.prototype.error=function(e){
this._s.o.onError(e);};


SwitchFirstObserver.prototype.completed=function(){
this._s.isStopped=true;
!this._s.hasCurrent&&this._s.g.length===1&&this._s.o.onCompleted();};


inherits(InnerObserver,__super__);
function InnerObserver(state,inner){
this._s=state;
this._i=inner;
__super__.call(this);}


InnerObserver.prototype.next=function(x){this._s.o.onNext(x);};
InnerObserver.prototype.error=function(e){this._s.o.onError(e);};
InnerObserver.prototype.completed=function(){
this._s.g.remove(this._i);
this._s.hasCurrent=false;
this._s.isStopped&&this._s.g.length===1&&this._s.o.onCompleted();};


return SwitchFirstObserver;}(
AbstractObserver);






observableProto.switchFirst=function(){
return new SwitchFirstObservable(this);};


observableProto.flatMapFirst=observableProto.selectManyFirst=function(selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).switchFirst();};


Rx.Observable.prototype.flatMapWithMaxConcurrent=function(limit,selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).merge(limit);};


var VirtualTimeScheduler=Rx.VirtualTimeScheduler=function(__super__){
inherits(VirtualTimeScheduler,__super__);








function VirtualTimeScheduler(initialClock,comparer){
this.clock=initialClock;
this.comparer=comparer;
this.isEnabled=false;
this.queue=new PriorityQueue(1024);
__super__.call(this);}


var VirtualTimeSchedulerPrototype=VirtualTimeScheduler.prototype;

VirtualTimeSchedulerPrototype.now=function(){
return this.toAbsoluteTime(this.clock);};


VirtualTimeSchedulerPrototype.schedule=function(state,action){
return this.scheduleAbsolute(state,this.clock,action);};


VirtualTimeSchedulerPrototype.scheduleFuture=function(state,dueTime,action){
var dt=dueTime instanceof Date?
this.toRelativeTime(dueTime-this.now()):
this.toRelativeTime(dueTime);

return this.scheduleRelative(state,dt,action);};








VirtualTimeSchedulerPrototype.add=notImplemented;






VirtualTimeSchedulerPrototype.toAbsoluteTime=notImplemented;






VirtualTimeSchedulerPrototype.toRelativeTime=notImplemented;








VirtualTimeSchedulerPrototype.schedulePeriodic=function(state,period,action){
var s=new SchedulePeriodicRecursive(this,state,period,action);
return s.start();};









VirtualTimeSchedulerPrototype.scheduleRelative=function(state,dueTime,action){
var runAt=this.add(this.clock,dueTime);
return this.scheduleAbsolute(state,runAt,action);};





VirtualTimeSchedulerPrototype.start=function(){
if(!this.isEnabled){
this.isEnabled=true;
do {
var next=this.getNext();
if(next!==null){
this.comparer(next.dueTime,this.clock)>0&&(this.clock=next.dueTime);
next.invoke();}else 
{
this.isEnabled=false;}}while(

this.isEnabled);}};






VirtualTimeSchedulerPrototype.stop=function(){
this.isEnabled=false;};






VirtualTimeSchedulerPrototype.advanceTo=function(time){
var dueToClock=this.comparer(this.clock,time);
if(this.comparer(this.clock,time)>0){throw new ArgumentOutOfRangeError();}
if(dueToClock===0){return;}
if(!this.isEnabled){
this.isEnabled=true;
do {
var next=this.getNext();
if(next!==null&&this.comparer(next.dueTime,time)<=0){
this.comparer(next.dueTime,this.clock)>0&&(this.clock=next.dueTime);
next.invoke();}else 
{
this.isEnabled=false;}}while(

this.isEnabled);
this.clock=time;}};







VirtualTimeSchedulerPrototype.advanceBy=function(time){
var dt=this.add(this.clock,time),
dueToClock=this.comparer(this.clock,dt);
if(dueToClock>0){throw new ArgumentOutOfRangeError();}
if(dueToClock===0){return;}

this.advanceTo(dt);};






VirtualTimeSchedulerPrototype.sleep=function(time){
var dt=this.add(this.clock,time);
if(this.comparer(this.clock,dt)>=0){throw new ArgumentOutOfRangeError();}

this.clock=dt;};






VirtualTimeSchedulerPrototype.getNext=function(){
while(this.queue.length>0){
var next=this.queue.peek();
if(next.isCancelled()){
this.queue.dequeue();}else 
{
return next;}}


return null;};









VirtualTimeSchedulerPrototype.scheduleAbsolute=function(state,dueTime,action){
var self=this;

function run(scheduler,state1){
self.queue.remove(si);
return action(scheduler,state1);}


var si=new ScheduledItem(this,state,run,dueTime,this.comparer);
this.queue.enqueue(si);

return si.disposable;};


return VirtualTimeScheduler;}(
Scheduler);


Rx.HistoricalScheduler=function(__super__){
inherits(HistoricalScheduler,__super__);







function HistoricalScheduler(initialClock,comparer){
var clock=initialClock==null?0:initialClock;
var cmp=comparer||defaultSubComparer;
__super__.call(this,clock,cmp);}


var HistoricalSchedulerProto=HistoricalScheduler.prototype;







HistoricalSchedulerProto.add=function(absolute,relative){
return absolute+relative;};


HistoricalSchedulerProto.toAbsoluteTime=function(absolute){
return new Date(absolute).getTime();};








HistoricalSchedulerProto.toRelativeTime=function(timeSpan){
return timeSpan;};


return HistoricalScheduler;}(
Rx.VirtualTimeScheduler);

function OnNextPredicate(predicate){
this.predicate=predicate;}


OnNextPredicate.prototype.equals=function(other){
if(other===this){return true;}
if(other==null){return false;}
if(other.kind!=='N'){return false;}
return this.predicate(other.value);};


function OnErrorPredicate(predicate){
this.predicate=predicate;}


OnErrorPredicate.prototype.equals=function(other){
if(other===this){return true;}
if(other==null){return false;}
if(other.kind!=='E'){return false;}
return this.predicate(other.error);};


var ReactiveTest=Rx.ReactiveTest={

created:100,

subscribed:200,

disposed:1000,











onNext:function(ticks,value){
return typeof value==='function'?
new Recorded(ticks,new OnNextPredicate(value)):
new Recorded(ticks,Notification.createOnNext(value));},











onError:function(ticks,error){
return typeof error==='function'?
new Recorded(ticks,new OnErrorPredicate(error)):
new Recorded(ticks,Notification.createOnError(error));},







onCompleted:function(ticks){
return new Recorded(ticks,Notification.createOnCompleted());},








subscribe:function(start,end){
return new Subscription(start,end);}};











var Recorded=Rx.Recorded=function(time,value,comparer){
this.time=time;
this.value=value;
this.comparer=comparer||defaultComparer;};








Recorded.prototype.equals=function(other){
return this.time===other.time&&this.comparer(this.value,other.value);};







Recorded.prototype.toString=function(){
return this.value.toString()+'@'+this.time;};









var Subscription=Rx.Subscription=function(start,end){
this.subscribe=start;
this.unsubscribe=end||Number.MAX_VALUE;};







Subscription.prototype.equals=function(other){
return this.subscribe===other.subscribe&&this.unsubscribe===other.unsubscribe;};






Subscription.prototype.toString=function(){
return '('+this.subscribe+', '+(this.unsubscribe===Number.MAX_VALUE?'Infinite':this.unsubscribe)+')';};


var MockDisposable=Rx.MockDisposable=function(scheduler){
this.scheduler=scheduler;
this.disposes=[];
this.disposes.push(this.scheduler.clock);};


MockDisposable.prototype.dispose=function(){
this.disposes.push(this.scheduler.clock);};


var MockObserver=function(__super__){
inherits(MockObserver,__super__);

function MockObserver(scheduler){
__super__.call(this);
this.scheduler=scheduler;
this.messages=[];}


var MockObserverPrototype=MockObserver.prototype;

MockObserverPrototype.onNext=function(value){
this.messages.push(new Recorded(this.scheduler.clock,Notification.createOnNext(value)));};


MockObserverPrototype.onError=function(e){
this.messages.push(new Recorded(this.scheduler.clock,Notification.createOnError(e)));};


MockObserverPrototype.onCompleted=function(){
this.messages.push(new Recorded(this.scheduler.clock,Notification.createOnCompleted()));};


return MockObserver;}(
Observer);

function MockPromise(scheduler,messages){
var self=this;
this.scheduler=scheduler;
this.messages=messages;
this.subscriptions=[];
this.observers=[];
for(var i=0,len=this.messages.length;i<len;i++){
var message=this.messages[i],
notification=message.value;
(function(innerNotification){
scheduler.scheduleAbsolute(null,message.time,function(){
var obs=self.observers.slice(0);

for(var j=0,jLen=obs.length;j<jLen;j++){
innerNotification.accept(obs[j]);}

return disposableEmpty;});})(

notification);}}



MockPromise.prototype.then=function(onResolved,onRejected){
var self=this;

this.subscriptions.push(new Subscription(this.scheduler.clock));
var index=this.subscriptions.length-1;

var newPromise;

var observer=Rx.Observer.create(
function(x){
var retValue=onResolved(x);
if(retValue&&typeof retValue.then==='function'){
newPromise=retValue;}else 
{
var ticks=self.scheduler.clock;
newPromise=new MockPromise(self.scheduler,[Rx.ReactiveTest.onNext(ticks,undefined),Rx.ReactiveTest.onCompleted(ticks)]);}

var idx=self.observers.indexOf(observer);
self.observers.splice(idx,1);
self.subscriptions[index]=new Subscription(self.subscriptions[index].subscribe,self.scheduler.clock);},

function(err){
onRejected(err);
var idx=self.observers.indexOf(observer);
self.observers.splice(idx,1);
self.subscriptions[index]=new Subscription(self.subscriptions[index].subscribe,self.scheduler.clock);});


this.observers.push(observer);

return newPromise||new MockPromise(this.scheduler,this.messages);};


var HotObservable=function(__super__){
inherits(HotObservable,__super__);

function HotObservable(scheduler,messages){
__super__.call(this);
var message,notification,observable=this;
this.scheduler=scheduler;
this.messages=messages;
this.subscriptions=[];
this.observers=[];
for(var i=0,len=this.messages.length;i<len;i++){
message=this.messages[i];
notification=message.value;
(function(innerNotification){
scheduler.scheduleAbsolute(null,message.time,function(){
var obs=observable.observers.slice(0);

for(var j=0,jLen=obs.length;j<jLen;j++){
innerNotification.accept(obs[j]);}

return disposableEmpty;});})(

notification);}}



HotObservable.prototype._subscribe=function(o){
var observable=this;
this.observers.push(o);
this.subscriptions.push(new Subscription(this.scheduler.clock));
var index=this.subscriptions.length-1;
return disposableCreate(function(){
var idx=observable.observers.indexOf(o);
observable.observers.splice(idx,1);
observable.subscriptions[index]=new Subscription(observable.subscriptions[index].subscribe,observable.scheduler.clock);});};



return HotObservable;}(
Observable);

var ColdObservable=function(__super__){
inherits(ColdObservable,__super__);

function ColdObservable(scheduler,messages){
__super__.call(this);
this.scheduler=scheduler;
this.messages=messages;
this.subscriptions=[];}


ColdObservable.prototype._subscribe=function(o){
var message,notification,observable=this;
this.subscriptions.push(new Subscription(this.scheduler.clock));
var index=this.subscriptions.length-1;
var d=new CompositeDisposable();
for(var i=0,len=this.messages.length;i<len;i++){
message=this.messages[i];
notification=message.value;
(function(innerNotification){
d.add(observable.scheduler.scheduleRelative(null,message.time,function(){
innerNotification.accept(o);
return disposableEmpty;}));})(

notification);}

return disposableCreate(function(){
observable.subscriptions[index]=new Subscription(observable.subscriptions[index].subscribe,observable.scheduler.clock);
d.dispose();});};



return ColdObservable;}(
Observable);


Rx.TestScheduler=function(__super__){
inherits(TestScheduler,__super__);

function baseComparer(x,y){
return x>y?1:x<y?-1:0;}


function TestScheduler(){
__super__.call(this,0,baseComparer);}










TestScheduler.prototype.scheduleAbsolute=function(state,dueTime,action){
dueTime<=this.clock&&(dueTime=this.clock+1);
return __super__.prototype.scheduleAbsolute.call(this,state,dueTime,action);};








TestScheduler.prototype.add=function(absolute,relative){
return absolute+relative;};







TestScheduler.prototype.toAbsoluteTime=function(absolute){
return new Date(absolute).getTime();};







TestScheduler.prototype.toRelativeTime=function(timeSpan){
return timeSpan;};










TestScheduler.prototype.startScheduler=function(createFn,settings){
settings||(settings={});
settings.created==null&&(settings.created=ReactiveTest.created);
settings.subscribed==null&&(settings.subscribed=ReactiveTest.subscribed);
settings.disposed==null&&(settings.disposed=ReactiveTest.disposed);

var observer=this.createObserver(),source,subscription;

this.scheduleAbsolute(null,settings.created,function(){
source=createFn();
return disposableEmpty;});


this.scheduleAbsolute(null,settings.subscribed,function(){
subscription=source.subscribe(observer);
return disposableEmpty;});


this.scheduleAbsolute(null,settings.disposed,function(){
subscription.dispose();
return disposableEmpty;});


this.start();

return observer;};







TestScheduler.prototype.createHotObservable=function(){
var len=arguments.length,args;
if(Array.isArray(arguments[0])){
args=arguments[0];}else 
{
args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}}

return new HotObservable(this,args);};







TestScheduler.prototype.createColdObservable=function(){
var len=arguments.length,args;
if(Array.isArray(arguments[0])){
args=arguments[0];}else 
{
args=new Array(len);
for(var i=0;i<len;i++){args[i]=arguments[i];}}

return new ColdObservable(this,args);};








TestScheduler.prototype.createResolvedPromise=function(ticks,value){
return new MockPromise(this,[Rx.ReactiveTest.onNext(ticks,value),Rx.ReactiveTest.onCompleted(ticks)]);};








TestScheduler.prototype.createRejectedPromise=function(ticks,reason){
return new MockPromise(this,[Rx.ReactiveTest.onError(ticks,reason)]);};






TestScheduler.prototype.createObserver=function(){
return new MockObserver(this);};


return TestScheduler;}(
VirtualTimeScheduler);

var AnonymousObservable=Rx.AnonymousObservable=function(__super__){
inherits(AnonymousObservable,__super__);


function fixSubscriber(subscriber){
return subscriber&&isFunction(subscriber.dispose)?subscriber:
isFunction(subscriber)?disposableCreate(subscriber):disposableEmpty;}


function setDisposable(s,state){
var ado=state[0],self=state[1];
var sub=tryCatch(self.__subscribe).call(self,ado);
if(sub===errorObj&&!ado.fail(errorObj.e)){thrower(errorObj.e);}
ado.setDisposable(fixSubscriber(sub));}


function AnonymousObservable(subscribe,parent){
this.source=parent;
this.__subscribe=subscribe;
__super__.call(this);}


AnonymousObservable.prototype._subscribe=function(o){
var ado=new AutoDetachObserver(o),state=[ado,this];

if(currentThreadScheduler.scheduleRequired()){
currentThreadScheduler.schedule(state,setDisposable);}else 
{
setDisposable(null,state);}

return ado;};


return AnonymousObservable;}(

Observable);

var AutoDetachObserver=function(__super__){
inherits(AutoDetachObserver,__super__);

function AutoDetachObserver(observer){
__super__.call(this);
this.observer=observer;
this.m=new SingleAssignmentDisposable();}


var AutoDetachObserverPrototype=AutoDetachObserver.prototype;

AutoDetachObserverPrototype.next=function(value){
var result=tryCatch(this.observer.onNext).call(this.observer,value);
if(result===errorObj){
this.dispose();
thrower(result.e);}};



AutoDetachObserverPrototype.error=function(err){
var result=tryCatch(this.observer.onError).call(this.observer,err);
this.dispose();
result===errorObj&&thrower(result.e);};


AutoDetachObserverPrototype.completed=function(){
var result=tryCatch(this.observer.onCompleted).call(this.observer);
this.dispose();
result===errorObj&&thrower(result.e);};


AutoDetachObserverPrototype.setDisposable=function(value){this.m.setDisposable(value);};
AutoDetachObserverPrototype.getDisposable=function(){return this.m.getDisposable();};

AutoDetachObserverPrototype.dispose=function(){
__super__.prototype.dispose.call(this);
this.m.dispose();};


return AutoDetachObserver;}(
AbstractObserver);

var UnderlyingObservable=function(__super__){
inherits(UnderlyingObservable,__super__);
function UnderlyingObservable(m,u){
this._m=m;
this._u=u;
__super__.call(this);}


UnderlyingObservable.prototype.subscribeCore=function(o){
return new BinaryDisposable(this._m.getDisposable(),this._u.subscribe(o));};


return UnderlyingObservable;}(
ObservableBase);

var GroupedObservable=function(__super__){
inherits(GroupedObservable,__super__);
function GroupedObservable(key,underlyingObservable,mergedDisposable){
__super__.call(this);
this.key=key;
this.underlyingObservable=!mergedDisposable?
underlyingObservable:
new UnderlyingObservable(mergedDisposable,underlyingObservable);}


GroupedObservable.prototype._subscribe=function(o){
return this.underlyingObservable.subscribe(o);};


return GroupedObservable;}(
Observable);





var Subject=Rx.Subject=function(__super__){
inherits(Subject,__super__);
function Subject(){
__super__.call(this);
this.isDisposed=false;
this.isStopped=false;
this.observers=[];
this.hasError=false;}


addProperties(Subject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);
if(!this.isStopped){
this.observers.push(o);
return new InnerSubscription(this,o);}

if(this.hasError){
o.onError(this.error);
return disposableEmpty;}

o.onCompleted();
return disposableEmpty;},





hasObservers:function(){return this.observers.length>0;},



onCompleted:function(){
checkDisposed(this);
if(!this.isStopped){
this.isStopped=true;
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onCompleted();}


this.observers.length=0;}},






onError:function(error){
checkDisposed(this);
if(!this.isStopped){
this.isStopped=true;
this.error=error;
this.hasError=true;
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onError(error);}


this.observers.length=0;}},






onNext:function(value){
checkDisposed(this);
if(!this.isStopped){
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onNext(value);}}},






dispose:function(){
this.isDisposed=true;
this.observers=null;}});









Subject.create=function(observer,observable){
return new AnonymousSubject(observer,observable);};


return Subject;}(
Observable);





var AsyncSubject=Rx.AsyncSubject=function(__super__){
inherits(AsyncSubject,__super__);





function AsyncSubject(){
__super__.call(this);
this.isDisposed=false;
this.isStopped=false;
this.hasValue=false;
this.observers=[];
this.hasError=false;}


addProperties(AsyncSubject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);

if(!this.isStopped){
this.observers.push(o);
return new InnerSubscription(this,o);}


if(this.hasError){
o.onError(this.error);}else 
if(this.hasValue){
o.onNext(this.value);
o.onCompleted();}else 
{
o.onCompleted();}


return disposableEmpty;},





hasObservers:function(){
checkDisposed(this);
return this.observers.length>0;},




onCompleted:function(){
var i,len;
checkDisposed(this);
if(!this.isStopped){
this.isStopped=true;
var os=cloneArray(this.observers),len=os.length;

if(this.hasValue){
for(i=0;i<len;i++){
var o=os[i];
o.onNext(this.value);
o.onCompleted();}}else 

{
for(i=0;i<len;i++){
os[i].onCompleted();}}



this.observers.length=0;}},






onError:function(error){
checkDisposed(this);
if(!this.isStopped){
this.isStopped=true;
this.hasError=true;
this.error=error;

for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onError(error);}


this.observers.length=0;}},






onNext:function(value){
checkDisposed(this);
if(this.isStopped){return;}
this.value=value;
this.hasValue=true;},




dispose:function(){
this.isDisposed=true;
this.observers=null;
this.error=null;
this.value=null;}});



return AsyncSubject;}(
Observable);





var BehaviorSubject=Rx.BehaviorSubject=function(__super__){
inherits(BehaviorSubject,__super__);
function BehaviorSubject(value){
__super__.call(this);
this.value=value;
this.observers=[];
this.isDisposed=false;
this.isStopped=false;
this.hasError=false;}


addProperties(BehaviorSubject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);
if(!this.isStopped){
this.observers.push(o);
o.onNext(this.value);
return new InnerSubscription(this,o);}

if(this.hasError){
o.onError(this.error);}else 
{
o.onCompleted();}

return disposableEmpty;},








getValue:function(){
checkDisposed(this);
if(this.hasError){thrower(this.error);}
return this.value;},





hasObservers:function(){return this.observers.length>0;},



onCompleted:function(){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped=true;
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onCompleted();}


this.observers.length=0;},





onError:function(error){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped=true;
this.hasError=true;
this.error=error;

for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onError(error);}


this.observers.length=0;},





onNext:function(value){
checkDisposed(this);
if(this.isStopped){return;}
this.value=value;
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
os[i].onNext(value);}},





dispose:function(){
this.isDisposed=true;
this.observers=null;
this.value=null;
this.error=null;}});



return BehaviorSubject;}(
Observable);





var ReplaySubject=Rx.ReplaySubject=function(__super__){

var maxSafeInteger=Math.pow(2,53)-1;

function createRemovableDisposable(subject,observer){
return disposableCreate(function(){
observer.dispose();
!subject.isDisposed&&subject.observers.splice(subject.observers.indexOf(observer),1);});}



inherits(ReplaySubject,__super__);







function ReplaySubject(bufferSize,windowSize,scheduler){
this.bufferSize=bufferSize==null?maxSafeInteger:bufferSize;
this.windowSize=windowSize==null?maxSafeInteger:windowSize;
this.scheduler=scheduler||currentThreadScheduler;
this.q=[];
this.observers=[];
this.isStopped=false;
this.isDisposed=false;
this.hasError=false;
this.error=null;
__super__.call(this);}


addProperties(ReplaySubject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);
var so=new ScheduledObserver(this.scheduler,o),subscription=createRemovableDisposable(this,so);

this._trim(this.scheduler.now());
this.observers.push(so);

for(var i=0,len=this.q.length;i<len;i++){
so.onNext(this.q[i].value);}


if(this.hasError){
so.onError(this.error);}else 
if(this.isStopped){
so.onCompleted();}


so.ensureActive();
return subscription;},





hasObservers:function(){
return this.observers.length>0;},

_trim:function(now){
while(this.q.length>this.bufferSize){
this.q.shift();}

while(this.q.length>0&&now-this.q[0].interval>this.windowSize){
this.q.shift();}},






onNext:function(value){
checkDisposed(this);
if(this.isStopped){return;}
var now=this.scheduler.now();
this.q.push({interval:now,value:value});
this._trim(now);

for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
var observer=os[i];
observer.onNext(value);
observer.ensureActive();}},






onError:function(error){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped=true;
this.error=error;
this.hasError=true;
var now=this.scheduler.now();
this._trim(now);
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
var observer=os[i];
observer.onError(error);
observer.ensureActive();}

this.observers.length=0;},




onCompleted:function(){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped=true;
var now=this.scheduler.now();
this._trim(now);
for(var i=0,os=cloneArray(this.observers),len=os.length;i<len;i++){
var observer=os[i];
observer.onCompleted();
observer.ensureActive();}

this.observers.length=0;},




dispose:function(){
this.isDisposed=true;
this.observers=null;}});



return ReplaySubject;}(
Observable);

var AnonymousSubject=Rx.AnonymousSubject=function(__super__){
inherits(AnonymousSubject,__super__);
function AnonymousSubject(observer,observable){
this.observer=observer;
this.observable=observable;
__super__.call(this);}


addProperties(AnonymousSubject.prototype,Observer.prototype,{
_subscribe:function(o){
return this.observable.subscribe(o);},

onCompleted:function(){
this.observer.onCompleted();},

onError:function(error){
this.observer.onError(error);},

onNext:function(value){
this.observer.onNext(value);}});



return AnonymousSubject;}(
Observable);




Rx.Pauser=function(__super__){
inherits(Pauser,__super__);
function Pauser(){
__super__.call(this);}





Pauser.prototype.pause=function(){this.onNext(false);};




Pauser.prototype.resume=function(){this.onNext(true);};

return Pauser;}(
Subject);

if(typeof define=='function'&&typeof define.amd=='object'&&define.amd){
root.Rx=Rx;

define(function(){
return Rx;});}else 

if(freeExports&&freeModule){

if(moduleExports){
(freeModule.exports=Rx).Rx=Rx;}else 
{
freeExports.Rx=Rx;}}else 

{

root.Rx=Rx;}



var rEndingLine=captureLine();}).

call(this);
});
__d('sofTokyo/app/utils/api/PostsApi.js',function(global, require, module, exports) {  var 



apiConsts=require("sofTokyo/app/constants/api.js").apiConsts;
var PostsStream=require("sofTokyo/app/services/Streams.js").getStream("Posts");

var productsEndpoint=apiConsts.apiEndpoint+'products/';

var api={
LoadPosts:function _callee(page){var 

response;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return regeneratorRuntime.awrap(fetch(productsEndpoint+'list/'+page));case 3:response=_context.sent;
PostsStream.onNext(JSON.parse(response._bodyInit));_context.next=10;break;case 7:_context.prev=7;_context.t0=_context["catch"](0);

console.warn(_context.t0);case 10:case "end":return _context.stop();}}},null,this,[[0,7]]);}};




module.exports=api;
});
__d('sofTokyo/app/utils/api/SchoolsApi.js',function(global, require, module, exports) {  var 


apiConsts=require("sofTokyo/app/constants/api.js").apiConsts;
var SchoolsStream=require("sofTokyo/app/services/Streams.js").getStream("Schools");
var schoolsEndpoint=apiConsts.apiEndpoint+'metadata/schools/';

var api={
LoadSchools:function _callee(postId){var 

response;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return regeneratorRuntime.awrap(fetch(schoolsEndpoint+'list/'));case 3:response=_context.sent;
SchoolsStream.onNext(JSON.parse(response._bodyInit));_context.next=10;break;case 7:_context.prev=7;_context.t0=_context["catch"](0);

console.warn(_context.t0);case 10:case "end":return _context.stop();}}},null,this,[[0,7]]);}};




module.exports=api;
});
__d('sofTokyo/app/utils/api/UserApi.js',function(global, require, module, exports) {  var 





apiConsts=require("sofTokyo/app/constants/api.js").apiConsts;

var ErrorSubject=require("sofTokyo/app/services/Streams.js").getStream("Errors");
var UserSubject=require("sofTokyo/app/services/Streams.js").getStream("User");

var api={

getAvatar:function(userId){
return fetch(apiConsts.apiEndpoint+'auth/get_avatar/'+userId+'/thumb').then(function(res){
res.json();});},




getMember:function _callee(memberId,subject){var 


response;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return regeneratorRuntime.awrap(fetch(apiConsts.apiEndpoint+'members/member/'+memberId));case 3:response=_context.sent;
if(subject){
subject.onNext({data:JSON.parse(response._bodyInit)});}else 
{
UserSubject.onNext({data:JSON.parse(response._bodyInit)});}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context["catch"](0);



console.warn(_context.t0);case 10:case "end":return _context.stop();}}},null,this,[[0,7]]);},



getUser:function _callee2(userId,subject){var 

_response;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return regeneratorRuntime.awrap(fetch(apiConsts.apiEndpoint+'auth/get_user/'+userId));case 3:_response=_context2.sent;
if(subject){
subject.onNext({data:JSON.parse(_response._bodyInit)});}else 
{
UserSubject.onNext({data:JSON.parse(_response._bodyInit)});}_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2["catch"](0);



console.warn(_context2.t0);case 10:case "end":return _context2.stop();}}},null,this,[[0,7]]);},




sendCredentials:function _callee3(credentials){var 

_response2;return regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return regeneratorRuntime.awrap(fetch(apiConsts.apiEndpoint+'auth/login',{
method:'POST',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({
username:credentials.username,
password:credentials.password})}));case 3:_response2=_context3.sent;



UserSubject.onNext({type:'login',data:JSON.parse(_response2._bodyInit)});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3["catch"](0);


UserSubject.onNext({type:'login',error:_context3.t0});case 10:case "end":return _context3.stop();}}},null,this,[[0,7]]);}};




module.exports=api;
});
__d('sofTokyo/app/pages/Pages.d.js',function(global, require, module, exports) {  var 





feed=require("sofTokyo/app/pages/Feed.js");
var categories={
menu:require('sofTokyo/app/pages/CategoriesMenu.js')};

var login=require('sofTokyo/app/pages/Login.js');
var register=require('sofTokyo/app/pages/Register.js');
var post=require('sofTokyo/app/pages/PostView.js');
var schools=require('sofTokyo/app/pages/Schools.js');
var profile=require('sofTokyo/app/pages/Profile.js');
var search=require('sofTokyo/app/pages/Search.js');
var searchResults=require('sofTokyo/app/pages/SearchResults.js');

module.exports={
feed:feed,
categories:categories,
login:login,
post:post,
schools:schools,
profile:profile,
register:register,
search:search,
searchResults:searchResults};
});
__d('sofTokyo/app/pages/Feed.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var PostsList=require('sofTokyo/app/components/posts/PostsList.js');



var Feed=React.createClass({displayName:'Feed',


registerNavigatorManager:function(){
var NavigationManager=require("sofTokyo/app/services/NavigationManager.js");
NavigationManager.setNavigationManager(this.props);},


render:function(){
this.registerNavigatorManager();
return (
React.createElement(PostsList,null));}});




module.exports=Feed;
});
__d('sofTokyo/app/components/posts/PostsList.js',function(global, require, module, exports) {  var 




React=require('react-native/Libraries/react-native/react-native.js');
var api=require('sofTokyo/app/utils/api/PostsApi.js');

var PostElement=require('sofTokyo/app/components/posts/PostElement.js');
var GridView=require('react-native-grid-view/index.js');
var PostsStream=require("sofTokyo/app/services/Streams.js").getStream("Posts");
var GiftedSpinner=require('react-native-gifted-spinner/GiftedSpinner.js');var 


StyleSheet=

React.StyleSheet;var View=React.View;

var styles=StyleSheet.create({
container:{
flex:1,
flexDirection:'column',
alignItems:'center',
backgroundColor:'#FFFFFF'},

list:{
flexDirection:'row',
flexWrap:'wrap',
justifyContent:'center'},


item:{},



title:{
fontSize:25},

buttonText:{
fontSize:18,
color:'white'},

button:{
height:60,
backgroundColor:'#48BBEC',
flex:3,
alignItems:'center',
justifyContent:'center'},

searchInput:{
height:60,
padding:10,
fontSize:18,
color:'#111',
flex:10},

rowContainer:{
padding:10},


footerContainer:{
backgroundColor:'#E3E3E3',
alignItems:'center',
flexDirection:'row'}});






var PostsList=React.createClass({displayName:'PostsList',
getInitialState:function(){
return {
dataSource:[],
note:'',
error:'',
page:1,
isLoading:true};},



componentDidMount:function(){var _this=this;
api.LoadPosts(this.page);
PostsStream.subscribe(function(response){
_this.setState({
dataSource:response['posts']});});},




render:function(){

var _grid=
React.createElement(GridView,{
items:this.state.dataSource,
itemsPerRow:2,
renderItem:function(rowData){return React.createElement(PostElement,{key:rowData.id,postData:rowData});}});


var _loading=
React.createElement(View,{style:{
flex:1,
justifyContent:'center',
alignItems:'center'}},

React.createElement(GiftedSpinner,null));



var _render=this.state.dataSource&&this.state.dataSource.length?_grid:_loading;
return _render;}});



module.exports=PostsList;
});
__d('sofTokyo/app/components/posts/PostElement.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var Dimensions=require('Dimensions');
var windowSize=Dimensions.get("window");

var ResponsiveImage=require('react-native-responsive-image/react-native-responsive-image.js');
var Icon=require('FontAwesome');
var Avatar=require('sofTokyo/app/components/user/Avatar.js');
var PostLike=require('sofTokyo/app/components/posts/helpers/PostLike.js');
var PostContentDisplayer=require('sofTokyo/app/components/posts/helpers/PostContentDisplayer.js');var 


View=



React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;

var styles=StyleSheet.create({
container:{
flex:1,
flexDirection:'column',
backgroundColor:'#FFFFFF',
margin:10,
width:windowSize.width*0.4},

title:{
fontSize:15},


navIconContainer:{
flex:1,
flexDirection:'row',
justifyContent:'flex-end',
width:windowSize.width*0.4,
marginVertical:5},

authorDataDisplayContainer:{
flex:1,
flexDirection:'row',
alignItems:'center',
justifyContent:'flex-start',
width:windowSize.width*0.4},

textContainer:{
flex:1,
flexDirection:'row',
justifyContent:'flex-end'},


elementFooter:{
flex:1,
flexDirection:'row'}});




var imageSizes={

width:windowSize.width*0.45,
height:windowSize.height*0.6};



var NavigateToPost=React.createClass({displayName:'NavigateToPost',
goToPost:function(){
var subject=require("sofTokyo/app/services/NavigationManager.js").getStream();
subject.onNext({path:'post',params:{id:this.props.id}});},

render:function(){
return (
React.createElement(TouchableHighlight,{onPress:this.goToPost,style:styles.navIconContainer,underlayColor:'transparent'},
React.createElement(Icon,{name:'plus',size:10,color:'#000'})));}});





NavigateToPost.propTypes={
id:React.PropTypes.number};


var ElementFooter=React.createClass({displayName:'ElementFooter',
render:function(){
return (
React.createElement(View,{style:styles.elementFooter},
React.createElement(PostLike,{data:this.props.data}),
React.createElement(TouchableHighlight,{onPress:this.goToPost,style:styles.textContainer},
React.createElement(Text,null,
this.props.data['comment_count'],' ',React.createElement(Icon,{name:'comments',size:20,color:'##bbbbbb'})))));}});








ElementFooter.propTypes={
data:React.PropTypes.object};


var PostElement=React.createClass({displayName:'PostElement',
tap:function(){
console.warn('Tapped');
NavigatorSubject.onNext({path:'post',params:{id:this.props.postData.id}});},


goToPost:function(){
var subject=require("sofTokyo/app/services/NavigationManager.js").getStream();
subject.onNext({path:'post',params:{id:this.props.postData.id}});},


render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
React.createElement(ResponsiveImage,{source:{uri:this.props.postData.thumbnail},
initWidth:imageSizes.width,initHeight:imageSizes.height})),

React.createElement(NavigateToPost,{id:this.props.postData.id}),
React.createElement(View,null,
React.createElement(Text,{style:styles.title},' ',this.props.postData.title)),

React.createElement(PostContentDisplayer,{content:this.props.postData.content,
removeHTMLTags:true,crop:30}),

React.createElement(View,{style:styles.authorDataDisplayContainer},
React.createElement(Avatar,{author:this.props.postData.author})),

React.createElement(ElementFooter,{data:this.props.postData})));}});





PostElement.propTypes={
postData:React.PropTypes.object};



module.exports=PostElement;
});
__d('react-native-responsive-image/react-native-responsive-image.js',function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');
var Device=require('react-native-responsive-image/device.ios.js');var 
Image=React.Image;

var ResponsiveImage=React.createClass({displayName:'ResponsiveImage',
render:function(){
var width=Math.ceil(this.props.initWidth*Device.scale);
var height=Math.ceil(this.props.initHeight*Device.scale);
return (
React.createElement(Image,{style:[{width:width,height:height},this.props.style],source:this.props.source}));}});




module.exports=ResponsiveImage;
});
__d('react-native-responsive-image/device.ios.js',function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 
Dimensions=React.Dimensions;

var device=Dimensions.get('window');
var scale;

switch(device.width){

case 320:
scale=0.77;
break;

case 375:
scale=0.902;
break;

case 414:
scale=1;
break;

default:
scale=1;}


module.exports={scale:scale};
});
__d('FontAwesome',function(global, require, module, exports) {  'use strict';







var createIconSet=require('createIconSet');
var glyphMap={
"glass":61440,
"music":61441,
"search":61442,
"envelope-o":61443,
"heart":61444,
"star":61445,
"star-o":61446,
"user":61447,
"film":61448,
"th-large":61449,
"th":61450,
"th-list":61451,
"check":61452,
"remove":61453,
"close":61453,
"times":61453,
"search-plus":61454,
"search-minus":61456,
"power-off":61457,
"signal":61458,
"gear":61459,
"cog":61459,
"trash-o":61460,
"home":61461,
"file-o":61462,
"clock-o":61463,
"road":61464,
"download":61465,
"arrow-circle-o-down":61466,
"arrow-circle-o-up":61467,
"inbox":61468,
"play-circle-o":61469,
"rotate-right":61470,
"repeat":61470,
"refresh":61473,
"list-alt":61474,
"lock":61475,
"flag":61476,
"headphones":61477,
"volume-off":61478,
"volume-down":61479,
"volume-up":61480,
"qrcode":61481,
"barcode":61482,
"tag":61483,
"tags":61484,
"book":61485,
"bookmark":61486,
"print":61487,
"camera":61488,
"font":61489,
"bold":61490,
"italic":61491,
"text-height":61492,
"text-width":61493,
"align-left":61494,
"align-center":61495,
"align-right":61496,
"align-justify":61497,
"list":61498,
"dedent":61499,
"outdent":61499,
"indent":61500,
"video-camera":61501,
"photo":61502,
"image":61502,
"picture-o":61502,
"pencil":61504,
"map-marker":61505,
"adjust":61506,
"tint":61507,
"edit":61508,
"pencil-square-o":61508,
"share-square-o":61509,
"check-square-o":61510,
"arrows":61511,
"step-backward":61512,
"fast-backward":61513,
"backward":61514,
"play":61515,
"pause":61516,
"stop":61517,
"forward":61518,
"fast-forward":61520,
"step-forward":61521,
"eject":61522,
"chevron-left":61523,
"chevron-right":61524,
"plus-circle":61525,
"minus-circle":61526,
"times-circle":61527,
"check-circle":61528,
"question-circle":61529,
"info-circle":61530,
"crosshairs":61531,
"times-circle-o":61532,
"check-circle-o":61533,
"ban":61534,
"arrow-left":61536,
"arrow-right":61537,
"arrow-up":61538,
"arrow-down":61539,
"mail-forward":61540,
"share":61540,
"expand":61541,
"compress":61542,
"plus":61543,
"minus":61544,
"asterisk":61545,
"exclamation-circle":61546,
"gift":61547,
"leaf":61548,
"fire":61549,
"eye":61550,
"eye-slash":61552,
"warning":61553,
"exclamation-triangle":61553,
"plane":61554,
"calendar":61555,
"random":61556,
"comment":61557,
"magnet":61558,
"chevron-up":61559,
"chevron-down":61560,
"retweet":61561,
"shopping-cart":61562,
"folder":61563,
"folder-open":61564,
"arrows-v":61565,
"arrows-h":61566,
"bar-chart-o":61568,
"bar-chart":61568,
"twitter-square":61569,
"facebook-square":61570,
"camera-retro":61571,
"key":61572,
"gears":61573,
"cogs":61573,
"comments":61574,
"thumbs-o-up":61575,
"thumbs-o-down":61576,
"star-half":61577,
"heart-o":61578,
"sign-out":61579,
"linkedin-square":61580,
"thumb-tack":61581,
"external-link":61582,
"sign-in":61584,
"trophy":61585,
"github-square":61586,
"upload":61587,
"lemon-o":61588,
"phone":61589,
"square-o":61590,
"bookmark-o":61591,
"phone-square":61592,
"twitter":61593,
"facebook-f":61594,
"facebook":61594,
"github":61595,
"unlock":61596,
"credit-card":61597,
"feed":61598,
"rss":61598,
"hdd-o":61600,
"bullhorn":61601,
"bell":61683,
"certificate":61603,
"hand-o-right":61604,
"hand-o-left":61605,
"hand-o-up":61606,
"hand-o-down":61607,
"arrow-circle-left":61608,
"arrow-circle-right":61609,
"arrow-circle-up":61610,
"arrow-circle-down":61611,
"globe":61612,
"wrench":61613,
"tasks":61614,
"filter":61616,
"briefcase":61617,
"arrows-alt":61618,
"group":61632,
"users":61632,
"chain":61633,
"link":61633,
"cloud":61634,
"flask":61635,
"cut":61636,
"scissors":61636,
"copy":61637,
"files-o":61637,
"paperclip":61638,
"save":61639,
"floppy-o":61639,
"square":61640,
"navicon":61641,
"reorder":61641,
"bars":61641,
"list-ul":61642,
"list-ol":61643,
"strikethrough":61644,
"underline":61645,
"table":61646,
"magic":61648,
"truck":61649,
"pinterest":61650,
"pinterest-square":61651,
"google-plus-square":61652,
"google-plus":61653,
"money":61654,
"caret-down":61655,
"caret-up":61656,
"caret-left":61657,
"caret-right":61658,
"columns":61659,
"unsorted":61660,
"sort":61660,
"sort-down":61661,
"sort-desc":61661,
"sort-up":61662,
"sort-asc":61662,
"envelope":61664,
"linkedin":61665,
"rotate-left":61666,
"undo":61666,
"legal":61667,
"gavel":61667,
"dashboard":61668,
"tachometer":61668,
"comment-o":61669,
"comments-o":61670,
"flash":61671,
"bolt":61671,
"sitemap":61672,
"umbrella":61673,
"paste":61674,
"clipboard":61674,
"lightbulb-o":61675,
"exchange":61676,
"cloud-download":61677,
"cloud-upload":61678,
"user-md":61680,
"stethoscope":61681,
"suitcase":61682,
"bell-o":61602,
"coffee":61684,
"cutlery":61685,
"file-text-o":61686,
"building-o":61687,
"hospital-o":61688,
"ambulance":61689,
"medkit":61690,
"fighter-jet":61691,
"beer":61692,
"h-square":61693,
"plus-square":61694,
"angle-double-left":61696,
"angle-double-right":61697,
"angle-double-up":61698,
"angle-double-down":61699,
"angle-left":61700,
"angle-right":61701,
"angle-up":61702,
"angle-down":61703,
"desktop":61704,
"laptop":61705,
"tablet":61706,
"mobile-phone":61707,
"mobile":61707,
"circle-o":61708,
"quote-left":61709,
"quote-right":61710,
"spinner":61712,
"circle":61713,
"mail-reply":61714,
"reply":61714,
"github-alt":61715,
"folder-o":61716,
"folder-open-o":61717,
"smile-o":61720,
"frown-o":61721,
"meh-o":61722,
"gamepad":61723,
"keyboard-o":61724,
"flag-o":61725,
"flag-checkered":61726,
"terminal":61728,
"code":61729,
"mail-reply-all":61730,
"reply-all":61730,
"star-half-empty":61731,
"star-half-full":61731,
"star-half-o":61731,
"location-arrow":61732,
"crop":61733,
"code-fork":61734,
"unlink":61735,
"chain-broken":61735,
"question":61736,
"info":61737,
"exclamation":61738,
"superscript":61739,
"subscript":61740,
"eraser":61741,
"puzzle-piece":61742,
"microphone":61744,
"microphone-slash":61745,
"shield":61746,
"calendar-o":61747,
"fire-extinguisher":61748,
"rocket":61749,
"maxcdn":61750,
"chevron-circle-left":61751,
"chevron-circle-right":61752,
"chevron-circle-up":61753,
"chevron-circle-down":61754,
"html5":61755,
"css3":61756,
"anchor":61757,
"unlock-alt":61758,
"bullseye":61760,
"ellipsis-h":61761,
"ellipsis-v":61762,
"rss-square":61763,
"play-circle":61764,
"ticket":61765,
"minus-square":61766,
"minus-square-o":61767,
"level-up":61768,
"level-down":61769,
"check-square":61770,
"pencil-square":61771,
"external-link-square":61772,
"share-square":61773,
"compass":61774,
"toggle-down":61776,
"caret-square-o-down":61776,
"toggle-up":61777,
"caret-square-o-up":61777,
"toggle-right":61778,
"caret-square-o-right":61778,
"euro":61779,
"eur":61779,
"gbp":61780,
"dollar":61781,
"usd":61781,
"rupee":61782,
"inr":61782,
"cny":61783,
"rmb":61783,
"yen":61783,
"jpy":61783,
"ruble":61784,
"rouble":61784,
"rub":61784,
"won":61785,
"krw":61785,
"bitcoin":61786,
"btc":61786,
"file":61787,
"file-text":61788,
"sort-alpha-asc":61789,
"sort-alpha-desc":61790,
"sort-amount-asc":61792,
"sort-amount-desc":61793,
"sort-numeric-asc":61794,
"sort-numeric-desc":61795,
"thumbs-up":61796,
"thumbs-down":61797,
"youtube-square":61798,
"youtube":61799,
"xing":61800,
"xing-square":61801,
"youtube-play":61802,
"dropbox":61803,
"stack-overflow":61804,
"instagram":61805,
"flickr":61806,
"adn":61808,
"bitbucket":61809,
"bitbucket-square":61810,
"tumblr":61811,
"tumblr-square":61812,
"long-arrow-down":61813,
"long-arrow-up":61814,
"long-arrow-left":61815,
"long-arrow-right":61816,
"apple":61817,
"windows":61818,
"android":61819,
"linux":61820,
"dribbble":61821,
"skype":61822,
"foursquare":61824,
"trello":61825,
"female":61826,
"male":61827,
"gittip":61828,
"gratipay":61828,
"sun-o":61829,
"moon-o":61830,
"archive":61831,
"bug":61832,
"vk":61833,
"weibo":61834,
"renren":61835,
"pagelines":61836,
"stack-exchange":61837,
"arrow-circle-o-right":61838,
"arrow-circle-o-left":61840,
"toggle-left":61841,
"caret-square-o-left":61841,
"dot-circle-o":61842,
"wheelchair":61843,
"vimeo-square":61844,
"turkish-lira":61845,
"try":61845,
"plus-square-o":61846,
"space-shuttle":61847,
"slack":61848,
"envelope-square":61849,
"wordpress":61850,
"openid":61851,
"institution":61852,
"bank":61852,
"university":61852,
"mortar-board":61853,
"graduation-cap":61853,
"yahoo":61854,
"google":61856,
"reddit":61857,
"reddit-square":61858,
"stumbleupon-circle":61859,
"stumbleupon":61860,
"delicious":61861,
"digg":61862,
"pied-piper":61863,
"pied-piper-alt":61864,
"drupal":61865,
"joomla":61866,
"language":61867,
"fax":61868,
"building":61869,
"child":61870,
"paw":61872,
"spoon":61873,
"cube":61874,
"cubes":61875,
"behance":61876,
"behance-square":61877,
"steam":61878,
"steam-square":61879,
"recycle":61880,
"automobile":61881,
"car":61881,
"cab":61882,
"taxi":61882,
"tree":61883,
"spotify":61884,
"deviantart":61885,
"soundcloud":61886,
"database":61888,
"file-pdf-o":61889,
"file-word-o":61890,
"file-excel-o":61891,
"file-powerpoint-o":61892,
"file-photo-o":61893,
"file-picture-o":61893,
"file-image-o":61893,
"file-zip-o":61894,
"file-archive-o":61894,
"file-sound-o":61895,
"file-audio-o":61895,
"file-movie-o":61896,
"file-video-o":61896,
"file-code-o":61897,
"vine":61898,
"codepen":61899,
"jsfiddle":61900,
"life-bouy":61901,
"life-buoy":61901,
"life-saver":61901,
"support":61901,
"life-ring":61901,
"circle-o-notch":61902,
"ra":61904,
"rebel":61904,
"ge":61905,
"empire":61905,
"git-square":61906,
"git":61907,
"y-combinator-square":61908,
"yc-square":61908,
"hacker-news":61908,
"tencent-weibo":61909,
"qq":61910,
"wechat":61911,
"weixin":61911,
"send":61912,
"paper-plane":61912,
"send-o":61913,
"paper-plane-o":61913,
"history":61914,
"circle-thin":61915,
"header":61916,
"paragraph":61917,
"sliders":61918,
"share-alt":61920,
"share-alt-square":61921,
"bomb":61922,
"soccer-ball-o":61923,
"futbol-o":61923,
"tty":61924,
"binoculars":61925,
"plug":61926,
"slideshare":61927,
"twitch":61928,
"yelp":61929,
"newspaper-o":61930,
"wifi":61931,
"calculator":61932,
"paypal":61933,
"google-wallet":61934,
"cc-visa":61936,
"cc-mastercard":61937,
"cc-discover":61938,
"cc-amex":61939,
"cc-paypal":61940,
"cc-stripe":61941,
"bell-slash":61942,
"bell-slash-o":61943,
"trash":61944,
"copyright":61945,
"at":61946,
"eyedropper":61947,
"paint-brush":61948,
"birthday-cake":61949,
"area-chart":61950,
"pie-chart":61952,
"line-chart":61953,
"lastfm":61954,
"lastfm-square":61955,
"toggle-off":61956,
"toggle-on":61957,
"bicycle":61958,
"bus":61959,
"ioxhost":61960,
"angellist":61961,
"cc":61962,
"shekel":61963,
"sheqel":61963,
"ils":61963,
"meanpath":61964,
"buysellads":61965,
"connectdevelop":61966,
"dashcube":61968,
"forumbee":61969,
"leanpub":61970,
"sellsy":61971,
"shirtsinbulk":61972,
"simplybuilt":61973,
"skyatlas":61974,
"cart-plus":61975,
"cart-arrow-down":61976,
"diamond":61977,
"ship":61978,
"user-secret":61979,
"motorcycle":61980,
"street-view":61981,
"heartbeat":61982,
"venus":61985,
"mars":61986,
"mercury":61987,
"intersex":61988,
"transgender":61988,
"transgender-alt":61989,
"venus-double":61990,
"mars-double":61991,
"venus-mars":61992,
"mars-stroke":61993,
"mars-stroke-v":61994,
"mars-stroke-h":61995,
"neuter":61996,
"genderless":61997,
"facebook-official":62000,
"pinterest-p":62001,
"whatsapp":62002,
"server":62003,
"user-plus":62004,
"user-times":62005,
"hotel":62006,
"bed":62006,
"viacoin":62007,
"train":62008,
"subway":62009,
"medium":62010,
"yc":62011,
"y-combinator":62011,
"optin-monster":62012,
"opencart":62013,
"expeditedssl":62014,
"battery-4":62016,
"battery-full":62016,
"battery-3":62017,
"battery-three-quarters":62017,
"battery-2":62018,
"battery-half":62018,
"battery-1":62019,
"battery-quarter":62019,
"battery-0":62020,
"battery-empty":62020,
"mouse-pointer":62021,
"i-cursor":62022,
"object-group":62023,
"object-ungroup":62024,
"sticky-note":62025,
"sticky-note-o":62026,
"cc-jcb":62027,
"cc-diners-club":62028,
"clone":62029,
"balance-scale":62030,
"hourglass-o":62032,
"hourglass-1":62033,
"hourglass-start":62033,
"hourglass-2":62034,
"hourglass-half":62034,
"hourglass-3":62035,
"hourglass-end":62035,
"hourglass":62036,
"hand-grab-o":62037,
"hand-rock-o":62037,
"hand-stop-o":62038,
"hand-paper-o":62038,
"hand-scissors-o":62039,
"hand-lizard-o":62040,
"hand-spock-o":62041,
"hand-pointer-o":62042,
"hand-peace-o":62043,
"trademark":62044,
"registered":62045,
"creative-commons":62046,
"gg":62048,
"gg-circle":62049,
"tripadvisor":62050,
"odnoklassniki":62051,
"odnoklassniki-square":62052,
"get-pocket":62053,
"wikipedia-w":62054,
"safari":62055,
"chrome":62056,
"firefox":62057,
"opera":62058,
"internet-explorer":62059,
"tv":62060,
"television":62060,
"contao":62061,
"500px":62062,
"amazon":62064,
"calendar-plus-o":62065,
"calendar-minus-o":62066,
"calendar-times-o":62067,
"calendar-check-o":62068,
"industry":62069,
"map-pin":62070,
"map-signs":62071,
"map-o":62072,
"map":62073,
"commenting":62074,
"commenting-o":62075,
"houzz":62076,
"vimeo":62077,
"black-tie":62078,
"fonticons":62080,
"reddit-alien":62081,
"edge":62082,
"credit-card-alt":62083,
"codiepie":62084,
"modx":62085,
"fort-awesome":62086,
"usb":62087,
"product-hunt":62088,
"mixcloud":62089,
"scribd":62090,
"pause-circle":62091,
"pause-circle-o":62092,
"stop-circle":62093,
"stop-circle-o":62094,
"shopping-bag":62096,
"shopping-basket":62097,
"hashtag":62098,
"bluetooth":62099,
"bluetooth-b":62100,
"percent":62101};


var FontAwesome=createIconSet(glyphMap,'FontAwesome','FontAwesome.ttf');

module.exports=FontAwesome;
module.exports.glyphMap=glyphMap;
});
__d('createIconSet',function(global, require, module, exports) {  'use strict';





var pick=require('lodash/object/pick.js');
var omit=require('lodash/object/omit.js');
var isString=require('lodash/lang/isString.js');
var isEqual=require('lodash/lang/isEqual.js');

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=









React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;var TabBarIOS=React.TabBarIOS;var requireNativeComponent=React.requireNativeComponent;var NativeModules=React.NativeModules;var Platform=React.Platform;var PixelRatio=React.PixelRatio;var processColor=React.processColor;

var NativeIconAPI=NativeModules.RNVectorIconsManager||NativeModules.RNVectorIconsModule;

var DEFAULT_ICON_SIZE=12;
var TAB_BAR_ICON_SIZE=30;
var DEFAULT_ICON_COLOR='black';
var IOS7_BLUE='#007AFF';
var DEFAULT_BUTTON_ICON_SIZE=20;
var DEFAULT_BUTTON_ICON_COLOR='white';
var DEFAULT_BUTTON_RADIUS=5;
var DEFAULT_BUTTON_BACKGROUND=IOS7_BLUE;

function createIconSet(glyphMap,fontFamily,fontFile){
var fontReference=fontFamily;

if(Platform.OS==='android'&&fontFile){
fontReference=fontFile.replace(/\.(otf|ttf)$/,'');}


var Icon=React.createClass({displayName:'Icon',
propTypes:{
name:React.PropTypes.oneOf(Object.keys(glyphMap)).isRequired,
size:React.PropTypes.number,
color:React.PropTypes.string},

_root:null,

setNativeProps:function(nativeProps){
if(this._root==null){
throw new Error("Ref must have been set before calling setNativeProps");}

this._root.setNativeProps(nativeProps);},


render:function(){var _this=this;var _props=
this.props;var name=_props.name;var size=_props.size;var color=_props.color;var style=_props.style;var props=babelHelpers.objectWithoutProperties(_props,['name','size','color','style']);

var glyph=glyphMap[name]||'?';
if(typeof glyph==='number'){
glyph=String.fromCharCode(glyph);}


size=size||DEFAULT_ICON_SIZE;

var styleDefaults={
fontSize:size,
color:color};


props.style=[styleDefaults,style];
props.ref=function(component){return _this._root=component;};

styleDefaults.fontFamily=fontReference;

return React.createElement(Text,props,glyph,this.props.children);}});



var styles=StyleSheet.create({
container:{
flexDirection:'row',
justifyContent:'flex-start',
alignItems:'center',
padding:8},

touchable:{
overflow:'hidden'},

icon:{
marginRight:10},

text:{
fontWeight:'600',
backgroundColor:'transparent'}});



var IconButton=React.createClass({displayName:'IconButton',
getDefaultProps:function(){
return {
size:DEFAULT_BUTTON_ICON_SIZE,
color:DEFAULT_BUTTON_ICON_COLOR,
backgroundColor:DEFAULT_BUTTON_BACKGROUND,
borderRadius:DEFAULT_BUTTON_RADIUS};},



render:function(){var _props2=





this.props;var style=_props2.style;var iconStyle=_props2.iconStyle;var children=_props2.children;var props=babelHelpers.objectWithoutProperties(_props2,['style','iconStyle','children']);

var iconProps=pick(props,Object.keys(Text.propTypes),'style','name','size','color');
var touchableProps=pick(props,Object.keys(TouchableHighlight.propTypes));
props=omit(
props,
Object.keys(iconProps),
Object.keys(touchableProps),
'iconStyle',
'borderRadius',
'backgroundColor');

iconProps.style=this.props.iconStyle?[styles.icon,this.props.iconStyle]:styles.icon;

var colorStyle=pick(this.props,'color');
var blockStyle=pick(this.props,'backgroundColor','borderRadius');

if(isString(children)){
children=React.createElement(Text,{style:[styles.text,colorStyle]},children);}


return (
React.createElement(TouchableHighlight,babelHelpers.extends({style:[styles.touchable,blockStyle]},touchableProps),
React.createElement(View,babelHelpers.extends({
style:[styles.container,blockStyle,style]},
props),

React.createElement(Icon,iconProps),
children)));}});






var imageSourceCache={};

var getImageSource=function(name,size,color){
if(!NativeIconAPI){
if(Platform.OS==='android'){
throw new Error('RNVectorIconsModule not available, did you properly integrate the module?');}

throw new Error('RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a?');}


var glyph=glyphMap[name]||'?';
if(typeof glyph==='number'){
glyph=String.fromCharCode(glyph);}

size=size||DEFAULT_ICON_SIZE;
color=color||DEFAULT_ICON_COLOR;

if(processColor){
color=processColor(color);}


var cacheKey=glyph+':'+size+':'+color;
var scale=PixelRatio.get();

return new Promise(function(resolve,reject){
var cached=imageSourceCache[cacheKey];
if(typeof cached!=='undefined'){
if(!cached||cached instanceof Error){reject(cached);}
return resolve({uri:cached,scale:scale});}

NativeIconAPI.getImageForFont(fontReference,glyph,size,color,function(err,image){
if(typeof err==='string'){
err=new Error(err);}

imageSourceCache[cacheKey]=image||err||false;
if(!err&&image){
return resolve({uri:image,scale:scale});}

reject(err);});});};





var TabBarItem=React.createClass({displayName:'TabBarItem',
propTypes:{
iconName:React.PropTypes.oneOf(Object.keys(glyphMap)).isRequired,
selectedIconName:React.PropTypes.oneOf(Object.keys(glyphMap)),
iconSize:React.PropTypes.number},


updateIconSources:function(){var _this2=this;
var size=this.props.iconSize||TAB_BAR_ICON_SIZE;
if(this.props.iconName){
getImageSource(this.props.iconName,size).then(function(icon){return _this2.setState({icon:icon});});}

if(this.props.selectedIconName){
getImageSource(this.props.selectedIconName,size).then(function(selectedIcon){return _this2.setState({selectedIcon:selectedIcon});});}},



componentWillMount:function(){
this.updateIconSources();},


componentWillReceiveProps:function(nextProps){
var keys=Object.keys(TabBarItem.propTypes);
if(!isEqual(pick(nextProps,keys),pick(this.props,keys))){
this.updateIconSources();}},



render:function(){
return React.createElement(TabBarIOS.Item,babelHelpers.extends({},this.props,this.state));}});



Icon.Button=IconButton;
Icon.TabBarItem=TabBarItem;
Icon.getImageSource=getImageSource;

return Icon;}
;

module.exports=createIconSet;
});
__d('lodash/object/pick.js',function(global, require, module, exports) {  var baseFlatten=require('lodash/internal/baseFlatten.js'),
bindCallback=require('lodash/internal/bindCallback.js'),
pickByArray=require('lodash/internal/pickByArray.js'),
pickByCallback=require('lodash/internal/pickByCallback.js'),
restParam=require('lodash/function/restParam.js');



























var pick=restParam(function(object,props){
if(object==null){
return {};}

return typeof props[0]=='function'?
pickByCallback(object,bindCallback(props[0],props[1],3)):
pickByArray(object,baseFlatten(props));});


module.exports=pick;
});
__d('lodash/internal/baseFlatten.js',function(global, require, module, exports) {  var arrayPush=require('lodash/internal/arrayPush.js'),
isArguments=require('lodash/lang/isArguments.js'),
isArray=require('lodash/lang/isArray.js'),
isArrayLike=require('lodash/internal/isArrayLike.js'),
isObjectLike=require('lodash/internal/isObjectLike.js');












function baseFlatten(array,isDeep,isStrict,result){
result||(result=[]);

var index=-1,
length=array.length;

while(++index<length){
var value=array[index];
if(isObjectLike(value)&&isArrayLike(value)&&(
isStrict||isArray(value)||isArguments(value))){
if(isDeep){

baseFlatten(value,isDeep,isStrict,result);}else 
{
arrayPush(result,value);}}else 

if(!isStrict){
result[result.length]=value;}}


return result;}


module.exports=baseFlatten;
});
__d('lodash/internal/arrayPush.js',function(global, require, module, exports) {  function 







arrayPush(array,values){
var index=-1,
length=values.length,
offset=array.length;

while(++index<length){
array[offset+index]=values[index];}

return array;}


module.exports=arrayPush;
});
__d('lodash/lang/isArguments.js',function(global, require, module, exports) {  var isArrayLike=require('lodash/internal/isArrayLike.js'),
isObjectLike=require('lodash/internal/isObjectLike.js');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;


var propertyIsEnumerable=objectProto.propertyIsEnumerable;

















function isArguments(value){
return isObjectLike(value)&&isArrayLike(value)&&
hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');}


module.exports=isArguments;
});
__d('lodash/internal/isArrayLike.js',function(global, require, module, exports) {  var getLength=require('lodash/internal/getLength.js'),
isLength=require('lodash/internal/isLength.js');








function isArrayLike(value){
return value!=null&&isLength(getLength(value));}


module.exports=isArrayLike;
});
__d('lodash/internal/getLength.js',function(global, require, module, exports) {  var baseProperty=require('lodash/internal/baseProperty.js');











var getLength=baseProperty('length');

module.exports=getLength;
});
__d('lodash/internal/baseProperty.js',function(global, require, module, exports) {  function 






baseProperty(key){
return function(object){
return object==null?undefined:object[key];};}



module.exports=baseProperty;
});
__d('lodash/internal/isLength.js',function(global, require, module, exports) {  var 



MAX_SAFE_INTEGER=9007199254740991;










function isLength(value){
return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}


module.exports=isLength;
});
__d('lodash/internal/isObjectLike.js',function(global, require, module, exports) {  function 






isObjectLike(value){
return !!value&&typeof value=='object';}


module.exports=isObjectLike;
});
__d('lodash/lang/isArray.js',function(global, require, module, exports) {  var getNative=require('lodash/internal/getNative.js'),
isLength=require('lodash/internal/isLength.js'),
isObjectLike=require('lodash/internal/isObjectLike.js');


var arrayTag='[object Array]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;


var nativeIsArray=getNative(Array,'isArray');

















var isArray=nativeIsArray||function(value){
return isObjectLike(value)&&isLength(value.length)&&objToString.call(value)==arrayTag;};


module.exports=isArray;
});
__d('lodash/internal/getNative.js',function(global, require, module, exports) {  var isNative=require('lodash/lang/isNative.js');









function getNative(object,key){
var value=object==null?undefined:object[key];
return isNative(value)?value:undefined;}


module.exports=getNative;
});
__d('lodash/lang/isNative.js',function(global, require, module, exports) {  var isFunction=require('lodash/lang/isFunction.js'),
isObjectLike=require('lodash/internal/isObjectLike.js');


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var objectProto=Object.prototype;


var fnToString=Function.prototype.toString;


var hasOwnProperty=objectProto.hasOwnProperty;


var reIsNative=RegExp('^'+
fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,'\\$&').
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');


















function isNative(value){
if(value==null){
return false;}

if(isFunction(value)){
return reIsNative.test(fnToString.call(value));}

return isObjectLike(value)&&reIsHostCtor.test(value);}


module.exports=isNative;
});
__d('lodash/lang/isFunction.js',function(global, require, module, exports) {  var isObject=require('lodash/lang/isObject.js');


var funcTag='[object Function]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;

















function isFunction(value){



return isObject(value)&&objToString.call(value)==funcTag;}


module.exports=isFunction;
});
__d('lodash/lang/isObject.js',function(global, require, module, exports) {  function 



















isObject(value){


var type=typeof value;
return !!value&&(type=='object'||type=='function');}


module.exports=isObject;
});
__d('lodash/internal/bindCallback.js',function(global, require, module, exports) {  var identity=require('lodash/utility/identity.js');











function bindCallback(func,thisArg,argCount){
if(typeof func!='function'){
return identity;}

if(thisArg===undefined){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg,value);};

case 3:return function(value,index,collection){
return func.call(thisArg,value,index,collection);};

case 4:return function(accumulator,value,index,collection){
return func.call(thisArg,accumulator,value,index,collection);};

case 5:return function(value,other,key,object,source){
return func.call(thisArg,value,other,key,object,source);};}


return function(){
return func.apply(thisArg,arguments);};}



module.exports=bindCallback;
});
__d('lodash/utility/identity.js',function(global, require, module, exports) {  function 














identity(value){
return value;}


module.exports=identity;
});
__d('lodash/internal/pickByArray.js',function(global, require, module, exports) {  var toObject=require('lodash/internal/toObject.js');










function pickByArray(object,props){
object=toObject(object);

var index=-1,
length=props.length,
result={};

while(++index<length){
var key=props[index];
if(key in object){
result[key]=object[key];}}


return result;}


module.exports=pickByArray;
});
__d('lodash/internal/toObject.js',function(global, require, module, exports) {  var isObject=require('lodash/lang/isObject.js');








function toObject(value){
return isObject(value)?value:Object(value);}


module.exports=toObject;
});
__d('lodash/internal/pickByCallback.js',function(global, require, module, exports) {  var baseForIn=require('lodash/internal/baseForIn.js');










function pickByCallback(object,predicate){
var result={};
baseForIn(object,function(value,key,object){
if(predicate(value,key,object)){
result[key]=value;}});


return result;}


module.exports=pickByCallback;
});
__d('lodash/internal/baseForIn.js',function(global, require, module, exports) {  var baseFor=require('lodash/internal/baseFor.js'),
keysIn=require('lodash/object/keysIn.js');










function baseForIn(object,iteratee){
return baseFor(object,iteratee,keysIn);}


module.exports=baseForIn;
});
__d('lodash/internal/baseFor.js',function(global, require, module, exports) {  var createBaseFor=require('lodash/internal/createBaseFor.js');













var baseFor=createBaseFor();

module.exports=baseFor;
});
__d('lodash/internal/createBaseFor.js',function(global, require, module, exports) {  var toObject=require('lodash/internal/toObject.js');








function createBaseFor(fromRight){
return function(object,iteratee,keysFunc){
var iterable=toObject(object),
props=keysFunc(object),
length=props.length,
index=fromRight?length:-1;

while(fromRight?index--:++index<length){
var key=props[index];
if(iteratee(iterable[key],key,iterable)===false){
break;}}


return object;};}



module.exports=createBaseFor;
});
__d('lodash/object/keysIn.js',function(global, require, module, exports) {  var isArguments=require('lodash/lang/isArguments.js'),
isArray=require('lodash/lang/isArray.js'),
isIndex=require('lodash/internal/isIndex.js'),
isLength=require('lodash/internal/isLength.js'),
isObject=require('lodash/lang/isObject.js');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;























function keysIn(object){
if(object==null){
return [];}

if(!isObject(object)){
object=Object(object);}

var length=object.length;
length=length&&isLength(length)&&(
isArray(object)||isArguments(object))&&length||0;

var Ctor=object.constructor,
index=-1,
isProto=typeof Ctor=='function'&&Ctor.prototype===object,
result=Array(length),
skipIndexes=length>0;

while(++index<length){
result[index]=index+'';}

for(var key in object){
if(!(skipIndexes&&isIndex(key,length))&&
!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){
result.push(key);}}


return result;}


module.exports=keysIn;
});
__d('lodash/internal/isIndex.js',function(global, require, module, exports) {  var 
reIsUint=/^\d+$/;





var MAX_SAFE_INTEGER=9007199254740991;









function isIndex(value,length){
value=typeof value=='number'||reIsUint.test(value)?+value:-1;
length=length==null?MAX_SAFE_INTEGER:length;
return value>-1&&value%1==0&&value<length;}


module.exports=isIndex;
});
__d('lodash/function/restParam.js',function(global, require, module, exports) {  var 
FUNC_ERROR_TEXT='Expected a function';


var nativeMax=Math.max;























function restParam(func,start){
if(typeof func!='function'){
throw new TypeError(FUNC_ERROR_TEXT);}

start=nativeMax(start===undefined?func.length-1:+start||0,0);
return function(){
var args=arguments,
index=-1,
length=nativeMax(args.length-start,0),
rest=Array(length);

while(++index<length){
rest[index]=args[start+index];}

switch(start){
case 0:return func.call(this,rest);
case 1:return func.call(this,args[0],rest);
case 2:return func.call(this,args[0],args[1],rest);}

var otherArgs=Array(start+1);
index=-1;
while(++index<start){
otherArgs[index]=args[index];}

otherArgs[start]=rest;
return func.apply(this,otherArgs);};}



module.exports=restParam;
});
__d('lodash/object/omit.js',function(global, require, module, exports) {  var arrayMap=require('lodash/internal/arrayMap.js'),
baseDifference=require('lodash/internal/baseDifference.js'),
baseFlatten=require('lodash/internal/baseFlatten.js'),
bindCallback=require('lodash/internal/bindCallback.js'),
keysIn=require('lodash/object/keysIn.js'),
pickByArray=require('lodash/internal/pickByArray.js'),
pickByCallback=require('lodash/internal/pickByCallback.js'),
restParam=require('lodash/function/restParam.js');
























var omit=restParam(function(object,props){
if(object==null){
return {};}

if(typeof props[0]!='function'){
var props=arrayMap(baseFlatten(props),String);
return pickByArray(object,baseDifference(keysIn(object),props));}

var predicate=bindCallback(props[0],props[1],3);
return pickByCallback(object,function(value,key,object){
return !predicate(value,key,object);});});



module.exports=omit;
});
__d('lodash/internal/arrayMap.js',function(global, require, module, exports) {  function 








arrayMap(array,iteratee){
var index=-1,
length=array.length,
result=Array(length);

while(++index<length){
result[index]=iteratee(array[index],index,array);}

return result;}


module.exports=arrayMap;
});
__d('lodash/internal/baseDifference.js',function(global, require, module, exports) {  var baseIndexOf=require('lodash/internal/baseIndexOf.js'),
cacheIndexOf=require('lodash/internal/cacheIndexOf.js'),
createCache=require('lodash/internal/createCache.js');


var LARGE_ARRAY_SIZE=200;










function baseDifference(array,values){
var length=array?array.length:0,
result=[];

if(!length){
return result;}

var index=-1,
indexOf=baseIndexOf,
isCommon=true,
cache=isCommon&&values.length>=LARGE_ARRAY_SIZE?createCache(values):null,
valuesLength=values.length;

if(cache){
indexOf=cacheIndexOf;
isCommon=false;
values=cache;}

outer: 
while(++index<length){
var value=array[index];

if(isCommon&&value===value){
var valuesIndex=valuesLength;
while(valuesIndex--){
if(values[valuesIndex]===value){
continue outer;}}


result.push(value);}else 

if(indexOf(values,value,0)<0){
result.push(value);}}


return result;}


module.exports=baseDifference;
});
__d('lodash/internal/baseIndexOf.js',function(global, require, module, exports) {  var indexOfNaN=require('lodash/internal/indexOfNaN.js');










function baseIndexOf(array,value,fromIndex){
if(value!==value){
return indexOfNaN(array,fromIndex);}

var index=fromIndex-1,
length=array.length;

while(++index<length){
if(array[index]===value){
return index;}}


return -1;}


module.exports=baseIndexOf;
});
__d('lodash/internal/indexOfNaN.js',function(global, require, module, exports) {  function 








indexOfNaN(array,fromIndex,fromRight){
var length=array.length,
index=fromIndex+(fromRight?0:-1);

while(fromRight?index--:++index<length){
var other=array[index];
if(other!==other){
return index;}}


return -1;}


module.exports=indexOfNaN;
});
__d('lodash/internal/cacheIndexOf.js',function(global, require, module, exports) {  var isObject=require('lodash/lang/isObject.js');










function cacheIndexOf(cache,value){
var data=cache.data,
result=typeof value=='string'||isObject(value)?data.set.has(value):data.hash[value];

return result?0:-1;}


module.exports=cacheIndexOf;
});
__d('lodash/internal/createCache.js',function(global, require, module, exports) {  var SetCache=require('lodash/internal/SetCache.js'),
getNative=require('lodash/internal/getNative.js');


var Set=getNative(global,'Set');


var nativeCreate=getNative(Object,'create');








function createCache(values){
return nativeCreate&&Set?new SetCache(values):null;}


module.exports=createCache;
});
__d('lodash/internal/SetCache.js',function(global, require, module, exports) {  var cachePush=require('lodash/internal/cachePush.js'),
getNative=require('lodash/internal/getNative.js');


var Set=getNative(global,'Set');


var nativeCreate=getNative(Object,'create');








function SetCache(values){
var length=values?values.length:0;

this.data={'hash':nativeCreate(null),'set':new Set()};
while(length--){
this.push(values[length]);}}




SetCache.prototype.push=cachePush;

module.exports=SetCache;
});
__d('lodash/internal/cachePush.js',function(global, require, module, exports) {  var isObject=require('lodash/lang/isObject.js');









function cachePush(value){
var data=this.data;
if(typeof value=='string'||isObject(value)){
data.set.add(value);}else 
{
data.hash[value]=true;}}



module.exports=cachePush;
});
__d('lodash/lang/isString.js',function(global, require, module, exports) {  var isObjectLike=require('lodash/internal/isObjectLike.js');


var stringTag='[object String]';


var objectProto=Object.prototype;





var objToString=objectProto.toString;

















function isString(value){
return typeof value=='string'||isObjectLike(value)&&objToString.call(value)==stringTag;}


module.exports=isString;
});
__d('lodash/lang/isEqual.js',function(global, require, module, exports) {  var baseIsEqual=require('lodash/internal/baseIsEqual.js'),
bindCallback=require('lodash/internal/bindCallback.js');













































function isEqual(value,other,customizer,thisArg){
customizer=typeof customizer=='function'?bindCallback(customizer,thisArg,3):undefined;
var result=customizer?customizer(value,other):undefined;
return result===undefined?baseIsEqual(value,other,customizer):!!result;}


module.exports=isEqual;
});
__d('lodash/internal/baseIsEqual.js',function(global, require, module, exports) {  var baseIsEqualDeep=require('lodash/internal/baseIsEqualDeep.js'),
isObject=require('lodash/lang/isObject.js'),
isObjectLike=require('lodash/internal/isObjectLike.js');














function baseIsEqual(value,other,customizer,isLoose,stackA,stackB){
if(value===other){
return true;}

if(value==null||other==null||!isObject(value)&&!isObjectLike(other)){
return value!==value&&other!==other;}

return baseIsEqualDeep(value,other,baseIsEqual,customizer,isLoose,stackA,stackB);}


module.exports=baseIsEqual;
});
__d('lodash/internal/baseIsEqualDeep.js',function(global, require, module, exports) {  var equalArrays=require('lodash/internal/equalArrays.js'),
equalByTag=require('lodash/internal/equalByTag.js'),
equalObjects=require('lodash/internal/equalObjects.js'),
isArray=require('lodash/lang/isArray.js'),
isTypedArray=require('lodash/lang/isTypedArray.js');


var argsTag='[object Arguments]',
arrayTag='[object Array]',
objectTag='[object Object]';


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;





var objToString=objectProto.toString;
















function baseIsEqualDeep(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objIsArr=isArray(object),
othIsArr=isArray(other),
objTag=arrayTag,
othTag=arrayTag;

if(!objIsArr){
objTag=objToString.call(object);
if(objTag==argsTag){
objTag=objectTag;}else 
if(objTag!=objectTag){
objIsArr=isTypedArray(object);}}


if(!othIsArr){
othTag=objToString.call(other);
if(othTag==argsTag){
othTag=objectTag;}else 
if(othTag!=objectTag){
othIsArr=isTypedArray(other);}}


var objIsObj=objTag==objectTag,
othIsObj=othTag==objectTag,
isSameTag=objTag==othTag;

if(isSameTag&&!(objIsArr||objIsObj)){
return equalByTag(object,other,objTag);}

if(!isLoose){
var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),
othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');

if(objIsWrapped||othIsWrapped){
return equalFunc(objIsWrapped?object.value():object,othIsWrapped?other.value():other,customizer,isLoose,stackA,stackB);}}


if(!isSameTag){
return false;}



stackA||(stackA=[]);
stackB||(stackB=[]);

var length=stackA.length;
while(length--){
if(stackA[length]==object){
return stackB[length]==other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object,other,equalFunc,customizer,isLoose,stackA,stackB);

stackA.pop();
stackB.pop();

return result;}


module.exports=baseIsEqualDeep;
});
__d('lodash/internal/equalArrays.js',function(global, require, module, exports) {  var arraySome=require('lodash/internal/arraySome.js');















function equalArrays(array,other,equalFunc,customizer,isLoose,stackA,stackB){
var index=-1,
arrLength=array.length,
othLength=other.length;

if(arrLength!=othLength&&!(isLoose&&othLength>arrLength)){
return false;}


while(++index<arrLength){
var arrValue=array[index],
othValue=other[index],
result=customizer?customizer(isLoose?othValue:arrValue,isLoose?arrValue:othValue,index):undefined;

if(result!==undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other,function(othValue){
return arrValue===othValue||equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB);}))
{
return false;}}else 

if(!(arrValue===othValue||equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB))){
return false;}}


return true;}


module.exports=equalArrays;
});
__d('lodash/internal/arraySome.js',function(global, require, module, exports) {  function 









arraySome(array,predicate){
var index=-1,
length=array.length;

while(++index<length){
if(predicate(array[index],index,array)){
return true;}}


return false;}


module.exports=arraySome;
});
__d('lodash/internal/equalByTag.js',function(global, require, module, exports) {  var 
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
numberTag='[object Number]',
regexpTag='[object RegExp]',
stringTag='[object String]';














function equalByTag(object,other,tag){
switch(tag){
case boolTag:
case dateTag:


return +object==+other;

case errorTag:
return object.name==other.name&&object.message==other.message;

case numberTag:

return object!=+object?
other!=+other:
object==+other;

case regexpTag:
case stringTag:


return object==other+'';}

return false;}


module.exports=equalByTag;
});
__d('lodash/internal/equalObjects.js',function(global, require, module, exports) {  var keys=require('lodash/object/keys.js');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;















function equalObjects(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objProps=keys(object),
objLength=objProps.length,
othProps=keys(other),
othLength=othProps.length;

if(objLength!=othLength&&!isLoose){
return false;}

var index=objLength;
while(index--){
var key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other,key))){
return false;}}


var skipCtor=isLoose;
while(++index<objLength){
key=objProps[index];
var objValue=object[key],
othValue=other[key],
result=customizer?customizer(isLoose?othValue:objValue,isLoose?objValue:othValue,key):undefined;


if(!(result===undefined?equalFunc(objValue,othValue,customizer,isLoose,stackA,stackB):result)){
return false;}

skipCtor||(skipCtor=key=='constructor');}

if(!skipCtor){
var objCtor=object.constructor,
othCtor=other.constructor;


if(objCtor!=othCtor&&
'constructor' in object&&'constructor' in other&&
!(typeof objCtor=='function'&&objCtor instanceof objCtor&&
typeof othCtor=='function'&&othCtor instanceof othCtor)){
return false;}}


return true;}


module.exports=equalObjects;
});
__d('lodash/object/keys.js',function(global, require, module, exports) {  var getNative=require('lodash/internal/getNative.js'),
isArrayLike=require('lodash/internal/isArrayLike.js'),
isObject=require('lodash/lang/isObject.js'),
shimKeys=require('lodash/internal/shimKeys.js');


var nativeKeys=getNative(Object,'keys');




























var keys=!nativeKeys?shimKeys:function(object){
var Ctor=object==null?undefined:object.constructor;
if(typeof Ctor=='function'&&Ctor.prototype===object||
typeof object!='function'&&isArrayLike(object)){
return shimKeys(object);}

return isObject(object)?nativeKeys(object):[];};


module.exports=keys;
});
__d('lodash/internal/shimKeys.js',function(global, require, module, exports) {  var isArguments=require('lodash/lang/isArguments.js'),
isArray=require('lodash/lang/isArray.js'),
isIndex=require('lodash/internal/isIndex.js'),
isLength=require('lodash/internal/isLength.js'),
keysIn=require('lodash/object/keysIn.js');


var objectProto=Object.prototype;


var hasOwnProperty=objectProto.hasOwnProperty;









function shimKeys(object){
var props=keysIn(object),
propsLength=props.length,
length=propsLength&&object.length;

var allowIndexes=!!length&&isLength(length)&&(
isArray(object)||isArguments(object));

var index=-1,
result=[];

while(++index<propsLength){
var key=props[index];
if(allowIndexes&&isIndex(key,length)||hasOwnProperty.call(object,key)){
result.push(key);}}


return result;}


module.exports=shimKeys;
});
__d('lodash/lang/isTypedArray.js',function(global, require, module, exports) {  var isLength=require('lodash/internal/isLength.js'),
isObjectLike=require('lodash/internal/isObjectLike.js');


var argsTag='[object Arguments]',
arrayTag='[object Array]',
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
funcTag='[object Function]',
mapTag='[object Map]',
numberTag='[object Number]',
objectTag='[object Object]',
regexpTag='[object RegExp]',
setTag='[object Set]',
stringTag='[object String]',
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]',
float32Tag='[object Float32Array]',
float64Tag='[object Float64Array]',
int8Tag='[object Int8Array]',
int16Tag='[object Int16Array]',
int32Tag='[object Int32Array]',
uint8Tag='[object Uint8Array]',
uint8ClampedTag='[object Uint8ClampedArray]',
uint16Tag='[object Uint16Array]',
uint32Tag='[object Uint32Array]';


var typedArrayTags={};
typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=
typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=
typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=
typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=
typedArrayTags[uint32Tag]=true;
typedArrayTags[argsTag]=typedArrayTags[arrayTag]=
typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=
typedArrayTags[dateTag]=typedArrayTags[errorTag]=
typedArrayTags[funcTag]=typedArrayTags[mapTag]=
typedArrayTags[numberTag]=typedArrayTags[objectTag]=
typedArrayTags[regexpTag]=typedArrayTags[setTag]=
typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;


var objectProto=Object.prototype;





var objToString=objectProto.toString;

















function isTypedArray(value){
return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[objToString.call(value)];}


module.exports=isTypedArray;
});
__d('sofTokyo/app/components/user/Avatar.js',function(global, require, module, exports) {  var 


React=require('react-native/Libraries/react-native/react-native.js');var 

Text=





React.Text;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;

var Icon=require('FontAwesome');

var styles=StyleSheet.create({
image:{
height:25,
width:25,
borderRadius:65,
marginTop:5,
alignSelf:'flex-end'},


avatarContainer:{
flex:1,
flexDirection:"row",
justifyContent:"center"},


avatarName:{
marginVertical:6.25,
marginLeft:3}});




var Avatar=React.createClass({displayName:'Avatar',

navigateToAuthor:function(){
var subject=require("sofTokyo/app/services/NavigationManager.js").getStream();
subject.onNext({path:'profile',params:{id:this.props.author.id}});},


render:function(){

var parsePhotoUrl=function(photoUrl){
if(photoUrl.indexOf("http")==-1){
photoUrl="http:"+photoUrl;}


return photoUrl;};


var _photo=this.props.author.avatar?parsePhotoUrl(this.props.author.avatar):"http://www.gravatar.com/avatar/00000000000000000000000000000000?d=mm&f=y";
return (
React.createElement(TouchableHighlight,{onPress:this.navigateToAuthor},
React.createElement(View,{style:styles.avatarContainer},
React.createElement(Image,{style:styles.image,source:{uri:_photo}}),
React.createElement(Text,{style:styles.avatarName},
this.props.author['name']))));}});








Avatar.propTypes={
author:React.PropTypes.object};

module.exports=Avatar;
});
__d('sofTokyo/app/components/posts/helpers/PostLike.js',function(global, require, module, exports) {  var 




React=require('react-native/Libraries/react-native/react-native.js');
var Icon=require('EvilIcons');
var api=require('sofTokyo/app/utils/api/PostApi.js');var 


View=



React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;

var styles=StyleSheet.create({
postLikeContainer:{
flex:1,
flexDirection:'row'}});



var PostLike=React.createClass({displayName:'PostLike',
LikePost:function(){
var PostLikeSubject=require("sofTokyo/app/services/Streams.js").getStream("PostLike"+this.props.id);
api.LikePost(this.props.data.id,PostLikeSubject);
PostLikeSubject.subscribe(function(data){
console.log(data);});},


render:function(){
return (
React.createElement(View,null,
React.createElement(TouchableHighlight,{onPress:this.LikePost},
React.createElement(View,{style:styles.postLikeContainer},
React.createElement(Icon,{name:'like',size:30},'0')))));}});







PostLike.propTypes={
data:React.PropTypes.object};


module.exports=PostLike;
});
__d('EvilIcons',function(global, require, module, exports) {  'use strict';







var createIconSet=require('createIconSet');
var glyphMap={
"archive":61696,
"arrow-down":61697,
"arrow-left":61698,
"arrow-right":61699,
"arrow-up":61700,
"bell":61701,
"calendar":61702,
"camera":61703,
"cart":61704,
"chart":61705,
"check":61706,
"chevron-down":61707,
"chevron-left":61708,
"chevron-right":61709,
"chevron-up":61710,
"clock":61711,
"close":61712,
"close-o":61713,
"comment":61714,
"credit-card":61715,
"envelope":61716,
"exclamation":61717,
"external-link":61718,
"eye":61719,
"gear":61720,
"heart":61721,
"image":61722,
"like":61723,
"link":61724,
"location":61725,
"lock":61726,
"minus":61727,
"navicon":61728,
"paperclip":61729,
"pencil":61730,
"play":61731,
"plus":61732,
"pointer":61733,
"question":61734,
"redo":61735,
"refresh":61736,
"retweet":61737,
"sc-facebook":61738,
"sc-github":61739,
"sc-google-plus":61740,
"sc-instagram":61741,
"sc-linkedin":61742,
"sc-odnoklassniki":61743,
"sc-pinterest":61744,
"sc-skype":61745,
"sc-soundcloud":61746,
"sc-tumblr":61747,
"sc-twitter":61748,
"sc-vimeo":61749,
"sc-vk":61750,
"sc-youtube":61751,
"search":61752,
"share-apple":61753,
"share-google":61754,
"spinner":61755,
"spinner-2":61756,
"spinner-3":61757,
"star":61758,
"tag":61759,
"trash":61760,
"trophy":61761,
"undo":61762,
"unlock":61763,
"user":61764};


var EvilIcons=createIconSet(glyphMap,'EvilIcons','EvilIcons.ttf');

module.exports=EvilIcons;
module.exports.glyphMap=glyphMap;
});
__d('sofTokyo/app/components/posts/helpers/PostContentDisplayer.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var Icon=require('EvilIcons');
var api=require('sofTokyo/app/utils/api/PostApi.js');var 


View=


React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;

var styles=StyleSheet.create({
postLikeContainer:{
flex:1,
flexDirection:'row'}});


var regex=/(<([^>]+)>)/ig;

var PostContentDisplayer=React.createClass({displayName:'PostContentDisplayer',
render:function(){

var _content=this.props.content;
if(!!_content){

if(this.props.removeHTMLTags){
_content=this.props.content.replace(regex,"");}


if(this.props.crop){
_content=_content.substring(0,this.props.crop)+"...";}}else 

{
_content="";}


return (
React.createElement(View,null,
React.createElement(Text,null,
_content)));}});






PostContentDisplayer.propTypes={
content:React.PropTypes.string,
removeHTMLTags:React.PropTypes.bool,
crop:React.PropTypes.number};


module.exports=PostContentDisplayer;
});
__d('react-native-grid-view/index.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


AppRegistry=



React.AppRegistry;var View=React.View;var StyleSheet=React.StyleSheet;var ListView=React.ListView;

var CollectionView=React.createClass({displayName:'CollectionView',
groupItems:function(items,itemsPerRow){
var itemsGroups=[];
var group=[];
items.forEach(function(item){
if(group.length===itemsPerRow){
itemsGroups.push(group);
group=[item];}else 
{
group.push(item);}});



if(group.length>0){
itemsGroups.push(group);}


return itemsGroups;},

getInitialState:function(){
return {items:[],renderItem:null,style:undefined,itemsPerRow:1,onEndReached:undefined};},

renderGroup:function(group){
var that=this;
var items=group.map(function(item){
return that.props.renderItem(item);});

return (
React.createElement(View,{style:styles.group},
items));},



render:function(){
var groups=this.groupItems(this.props.items,this.props.itemsPerRow);
var ds=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1!==r2;}});
return React.createElement(ListView,{
dataSource:ds.cloneWithRows(groups),
renderRow:this.renderGroup,
style:this.props.style,
onEndReached:this.props.onEndReached,
scrollEnabled:this.props.scrollEnabled});}});





var styles=StyleSheet.create({
group:{
flexDirection:'row',
alignItems:'center',
justifyContent:'center'}});



module.exports=CollectionView;
});
__d('react-native-gifted-spinner/GiftedSpinner.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=



React.View;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var ProgressBarAndroid=React.ProgressBarAndroid;var Platform=React.Platform;

var GiftedSpinner=React.createClass({displayName:'GiftedSpinner',

_getSpinner:function(){
if(Platform.OS==='android'){
return (
React.createElement(ProgressBarAndroid,babelHelpers.extends({
style:{
height:20},

styleAttr:'Inverse'},
this.props)));}else 


{
return (
React.createElement(ActivityIndicatorIOS,babelHelpers.extends({
animating:true,
size:'small'},
this.props)));}},





render:function(){
return (
React.createElement(View,null,
this._getSpinner()));}});







module.exports=GiftedSpinner;
});
__d('sofTokyo/app/pages/CategoriesMenu.js',function(global, require, module, exports) {  
});
__d('sofTokyo/app/pages/Login.js',function(global, require, module, exports) {  var _apslReactNativeButton=require('apsl-react-native-button/Button.js');var _apslReactNativeButton2=babelHelpers.interopRequireDefault(_apslReactNativeButton);







var React=require('react-native/Libraries/react-native/react-native.js');

var Dimensions=require('Dimensions');
var windowsSize=Dimensions.get('window');



var api=require("sofTokyo/app/utils/api/UserApi.js");


var t=require('tcomb-form-native/index.js');

var I18nService=require('sofTokyo/app/i18n.js');

I18nService.set('ja-JP',{
'login':'ログイン',
'loginWithFacebook':'Facebookで始める',
'register':"登録 "});



var I18n=I18nService.getTranslations();var 


View=


React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;

var Icon=require('FontAwesome');

var UserSubject=require("sofTokyo/app/services/Streams.js").getStream("User");

var styles={
Search:{
flex:1,
padding:30,
flexDirection:'column',
justifyContent:'center',
backgroundColor:'#FFFFFF'},

title:{
marginBottom:20,
fontSize:25,
textAlign:'center',
color:'#0000'},

searchInput:{
height:50,
padding:4,
marginRight:5,
fontSize:23,
borderWidth:1,
borderColor:'white',
borderRadius:8,
color:'white'},

buttonText:{
fontSize:18,
color:'#111',
alignSelf:'center'},

button:{
height:45,
flexDirection:'row',
backgroundColor:'white',
borderColor:'white',
borderWidth:1,
borderRadius:8,
marginBottom:10,
marginTop:10,
alignSelf:'stretch',
justifyContent:'center'}};



var styles=StyleSheet.create({
buttonsContainer:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},

facebookContainer:{
backgroundColor:"#2A406B",
height:windowsSize.height*0.2,
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


facebookButton:{
flex:1,
borderColor:'#2A406B',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3,
width:windowsSize.width*0.75,
marginLeft:windowsSize.width*0.125,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


loginButtonContainer:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


loginButton:{
flex:1,
borderColor:'#EEEEEE',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3,
width:windowsSize.width*0.5,
marginLeft:windowsSize.width*0.25,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


registerButton:{
flex:1,
borderColor:'#00b9f7',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3,
width:windowsSize.width*0.4,
marginLeft:windowsSize.width*0.30,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


loginText:{
color:"##444444",
fontSize:25},


registerText:{
color:"##444444",
fontSize:20},



facebookText:{
color:"#FFF",
fontSize:25}});



var Form=t.form.Form;

var UserCredentials=t.struct({
username:t.String,
password:t.String});

var options={};




var username={};



var storage=require("sofTokyo/app/services/Storage.js").getInstance();

var Login=React.createClass({displayName:'Login',
loginWithFacebook:function(){
FBLoginManager.loginWithPermissions(["email","user_friends"],function(error,data){
if(!error){
console.info("Login data: ",data);}else 
{
console.info("Error: ",data);}});},




login:function(){var _this=this;
var _credentials=this.refs.form.getValue();
if(_credentials){
api.sendCredentials(_credentials);
UserSubject.subscribe(function(response){
if(!response.error){
storage.save({
key:'cookies',
rawData:{
cookieName:response.data['cookie_name'],
cookie:response.data['cookie']}});


storage.save({
key:'UserId',
rawData:{
data:response.data['user']['id']}});


var NavigationSubject=require("sofTokyo/app/services/NavigationManager.js").getStream();
NavigationSubject.onNext({path:'profile',id:'me'});}else 
{
_this.state.error=error;}});}},





register:function(){
var NavigationSubject=require("sofTokyo/app/services/NavigationManager.js").getStream();
NavigationSubject.onNext({path:'register'});},


render:function(){
return (
React.createElement(View,{style:styles.Search},
React.createElement(View,{style:styles.facebookContainer},
React.createElement(_apslReactNativeButton2.default,{style:styles.facebookButton,textStyle:styles.facebookText,onPress:this.loginWithFacebook},
React.createElement(Text,null,
I18n.t('loginWithFacebook')))),



React.createElement(Form,{ref:'form',type:UserCredentials}),

React.createElement(View,{style:styles.loginButtonContainer},
React.createElement(_apslReactNativeButton2.default,{style:styles.loginButton,textStyle:styles.loginText,
onPress:this.login},
I18n.t('login'))),


React.createElement(View,{style:styles.loginButtonContainer},
React.createElement(Text,null,'か')),



React.createElement(View,{style:styles.loginButtonContainer},
React.createElement(_apslReactNativeButton2.default,{style:styles.registerButton,textStyle:styles.registerText,
onPress:this.register},
I18n.t('register')))));}});







module.exports=Login;
});
__d('tcomb-form-native/index.js',function(global, require, module, exports) {  var t=require('tcomb-form-native/lib/index.js');
var i18n=require('tcomb-form-native/lib/i18n/en.js');
var templates=require('tcomb-form-native/lib/templates/bootstrap/index.js');
var stylesheet=require('tcomb-form-native/lib/stylesheets/bootstrap.js');

t.form.Form.templates=templates;
t.form.Form.stylesheet=stylesheet;
t.form.Form.i18n=i18n;

module.exports=t;
});
__d('tcomb-form-native/lib/index.js',function(global, require, module, exports) {  var t=require('tcomb-validation/index.js');
var form=require('tcomb-form-native/lib/components.js');

t.form=form;

module.exports=t;
});
__d('tcomb-validation/index.js',function(global, require, module, exports) {  'use strict';

var t=require('tcomb/index.js');
var stringify=t.stringify;

var ValidationError=t.struct({
message:t.Str,
actual:t.Any,
expected:t.Any,
path:t.list(t.union([t.Str,t.Num]))},
'ValidationError');

function getDefaultValidationErrorMessage(actual,expected,path){
var expectedName=t.getTypeName(expected);
var to=path.length?'/'+path.join('/')+': '+expectedName:expectedName;
return 'Invalid value '+stringify(actual)+' supplied to '+to;}


function getValidationErrorMessage(actual,expected,path,context){
if(t.Function.is(expected.getValidationErrorMessage)){
return expected.getValidationErrorMessage(actual,path,context);}else 

{
return getDefaultValidationErrorMessage(actual,expected,path);}}



ValidationError.of=function(actual,expected,path,context){
return new ValidationError({
message:getValidationErrorMessage(actual,expected,path,context),
actual:actual,
expected:expected,
path:path});};



var ValidationResult=t.struct({
errors:t.list(ValidationError),
value:t.Any},
'ValidationResult');

ValidationResult.prototype.isValid=function(){
return !this.errors.length;};


ValidationResult.prototype.firstError=function(){
return this.isValid()?null:this.errors[0];};


ValidationResult.prototype.toString=function(){
if(this.isValid()){
return '[ValidationResult, true, '+stringify(this.value)+']';}else 

{
return '[ValidationResult, false, ('+this.errors.map(function(err){
return err.message;}).
join(', ')+')]';}};



function validate(x,type,options){
options=options||{};
var path=t.Array.is(options)?options:options.path||[];
return new ValidationResult(recurse(x,type,path,options));}


function recurse(x,type,path,options){
if(t.isType(type)){
return validators[type.meta.kind](x,type,path,options);}else 

{
return validators.es6classes(x,type,path,options);}}



var validators=validate.validators={};

validators.es6classes=function validateES6Classes(x,type,path,options){
return {
value:x,
errors:x instanceof type?[]:[ValidationError.of(x,type,path,options.context)]};};




validators.irreducible=
validators.enums=function validateIrreducible(x,type,path,options){
return {
value:x,
errors:type.is(x)?[]:[ValidationError.of(x,type,path,options.context)]};};



validators.list=function validateList(x,type,path,options){


if(!t.Arr.is(x)){
return {value:x,errors:[ValidationError.of(x,type,path,options.context)]};}


var ret={value:[],errors:[]};

for(var i=0,len=x.length;i<len;i++){
var item=recurse(x[i],type.meta.type,path.concat(i),options);
ret.value[i]=item.value;
ret.errors=ret.errors.concat(item.errors);}

return ret;};


validators.subtype=function validateSubtype(x,type,path,options){


var ret=recurse(x,type.meta.type,path,options);
if(ret.errors.length){
return ret;}



if(!type.meta.predicate(ret.value)){
ret.errors=[ValidationError.of(x,type,path,options.context)];}


return ret;};



validators.maybe=function validateMaybe(x,type,path,options){
return t.Nil.is(x)?
{value:null,errors:[]}:
recurse(x,type.meta.type,path,options);};


validators.struct=function validateStruct(x,type,path,options){


if(!t.Obj.is(x)){
return {value:x,errors:[ValidationError.of(x,type,path,options.context)]};}



if(type.is(x)){
return {value:x,errors:[]};}


var ret={value:{},errors:[]};
var props=type.meta.props;

for(var name in props){
if(props.hasOwnProperty(name)){
var prop=recurse(x[name],props[name],path.concat(name),options);
ret.value[name]=prop.value;
ret.errors=ret.errors.concat(prop.errors);}}


if(options.strict){
for(var field in x){
if(x.hasOwnProperty(field)&&!props.hasOwnProperty(field)&&!t.Nil.is(x[field])){
ret.errors.push(ValidationError.of(x[field],t.Nil,path.concat(field),options.context));}}}



if(!ret.errors.length){
ret.value=new type(ret.value);}

return ret;};


validators.tuple=function validateTuple(x,type,path,options){

var types=type.meta.types;
var len=types.length;


if(!t.Arr.is(x)||x.length>len){
return {value:x,errors:[ValidationError.of(x,type,path,options.context)]};}


var ret={value:[],errors:[]};

for(var i=0;i<len;i++){
var item=recurse(x[i],types[i],path.concat(i),options);
ret.value[i]=item.value;
ret.errors=ret.errors.concat(item.errors);}

return ret;};


validators.dict=function validateDict(x,type,path,options){


if(!t.Obj.is(x)){
return {value:x,errors:[ValidationError.of(x,type,path,options.context)]};}


var ret={value:{},errors:[]};


for(var k in x){
if(x.hasOwnProperty(k)){
var subpath=path.concat(k);
var key=recurse(k,type.meta.domain,subpath,options);
var item=recurse(x[k],type.meta.codomain,subpath,options);
ret.value[k]=item.value;
ret.errors=ret.errors.concat(key.errors,item.errors);}}


return ret;};


validators.union=function validateUnion(x,type,path,options){
var ctor=type.dispatch(x);
return t.Func.is(ctor)?
recurse(x,ctor,path.concat(type.meta.types.indexOf(ctor)),options):
{value:x,errors:[ValidationError.of(x,type,path,options.context)]};};


validators.intersection=function validateIntersection(x,type,path,options){

var types=type.meta.types;
var len=types.length;

var ret={value:x,errors:[]};

for(var i=0;i<len;i++){
var item=recurse(x,types[i],path,options);
ret.errors=ret.errors.concat(item.errors);}

return ret;};


t.mixin(t,{
ValidationError:ValidationError,
ValidationResult:ValidationResult,
validate:validate});


module.exports=t;
});
__d('tcomb/index.js',function(global, require, module, exports) {  /*! @preserve
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2014-2016 Giulio Canti
 *
 */


var t=require('tcomb/lib/assert.js');


t.Any=require('tcomb/lib/Any.js');
t.Array=require('tcomb/lib/Array.js');
t.Boolean=require('tcomb/lib/Boolean.js');
t.Date=require('tcomb/lib/Date.js');
t.Error=require('tcomb/lib/Error.js');
t.Function=require('tcomb/lib/Function.js');
t.Nil=require('tcomb/lib/Nil.js');
t.Number=require('tcomb/lib/Number.js');
t.Object=require('tcomb/lib/Object.js');
t.RegExp=require('tcomb/lib/RegExp.js');
t.String=require('tcomb/lib/String.js');


t.Arr=t.Array;
t.Bool=t.Boolean;
t.Dat=t.Date;
t.Err=t.Error;
t.Func=t.Function;
t.Num=t.Number;
t.Obj=t.Object;
t.Re=t.RegExp;
t.Str=t.String;


t.dict=require('tcomb/lib/dict.js');
t.declare=require('tcomb/lib/declare.js');
t.enums=require('tcomb/lib/enums.js');
t.irreducible=require('tcomb/lib/irreducible.js');
t.list=require('tcomb/lib/list.js');
t.maybe=require('tcomb/lib/maybe.js');
t.refinement=require('tcomb/lib/refinement.js');
t.struct=require('tcomb/lib/struct.js');
t.tuple=require('tcomb/lib/tuple.js');
t.union=require('tcomb/lib/union.js');
t.func=require('tcomb/lib/func.js');
t.intersection=require('tcomb/lib/intersection.js');
t.subtype=t.refinement;


t.assert=t;
t.update=require('tcomb/lib/update.js');
t.mixin=require('tcomb/lib/mixin.js');
t.isType=require('tcomb/lib/isType.js');
t.is=require('tcomb/lib/is.js');
t.getTypeName=require('tcomb/lib/getTypeName.js');
t.match=require('tcomb/lib/match.js');

module.exports=t;
});
__d('tcomb/lib/assert.js',function(global, require, module, exports) {  var isFunction=require('tcomb/lib/isFunction.js');
var isNil=require('tcomb/lib/isNil.js');
var fail=require('tcomb/lib/fail.js');
var stringify=require('tcomb/lib/stringify.js');

function assert(guard,message){
if(guard!==true){
if(isFunction(message)){
message=message();}else 

if(isNil(message)){
message='Assert failed (turn on "Pause on exceptions" in your Source panel)';}

assert.fail(message);}}



assert.fail=fail;
assert.stringify=stringify;

module.exports=assert;
});
__d('tcomb/lib/isFunction.js',function(global, require, module, exports) {  module.exports=function isFunction(x){
return typeof x==='function';};
});
__d('tcomb/lib/isNil.js',function(global, require, module, exports) {  module.exports=function isNil(x){
return x===null||x===void 0;};
});
__d('tcomb/lib/fail.js',function(global, require, module, exports) {  module.exports=function fail(message){
throw new TypeError('[tcomb] '+message);};
});
__d('tcomb/lib/stringify.js',function(global, require, module, exports) {  module.exports=function stringify(x){
try{
return JSON.stringify(x,null,2);}

catch(e){
return String(x);}};
});
__d('tcomb/lib/Any.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');

module.exports=irreducible('Any',function(){return true;});
});
__d('tcomb/lib/irreducible.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isString=require('tcomb/lib/isString.js');
var isFunction=require('tcomb/lib/isFunction.js');
var forbidNewOperator=require('tcomb/lib/forbidNewOperator.js');

module.exports=function irreducible(name,predicate){

if(process.env.NODE_ENV!=='production'){
assert(isString(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to irreducible(name, predicate) (expected a string)';});
assert(isFunction(predicate),'Invalid argument predicate '+assert.stringify(predicate)+' supplied to irreducible(name, predicate) (expected a function)');}


function Irreducible(value,path){

if(process.env.NODE_ENV!=='production'){
forbidNewOperator(this,Irreducible);
path=path||[name];
assert(predicate(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/');});}


return value;}


Irreducible.meta={
kind:'irreducible',
name:name,
predicate:predicate,
identity:true};


Irreducible.displayName=name;

Irreducible.is=predicate;

return Irreducible;};
});
__d('tcomb/lib/isString.js',function(global, require, module, exports) {  module.exports=function isString(x){
return typeof x==='string';};
});
__d('tcomb/lib/forbidNewOperator.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var getTypeName=require('tcomb/lib/getTypeName.js');

module.exports=function forbidNewOperator(x,type){
assert(!(x instanceof type),function(){return 'Cannot use the new operator to instantiate the type '+getTypeName(type);});};
});
__d('tcomb/lib/getTypeName.js',function(global, require, module, exports) {  var isType=require('tcomb/lib/isType.js');
var getFunctionName=require('tcomb/lib/getFunctionName.js');

module.exports=function getTypeName(constructor){
if(isType(constructor)){
return constructor.displayName;}

return getFunctionName(constructor);};
});
__d('tcomb/lib/isType.js',function(global, require, module, exports) {  var isFunction=require('tcomb/lib/isFunction.js');
var isObject=require('tcomb/lib/isObject.js');

module.exports=function isType(x){
return isFunction(x)&&isObject(x.meta);};
});
__d('tcomb/lib/isObject.js',function(global, require, module, exports) {  var isNil=require('tcomb/lib/isNil.js');
var isArray=require('tcomb/lib/isArray.js');

module.exports=function isObject(x){
return !isNil(x)&&typeof x==='object'&&!isArray(x);};
});
__d('tcomb/lib/isArray.js',function(global, require, module, exports) {  module.exports=function isArray(x){
return x instanceof Array;};
});
__d('tcomb/lib/getFunctionName.js',function(global, require, module, exports) {  module.exports=function getFunctionName(f){
return f.displayName||f.name||'<function'+f.length+'>';};
});
__d('tcomb/lib/Array.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isArray=require('tcomb/lib/isArray.js');

module.exports=irreducible('Array',isArray);
});
__d('tcomb/lib/Boolean.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isBoolean=require('tcomb/lib/isBoolean.js');

module.exports=irreducible('Boolean',isBoolean);
});
__d('tcomb/lib/isBoolean.js',function(global, require, module, exports) {  module.exports=function isBoolean(x){
return x===true||x===false;};
});
__d('tcomb/lib/Date.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');

module.exports=irreducible('Date',function(x){return x instanceof Date;});
});
__d('tcomb/lib/Error.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');

module.exports=irreducible('Error',function(x){return x instanceof Error;});
});
__d('tcomb/lib/Function.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isFunction=require('tcomb/lib/isFunction.js');

module.exports=irreducible('Function',isFunction);
});
__d('tcomb/lib/Nil.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isNil=require('tcomb/lib/isNil.js');

module.exports=irreducible('Nil',isNil);
});
__d('tcomb/lib/Number.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isNumber=require('tcomb/lib/isNumber.js');

module.exports=irreducible('Number',isNumber);
});
__d('tcomb/lib/isNumber.js',function(global, require, module, exports) {  module.exports=function isNumber(x){
return typeof x==='number'&&isFinite(x)&&!isNaN(x);};
});
__d('tcomb/lib/Object.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isObject=require('tcomb/lib/isObject.js');

module.exports=irreducible('Object',isObject);
});
__d('tcomb/lib/RegExp.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');

module.exports=irreducible('RegExp',function(x){return x instanceof RegExp;});
});
__d('tcomb/lib/String.js',function(global, require, module, exports) {  var irreducible=require('tcomb/lib/irreducible.js');
var isString=require('tcomb/lib/isString.js');

module.exports=irreducible('String',isString);
});
__d('tcomb/lib/dict.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var getTypeName=require('tcomb/lib/getTypeName.js');
var isIdentity=require('tcomb/lib/isIdentity.js');
var isObject=require('tcomb/lib/isObject.js');
var create=require('tcomb/lib/create.js');
var is=require('tcomb/lib/is.js');

function getDefaultName(domain,codomain){
return '{[key: '+getTypeName(domain)+']: '+getTypeName(codomain)+'}';}


function dict(domain,codomain,name){

if(process.env.NODE_ENV!=='production'){
assert(isFunction(domain),function(){return 'Invalid argument domain '+assert.stringify(domain)+' supplied to dict(domain, codomain, [name]) combinator (expected a type)';});
assert(isFunction(codomain),function(){return 'Invalid argument codomain '+assert.stringify(codomain)+' supplied to dict(domain, codomain, [name]) combinator (expected a type)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to dict(domain, codomain, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(domain,codomain);
var domainNameCache=getTypeName(domain);
var codomainNameCache=getTypeName(codomain);
var identity=isIdentity(domain)&&isIdentity(codomain);

function Dict(value,path){

if(process.env.NODE_ENV==='production'){
if(identity){
return value;}}



if(process.env.NODE_ENV!=='production'){
path=path||[displayName];
assert(isObject(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/');});}


var idempotent=true;
var ret={};
for(var k in value){
if(value.hasOwnProperty(k)){
k=create(domain,k,process.env.NODE_ENV!=='production'?path.concat(domainNameCache):null);
var actual=value[k];
var instance=create(codomain,actual,process.env.NODE_ENV!=='production'?path.concat(k+': '+codomainNameCache):null);
idempotent=idempotent&&actual===instance;
ret[k]=instance;}}



if(idempotent){
ret=value;}


if(process.env.NODE_ENV!=='production'){
Object.freeze(ret);}


return ret;}


Dict.meta={
kind:'dict',
domain:domain,
codomain:codomain,
name:name,
identity:identity};


Dict.displayName=displayName;

Dict.is=function(x){
if(!isObject(x)){
return false;}

for(var k in x){
if(x.hasOwnProperty(k)){
if(!is(k,domain)||!is(x[k],codomain)){
return false;}}}



return true;};


Dict.update=function(instance,spec){
return Dict(assert.update(instance,spec));};


return Dict;}


dict.getDefaultName=getDefaultName;
module.exports=dict;
});
__d('tcomb/lib/isTypeName.js',function(global, require, module, exports) {  var isNil=require('tcomb/lib/isNil.js');
var isString=require('tcomb/lib/isString.js');

module.exports=function isTypeName(name){
return isNil(name)||isString(name);};
});
__d('tcomb/lib/isIdentity.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var Boolean=require('tcomb/lib/Boolean.js');
var isType=require('tcomb/lib/isType.js');
var getTypeName=require('tcomb/lib/getTypeName.js');


module.exports=function isIdentity(type){
if(isType(type)){
if(process.env.NODE_ENV!=='production'){
assert(Boolean.is(type.meta.identity),function(){return 'Invalid meta identity '+assert.stringify(type.meta.identity)+' supplied to type '+getTypeName(type);});}

return type.meta.identity;}


return true;};
});
__d('tcomb/lib/create.js',function(global, require, module, exports) {  var isType=require('tcomb/lib/isType.js');
var isStruct=require('tcomb/lib/isStruct.js');
var getFunctionName=require('tcomb/lib/getFunctionName.js');
var assert=require('tcomb/lib/assert.js');
var stringify=require('tcomb/lib/stringify.js');


module.exports=function create(type,value,path){
if(isType(type)){

return isStruct(type)?new type(value,path):type(value,path);}


if(process.env.NODE_ENV!=='production'){

path=path||[getFunctionName(type)];
assert(value instanceof type,function(){return 'Invalid value '+stringify(value)+' supplied to '+path.join('/');});}


return value;};
});
__d('tcomb/lib/isStruct.js',function(global, require, module, exports) {  var isType=require('tcomb/lib/isType.js');

module.exports=function isStruct(x){
return isType(x)&&x.meta.kind==='struct';};
});
__d('tcomb/lib/is.js',function(global, require, module, exports) {  var isType=require('tcomb/lib/isType.js');


module.exports=function is(x,type){
if(isType(type)){
return type.is(x);}

return x instanceof type;};
});
__d('tcomb/lib/declare.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isType=require('tcomb/lib/isType.js');
var isNil=require('tcomb/lib/isNil.js');
var mixin=require('tcomb/lib/mixin.js');
var getTypeName=require('tcomb/lib/getTypeName.js');



var nextDeclareUniqueId=1;

module.exports=function declare(name){
if(process.env.NODE_ENV!=='production'){
assert(isTypeName(name),function(){return 'Invalid argument name '+name+' supplied to declare([name]) (expected a string)';});}


var type;

function Declare(value,path){
if(process.env.NODE_ENV!=='production'){
assert(!isNil(type),function(){return 'Type declared but not defined, don\'t forget to call .define on every declared type';});}

return type(value,path);}


Declare.define=function(spec){
if(process.env.NODE_ENV!=='production'){
assert(isType(spec),function(){return 'Invalid argument type '+assert.stringify(spec)+' supplied to define(type) (expected a type)';});
assert(isNil(type),function(){return 'Declare.define(type) can only be invoked once';});
assert(isNil(spec.meta.name)&&Object.keys(spec.prototype).length===0,function(){return 'Invalid argument type '+assert.stringify(spec)+' supplied to define(type) (expected a fresh, unnamed type)';});}


type=spec;
mixin(Declare,type,true);
if(name){
type.displayName=Declare.displayName=name;
Declare.meta.name=name;}


Declare.meta.identity=false;
Declare.prototype=type.prototype;
return Declare;};


Declare.displayName=name||getTypeName(Declare)+"$"+nextDeclareUniqueId++;

Declare.meta={identity:false};
Declare.prototype=null;
return Declare;};
});
__d('tcomb/lib/mixin.js',function(global, require, module, exports) {  var isNil=require('tcomb/lib/isNil.js');
var assert=require('tcomb/lib/assert.js');


module.exports=function mixin(target,source,overwrite){
if(isNil(source)){return target;}
for(var k in source){
if(source.hasOwnProperty(k)){
if(overwrite!==true){
if(process.env.NODE_ENV!=='production'){
assert(!target.hasOwnProperty(k),function(){return 'Invalid call to mixin(target, source, [overwrite]): cannot overwrite property "'+k+'" of target object';});}}


target[k]=source[k];}}


return target;};
});
__d('tcomb/lib/enums.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var forbidNewOperator=require('tcomb/lib/forbidNewOperator.js');
var isString=require('tcomb/lib/isString.js');
var isObject=require('tcomb/lib/isObject.js');

function getDefaultName(map){
return Object.keys(map).map(function(k){return assert.stringify(k);}).join(' | ');}


function enums(map,name){

if(process.env.NODE_ENV!=='production'){
assert(isObject(map),function(){return 'Invalid argument map '+assert.stringify(map)+' supplied to enums(map, [name]) combinator (expected a dictionary of String -> String | Number)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to enums(map, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(map);

function Enums(value,path){

if(process.env.NODE_ENV!=='production'){
forbidNewOperator(this,Enums);
path=path||[displayName];
assert(Enums.is(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/')+' (expected one of '+assert.stringify(Object.keys(map))+')';});}


return value;}


Enums.meta={
kind:'enums',
map:map,
name:name,
identity:true};


Enums.displayName=displayName;

Enums.is=function(x){
return map.hasOwnProperty(x);};


return Enums;}


enums.of=function(keys,name){
keys=isString(keys)?keys.split(' '):keys;
var value={};
keys.forEach(function(k){
value[k]=k;});

return enums(value,name);};


enums.getDefaultName=getDefaultName;
module.exports=enums;
});
__d('tcomb/lib/list.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var getTypeName=require('tcomb/lib/getTypeName.js');
var isIdentity=require('tcomb/lib/isIdentity.js');
var create=require('tcomb/lib/create.js');
var is=require('tcomb/lib/is.js');
var isArray=require('tcomb/lib/isArray.js');

function getDefaultName(type){
return 'Array<'+getTypeName(type)+'>';}


function list(type,name){

if(process.env.NODE_ENV!=='production'){
assert(isFunction(type),function(){return 'Invalid argument type '+assert.stringify(type)+' supplied to list(type, [name]) combinator (expected a type)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to list(type, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(type);
var typeNameCache=getTypeName(type);
var identity=isIdentity(type);

function List(value,path){

if(process.env.NODE_ENV==='production'){
if(identity){
return value;}}



if(process.env.NODE_ENV!=='production'){
path=path||[displayName];
assert(isArray(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/')+' (expected an array of '+typeNameCache+')';});}


var idempotent=true;
var ret=[];
for(var i=0,len=value.length;i<len;i++){
var actual=value[i];
var instance=create(type,actual,process.env.NODE_ENV!=='production'?path.concat(i+': '+typeNameCache):null);
idempotent=idempotent&&actual===instance;
ret.push(instance);}


if(idempotent){
ret=value;}


if(process.env.NODE_ENV!=='production'){
Object.freeze(ret);}


return ret;}


List.meta={
kind:'list',
type:type,
name:name,
identity:identity};


List.displayName=displayName;

List.is=function(x){
return isArray(x)&&x.every(function(e){
return is(e,type);});};



List.update=function(instance,spec){
return List(assert.update(instance,spec));};


return List;}


list.getDefaultName=getDefaultName;
module.exports=list;
});
__d('tcomb/lib/maybe.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var isMaybe=require('tcomb/lib/isMaybe.js');
var isIdentity=require('tcomb/lib/isIdentity.js');
var Any=require('tcomb/lib/Any.js');
var create=require('tcomb/lib/create.js');
var Nil=require('tcomb/lib/Nil.js');
var forbidNewOperator=require('tcomb/lib/forbidNewOperator.js');
var is=require('tcomb/lib/is.js');
var getTypeName=require('tcomb/lib/getTypeName.js');

function getDefaultName(type){
return '?'+getTypeName(type);}


function maybe(type,name){

if(isMaybe(type)||type===Any||type===Nil){
return type;}


if(process.env.NODE_ENV!=='production'){
assert(isFunction(type),function(){return 'Invalid argument type '+assert.stringify(type)+' supplied to maybe(type, [name]) combinator (expected a type)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to maybe(type, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(type);

function Maybe(value,path){
if(process.env.NODE_ENV!=='production'){
forbidNewOperator(this,Maybe);}

return Nil.is(value)?null:create(type,value,path);}


Maybe.meta={
kind:'maybe',
type:type,
name:name,
identity:isIdentity(type)};


Maybe.displayName=displayName;

Maybe.is=function(x){
return Nil.is(x)||is(x,type);};


return Maybe;}


maybe.getDefaultName=getDefaultName;
module.exports=maybe;
});
__d('tcomb/lib/isMaybe.js',function(global, require, module, exports) {  var isType=require('tcomb/lib/isType.js');

module.exports=function isMaybe(x){
return isType(x)&&x.meta.kind==='maybe';};
});
__d('tcomb/lib/refinement.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var forbidNewOperator=require('tcomb/lib/forbidNewOperator.js');
var isIdentity=require('tcomb/lib/isIdentity.js');
var create=require('tcomb/lib/create.js');
var is=require('tcomb/lib/is.js');
var getTypeName=require('tcomb/lib/getTypeName.js');
var getFunctionName=require('tcomb/lib/getFunctionName.js');

function getDefaultName(type,predicate){
return '{'+getTypeName(type)+' | '+getFunctionName(predicate)+'}';}


function refinement(type,predicate,name){

if(process.env.NODE_ENV!=='production'){
assert(isFunction(type),function(){return 'Invalid argument type '+assert.stringify(type)+' supplied to refinement(type, predicate, [name]) combinator (expected a type)';});
assert(isFunction(predicate),function(){return 'Invalid argument predicate supplied to refinement(type, predicate, [name]) combinator (expected a function)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to refinement(type, predicate, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(type,predicate);
var identity=isIdentity(type);

function Refinement(value,path){

if(process.env.NODE_ENV!=='production'){
forbidNewOperator(this,Refinement);
path=path||[displayName];}


var x=create(type,value,path);

if(process.env.NODE_ENV!=='production'){
assert(predicate(x),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/');});}


return x;}


Refinement.meta={
kind:'subtype',
type:type,
predicate:predicate,
name:name,
identity:identity};


Refinement.displayName=displayName;

Refinement.is=function(x){
return is(x,type)&&predicate(x);};


Refinement.update=function(instance,spec){
return Refinement(assert.update(instance,spec));};


return Refinement;}


refinement.getDefaultName=getDefaultName;
module.exports=refinement;
});
__d('tcomb/lib/struct.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var String=require('tcomb/lib/String.js');
var Function=require('tcomb/lib/Function.js');
var isArray=require('tcomb/lib/isArray.js');
var isObject=require('tcomb/lib/isObject.js');
var create=require('tcomb/lib/create.js');
var mixin=require('tcomb/lib/mixin.js');
var isStruct=require('tcomb/lib/isStruct.js');
var getTypeName=require('tcomb/lib/getTypeName.js');
var dict=require('tcomb/lib/dict.js');

function getDefaultName(props){
return '{'+Object.keys(props).map(function(prop){
return prop+': '+getTypeName(props[prop]);}).
join(', ')+'}';}


function extend(mixins,name){
if(process.env.NODE_ENV!=='production'){
assert(isArray(mixins)&&mixins.every(function(x){
return isObject(x)||isStruct(x);}),
function(){return 'Invalid argument mixins supplied to extend(mixins, name), expected an array of objects or types';});}

var props={};
var prototype={};
mixins.forEach(function(struct){
if(isObject(struct)){
mixin(props,struct);}else 

{
mixin(props,struct.meta.props);
mixin(prototype,struct.prototype);}});


var ret=struct(props,name);
mixin(ret.prototype,prototype);
return ret;}


function struct(props,name){

if(process.env.NODE_ENV!=='production'){
assert(dict(String,Function).is(props),function(){return 'Invalid argument props '+assert.stringify(props)+' supplied to struct(props, [name]) combinator (expected a dictionary String -> Type)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to struct(props, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(props);

function Struct(value,path){

if(Struct.is(value)){
return value;}


if(process.env.NODE_ENV!=='production'){
path=path||[displayName];
assert(isObject(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/')+' (expected an object)';});}


if(!(this instanceof Struct)){
return new Struct(value,path);}


for(var k in props){
if(props.hasOwnProperty(k)){
var expected=props[k];
var actual=value[k];
this[k]=create(expected,actual,process.env.NODE_ENV!=='production'?path.concat(k+': '+getTypeName(expected)):null);}}



if(process.env.NODE_ENV!=='production'){
Object.freeze(this);}}




Struct.meta={
kind:'struct',
props:props,
name:name,
identity:false};


Struct.displayName=displayName;

Struct.is=function(x){
return x instanceof Struct;};


Struct.update=function(instance,spec){
return new Struct(assert.update(instance,spec));};


Struct.extend=function(structs,name){
return extend([Struct].concat(structs),name);};


return Struct;}


struct.getDefaultName=getDefaultName;
struct.extend=extend;
module.exports=struct;
});
__d('tcomb/lib/tuple.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var getTypeName=require('tcomb/lib/getTypeName.js');
var isIdentity=require('tcomb/lib/isIdentity.js');
var isArray=require('tcomb/lib/isArray.js');
var create=require('tcomb/lib/create.js');
var is=require('tcomb/lib/is.js');

function getDefaultName(types){
return '['+types.map(getTypeName).join(', ')+']';}


function tuple(types,name){

if(process.env.NODE_ENV!=='production'){
assert(isArray(types)&&types.every(isFunction),function(){return 'Invalid argument types '+assert.stringify(types)+' supplied to tuple(types, [name]) combinator (expected an array of types)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to tuple(types, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(types);
var identity=types.every(isIdentity);

function Tuple(value,path){

if(process.env.NODE_ENV==='production'){
if(identity){
return value;}}



if(process.env.NODE_ENV!=='production'){
path=path||[displayName];
assert(isArray(value)&&value.length===types.length,function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/')+' (expected an array of length '+types.length+')';});}


var idempotent=true;
var ret=[];
for(var i=0,len=types.length;i<len;i++){
var expected=types[i];
var actual=value[i];
var instance=create(expected,actual,process.env.NODE_ENV!=='production'?path.concat(i+': '+getTypeName(expected)):null);
idempotent=idempotent&&actual===instance;
ret.push(instance);}


if(idempotent){
ret=value;}


if(process.env.NODE_ENV!=='production'){
Object.freeze(ret);}


return ret;}


Tuple.meta={
kind:'tuple',
types:types,
name:name,
identity:identity};


Tuple.displayName=displayName;

Tuple.is=function(x){
return isArray(x)&&
x.length===types.length&&
types.every(function(type,i){
return is(x[i],type);});};



Tuple.update=function(instance,spec){
return Tuple(assert.update(instance,spec));};


return Tuple;}


tuple.getDefaultName=getDefaultName;
module.exports=tuple;
});
__d('tcomb/lib/union.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var getTypeName=require('tcomb/lib/getTypeName.js');
var isIdentity=require('tcomb/lib/isIdentity.js');
var isArray=require('tcomb/lib/isArray.js');
var create=require('tcomb/lib/create.js');
var is=require('tcomb/lib/is.js');
var forbidNewOperator=require('tcomb/lib/forbidNewOperator.js');
var isType=require('tcomb/lib/isType.js');
var isUnion=require('tcomb/lib/isUnion.js');
var isNil=require('tcomb/lib/isNil.js');

function getDefaultName(types){
return types.map(getTypeName).join(' | ');}


function union(types,name){

if(process.env.NODE_ENV!=='production'){
assert(isArray(types)&&types.every(isFunction)&&types.length>=2,function(){return 'Invalid argument types '+assert.stringify(types)+' supplied to union(types, [name]) combinator (expected an array of at least 2 types)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to union(types, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(types);
var identity=types.every(isIdentity);

function Union(value,path){

if(process.env.NODE_ENV==='production'){
if(identity){
return value;}}



var type=Union.dispatch(value);
if(!type&&Union.is(value)){
return value;}


if(process.env.NODE_ENV!=='production'){
forbidNewOperator(this,Union);
path=path||[displayName];
assert(isType(type),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/')+' (no constructor returned by dispatch)';});
path[path.length-1]+='('+getTypeName(type)+')';}


return create(type,value,path);}


Union.meta={
kind:'union',
types:types,
name:name,
identity:identity};


Union.displayName=displayName;

Union.is=function(x){
return types.some(function(type){
return is(x,type);});};



Union.dispatch=function(x){
for(var i=0,len=types.length;i<len;i++){
var type=types[i];
if(isUnion(type)){
var t=type.dispatch(x);
if(!isNil(t)){
return t;}}else 


if(is(x,type)){
return type;}}};




Union.update=function(instance,spec){
return Union(assert.update(instance,spec));};


return Union;}


union.getDefaultName=getDefaultName;
module.exports=union;
});
__d('tcomb/lib/isUnion.js',function(global, require, module, exports) {  var isType=require('tcomb/lib/isType.js');

module.exports=function isUnion(x){
return isType(x)&&x.meta.kind==='union';};
});
__d('tcomb/lib/func.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var FunctionType=require('tcomb/lib/Function.js');
var isArray=require('tcomb/lib/isArray.js');
var list=require('tcomb/lib/list.js');
var isObject=require('tcomb/lib/isObject.js');
var create=require('tcomb/lib/create.js');
var isNil=require('tcomb/lib/isNil.js');
var isBoolean=require('tcomb/lib/isBoolean.js');
var tuple=require('tcomb/lib/tuple.js');
var getFunctionName=require('tcomb/lib/getFunctionName.js');
var getTypeName=require('tcomb/lib/getTypeName.js');

function getDefaultName(domain,codomain){
return '('+domain.map(getTypeName).join(', ')+') => '+getTypeName(codomain);}


function isInstrumented(f){
return FunctionType.is(f)&&isObject(f.instrumentation);}


function func(domain,codomain,name){

domain=isArray(domain)?domain:[domain];

if(process.env.NODE_ENV!=='production'){
assert(list(FunctionType).is(domain),function(){return 'Invalid argument domain '+assert.stringify(domain)+' supplied to func(domain, codomain, [name]) combinator (expected an array of types)';});
assert(FunctionType.is(codomain),function(){return 'Invalid argument codomain '+assert.stringify(codomain)+' supplied to func(domain, codomain, [name]) combinator (expected a type)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to func(domain, codomain, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(domain,codomain);

function FuncType(value,curried){

if(!isInstrumented(value)){
return FuncType.of(value,curried);}


if(process.env.NODE_ENV!=='production'){
assert(FuncType.is(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+displayName;});}


return value;}


FuncType.meta={
kind:'func',
domain:domain,
codomain:codomain,
name:name,
identity:true};


FuncType.displayName=displayName;

FuncType.is=function(x){
return isInstrumented(x)&&
x.instrumentation.domain.length===domain.length&&
x.instrumentation.domain.every(function(type,i){
return type===domain[i];})&&

x.instrumentation.codomain===codomain;};


FuncType.of=function(f,curried){

if(process.env.NODE_ENV!=='production'){
assert(FunctionType.is(f),function(){return 'Invalid argument f supplied to func.of '+displayName+' (expected a function)';});
assert(isNil(curried)||isBoolean(curried),function(){return 'Invalid argument curried '+assert.stringify(curried)+' supplied to func.of '+displayName+' (expected a boolean)';});}


if(FuncType.is(f)){
return f;}


function fn(){
var args=Array.prototype.slice.call(arguments);
var len=curried?
args.length:
domain.length;
var argsType=tuple(domain.slice(0,len));

args=argsType(args);

if(len===domain.length){
return create(codomain,f.apply(this,args));}else 

{
var g=Function.prototype.bind.apply(f,[this].concat(args));
var newdomain=func(domain.slice(len),codomain);
return newdomain.of(g,curried);}}



fn.instrumentation={
domain:domain,
codomain:codomain,
f:f};


fn.displayName=getFunctionName(f);

return fn;};



return FuncType;}



func.getDefaultName=getDefaultName;
module.exports=func;
});
__d('tcomb/lib/intersection.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isTypeName=require('tcomb/lib/isTypeName.js');
var isFunction=require('tcomb/lib/isFunction.js');
var isArray=require('tcomb/lib/isArray.js');
var forbidNewOperator=require('tcomb/lib/isIdentity.js');
var is=require('tcomb/lib/is.js');
var getTypeName=require('tcomb/lib/getTypeName.js');

function getDefaultName(types){
return types.map(getTypeName).join(' & ');}


function intersection(types,name){

if(process.env.NODE_ENV!=='production'){
assert(isArray(types)&&types.every(isFunction)&&types.length>=2,function(){return 'Invalid argument types '+assert.stringify(types)+' supplied to intersection(types, [name]) combinator (expected an array of at least 2 types)';});
assert(isTypeName(name),function(){return 'Invalid argument name '+assert.stringify(name)+' supplied to intersection(types, [name]) combinator (expected a string)';});}


var displayName=name||getDefaultName(types);

function Intersection(value,path){

if(process.env.NODE_ENV!=='production'){
forbidNewOperator(this,Intersection);
path=path||[displayName];
assert(Intersection.is(value),function(){return 'Invalid value '+assert.stringify(value)+' supplied to '+path.join('/');});}


return value;}


Intersection.meta={
kind:'intersection',
types:types,
name:name,
identity:true};


Intersection.displayName=displayName;

Intersection.is=function(x){
return types.every(function(type){
return is(x,type);});};



Intersection.update=function(instance,spec){
return Intersection(assert.update(instance,spec));};


return Intersection;}


intersection.getDefaultName=getDefaultName;
module.exports=intersection;
});
__d('tcomb/lib/update.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isObject=require('tcomb/lib/isObject.js');
var isFunction=require('tcomb/lib/isFunction.js');
var isArray=require('tcomb/lib/isArray.js');
var isNumber=require('tcomb/lib/isNumber.js');
var mixin=require('tcomb/lib/mixin.js');
var getShallowCopy=require('tcomb/lib/getShallowCopy.js');


function update(instance,spec){

if(process.env.NODE_ENV!=='production'){
assert(isObject(spec),function(){return 'Invalid argument spec '+assert.stringify(spec)+' supplied to function update(instance, spec): expected an object containing commands';});}


var value=getShallowCopy(instance);
var isChanged=false;
for(var k in spec){
if(spec.hasOwnProperty(k)){
if(update.commands.hasOwnProperty(k)){
return update.commands[k](spec[k],value);}else 

{
var newValue=update(value[k],spec[k]);
isChanged=isChanged||newValue!==value[k];
value[k]=newValue;}}}



return isChanged?value:instance;}




function $apply(f,value){
if(process.env.NODE_ENV!=='production'){
assert(isFunction(f),'Invalid argument f supplied to immutability helper { $apply: f } (expected a function)');}

return f(value);}


function $push(elements,arr){
if(process.env.NODE_ENV!=='production'){
assert(isArray(elements),'Invalid argument elements supplied to immutability helper { $push: elements } (expected an array)');
assert(isArray(arr),'Invalid value supplied to immutability helper $push (expected an array)');}

return arr.concat(elements);}


function $remove(keys,obj){
if(process.env.NODE_ENV!=='production'){
assert(isArray(keys),'Invalid argument keys supplied to immutability helper { $remove: keys } (expected an array)');
assert(isObject(obj),'Invalid value supplied to immutability helper $remove (expected an object)');}

for(var i=0,len=keys.length;i<len;i++){
delete obj[keys[i]];}

return obj;}


function $set(value){
return value;}


function $splice(splices,arr){
if(process.env.NODE_ENV!=='production'){
assert(isArray(splices)&&splices.every(isArray),'Invalid argument splices supplied to immutability helper { $splice: splices } (expected an array of arrays)');
assert(isArray(arr),'Invalid value supplied to immutability helper $splice (expected an array)');}

return splices.reduce(function(acc,splice){
acc.splice.apply(acc,splice);
return acc;},
arr);}


function $swap(config,arr){
if(process.env.NODE_ENV!=='production'){
assert(isObject(config),'Invalid argument config supplied to immutability helper { $swap: config } (expected an object)');
assert(isNumber(config.from),'Invalid argument config.from supplied to immutability helper { $swap: config } (expected a number)');
assert(isNumber(config.to),'Invalid argument config.to supplied to immutability helper { $swap: config } (expected a number)');
assert(isArray(arr),'Invalid value supplied to immutability helper $swap (expected an array)');}

var element=arr[config.to];
arr[config.to]=arr[config.from];
arr[config.from]=element;
return arr;}


function $unshift(elements,arr){
if(process.env.NODE_ENV!=='production'){
assert(isArray(elements),'Invalid argument elements supplied to immutability helper {$unshift: elements} (expected an array)');
assert(isArray(arr),'Invalid value supplied to immutability helper $unshift (expected an array)');}

return elements.concat(arr);}


function $merge(obj,value){
return mixin(mixin({},value),obj,true);}


update.commands={
$apply:$apply,
$push:$push,
$remove:$remove,
$set:$set,
$splice:$splice,
$swap:$swap,
$unshift:$unshift,
$merge:$merge};


module.exports=update;
});
__d('tcomb/lib/getShallowCopy.js',function(global, require, module, exports) {  var isArray=require('tcomb/lib/isArray.js');
var isObject=require('tcomb/lib/isObject.js');
var mixin=require('tcomb/lib/mixin.js');

module.exports=function getShallowCopy(x){
if(isArray(x)){
return x.concat();}

if(isObject(x)){
return mixin({},x);}

return x;};
});
__d('tcomb/lib/match.js',function(global, require, module, exports) {  var assert=require('tcomb/lib/assert.js');
var isFunction=require('tcomb/lib/isFunction.js');
var isType=require('tcomb/lib/isType.js');
var Any=require('tcomb/lib/Any.js');

module.exports=function match(x){
var type,guard,f,count;
for(var i=1,len=arguments.length;i<len;){
type=arguments[i];
guard=arguments[i+1];
f=arguments[i+2];

if(isFunction(f)&&!isType(f)){
i=i+3;}else 

{
f=guard;
guard=Any.is;
i=i+2;}


if(process.env.NODE_ENV!=='production'){
count=(count||0)+1;
assert(isType(type),function(){return 'Invalid type in clause #'+count;});
assert(isFunction(guard),function(){return 'Invalid guard in clause #'+count;});
assert(isFunction(f),function(){return 'Invalid block in clause #'+count;});}


if(type.is(x)&&guard(x)){
return f(x);}}


assert.fail('Match error');};
});
__d('tcomb-form-native/lib/components.js',function(global, require, module, exports) {  'use strict';

var t=require('tcomb-validation/index.js');var _require=
require('tcomb-form-native/lib/util.js');var React=_require.React;var humanize=_require.humanize;var merge=_require.merge;var getTypeInfo=_require.getTypeInfo;var getOptionsOfEnum=_require.getOptionsOfEnum;

var SOURCE='tcomb-form-native';
var nooptions=Object.freeze({});
var noop=function(){};
var Nil=t.Nil;

function getComponent(type,options){
if(options.factory){
return options.factory;}

var name=t.getTypeName(type);
switch(type.meta.kind){
case 'irreducible':
return (
type===t.Boolean?Checkbox:
type===t.Date?DatePicker:
Textbox);

case 'struct':
return Struct;
case 'enums':
return Select;
case 'maybe':
case 'subtype':
return getComponent(type.meta.type,options);
default:
t.fail('['+SOURCE+'] unsupported type '+name);}}



function sortByText(a,b){
return a.text<b.text?-1:a.text>b.text?1:0;}


function getComparator(order){
return {
asc:sortByText,
desc:function(a,b){return -sortByText(a,b);}}[
order];}var 


Component=function(_React$Component){babelHelpers.inherits(Component,_React$Component);

function Component(props){babelHelpers.classCallCheck(this,Component);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Component).call(this,
props));
_this.typeInfo=getTypeInfo(props.type);
_this.state={
hasError:false,
value:_this.getTransformer().format(props.value)};return _this;}babelHelpers.createClass(Component,[{key:'getTransformer',value:function getTransformer()



{
return this.props.options.transformer||this.constructor.transformer;}},{key:'shouldComponentUpdate',value:function shouldComponentUpdate(


nextProps,nextState){
var should=
nextState.value!==this.state.value||
nextState.hasError!==this.state.hasError||
nextProps.options!==this.props.options||
nextProps.type!==this.props.type;

return should;}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(


props){
if(props.type!==this.props.type){
this.typeInfo=getTypeInfo(props.type);}

this.setState({value:this.getTransformer().format(props.value)});}},{key:'onChange',value:function onChange(


value){var _this2=this;
this.setState({value:value},function(){return _this2.props.onChange(value,_this2.props.ctx.path);});}},{key:'getValidationOptions',value:function getValidationOptions()


{
return {
path:this.props.ctx.path,
context:t.mixin(t.mixin({},this.props.context||this.props.ctx.context),{options:this.props.options})};}},{key:'getValue',value:function getValue()



{
return this.getTransformer().parse(this.state.value);}},{key:'isValueNully',value:function isValueNully()


{
return Nil.is(this.getValue());}},{key:'removeErrors',value:function removeErrors()


{
this.setState({hasError:false});}},{key:'validate',value:function validate()


{
var result=t.validate(this.getValue(),this.props.type,this.getValidationOptions());
this.setState({hasError:!result.isValid()});
return result;}},{key:'getAuto',value:function getAuto()


{
return this.props.options.auto||this.props.ctx.auto;}},{key:'getI18n',value:function getI18n()


{
return this.props.options.i18n||this.props.ctx.i18n;}},{key:'getDefaultLabel',value:function getDefaultLabel()


{
var ctx=this.props.ctx;
if(ctx.label){
return ctx.label+(this.typeInfo.isMaybe?this.getI18n().optional:this.getI18n().required);}}},{key:'getLabel',value:function getLabel()



{
var ctx=this.props.ctx;
var legend=this.props.options.legend;
var label=this.props.options.label;
label=label||legend;
if(Nil.is(label)&&this.getAuto()==='labels'){
label=this.getDefaultLabel();}

return label;}},{key:'getError',value:function getError()


{
if(this.hasError()){
var error=this.props.options.error||this.typeInfo.getValidationErrorMessage;
if(t.Function.is(error)){
var validationOptions=this.getValidationOptions();
return error(this.getValue(),validationOptions.path,validationOptions.context);}

return error;}}},{key:'hasError',value:function hasError()



{
return this.props.options.hasError||this.state.hasError;}},{key:'getConfig',value:function getConfig()


{
return merge(this.props.ctx.config,this.props.options.config);}},{key:'getStylesheet',value:function getStylesheet()


{
return this.props.options.stylesheet||this.props.ctx.stylesheet;}},{key:'getLocals',value:function getLocals()


{
return {
path:this.props.ctx.path,
error:this.getError(),
hasError:this.hasError(),
label:this.getLabel(),
onChange:this.onChange.bind(this),
config:this.getConfig(),
value:this.state.value,
stylesheet:this.getStylesheet()};}},{key:'render',value:function render()



{
var locals=this.getLocals();

t.assert(t.Function.is(this.getTemplate),'['+SOURCE+'] missing getTemplate method of component '+this.constructor.name);
var template=this.getTemplate();
return template(locals);}}]);return Component;}(React.Component);




Component.transformer={
format:function(value){return Nil.is(value)?null:value;},
parse:function(value){return value;}};


function toNull(value){
return t.String.is(value)&&value.trim()===''||Nil.is(value)?null:value;}


function parseNumber(value){
var n=parseFloat(value);
var isNumeric=value-n+1>=0;
return isNumeric?n:toNull(value);}var 


Textbox=function(_Component){babelHelpers.inherits(Textbox,_Component);function Textbox(){babelHelpers.classCallCheck(this,Textbox);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Textbox).apply(this,arguments));}babelHelpers.createClass(Textbox,[{key:'getTransformer',value:function getTransformer()

{
var options=this.props.options;
return options.transformer?options.transformer:
this.typeInfo.innerType===t.Number?Textbox.numberTransformer:
Textbox.transformer;}},{key:'getTemplate',value:function getTemplate()


{
return this.props.options.template||this.props.ctx.templates.textbox;}},{key:'getPlaceholder',value:function getPlaceholder()


{
var placeholder=this.props.options.placeholder;
if(Nil.is(placeholder)&&this.getAuto()==='placeholders'){
placeholder=this.getDefaultLabel();}

return placeholder;}},{key:'getLocals',value:function getLocals()


{var _this4=this;
var locals=babelHelpers.get(Object.getPrototypeOf(Textbox.prototype),'getLocals',this).call(this);
locals.placeholder=this.getPlaceholder();

[
'help',
'autoCapitalize',
'autoCorrect',
'autoFocus',
'bufferDelay',
'clearButtonMode',
'editable',
'enablesReturnKeyAutomatically',
'keyboardType',
'multiline',
'onBlur',
'onEndEditing',
'onFocus',
'onSubmitEditing',
'password',
'placeholderTextColor',
'returnKeyType',
'selectTextOnFocus',
'secureTextEntry',
'selectionState',
'maxLength',
'numberOfLines',
'textAlign',
'textAlignVertical',
'underlineColorAndroid'].
forEach(function(name){return locals[name]=_this4.props.options[name];});

return locals;}}]);return Textbox;}(Component);




Textbox.transformer={
format:function(value){return Nil.is(value)?null:value;},
parse:toNull};


Textbox.numberTransformer={
format:function(value){return Nil.is(value)?null:String(value);},
parse:parseNumber};var 


Checkbox=function(_Component2){babelHelpers.inherits(Checkbox,_Component2);function Checkbox(){babelHelpers.classCallCheck(this,Checkbox);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Checkbox).apply(this,arguments));}babelHelpers.createClass(Checkbox,[{key:'getTemplate',value:function getTemplate()

{
return this.props.options.template||this.props.ctx.templates.checkbox;}},{key:'getLocals',value:function getLocals()


{var _this6=this;
var locals=babelHelpers.get(Object.getPrototypeOf(Checkbox.prototype),'getLocals',this).call(this);

locals.label=locals.label||this.getDefaultLabel();

[
'help',
'disabled',
'onTintColor',
'thumbTintColor',
'tintColor'].
forEach(function(name){return locals[name]=_this6.props.options[name];});

return locals;}}]);return Checkbox;}(Component);




Checkbox.transformer={
format:function(value){return Nil.is(value)?false:value;},
parse:function(value){return value;}};var 


Select=function(_Component3){babelHelpers.inherits(Select,_Component3);function Select(){babelHelpers.classCallCheck(this,Select);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Select).apply(this,arguments));}babelHelpers.createClass(Select,[{key:'getTransformer',value:function getTransformer()

{
var options=this.props.options;
if(options.transformer){
return options.transformer;}

return Select.transformer(this.getNullOption());}},{key:'getTemplate',value:function getTemplate()


{
return this.props.options.template||this.props.ctx.templates.select;}},{key:'getNullOption',value:function getNullOption()


{
return this.props.options.nullOption||{value:'',text:'-'};}},{key:'getEnum',value:function getEnum()


{
return this.typeInfo.innerType;}},{key:'getOptions',value:function getOptions()


{
var options=this.props.options;
var items=options.options?options.options.slice():getOptionsOfEnum(this.getEnum());
if(options.order){
items.sort(getComparator(options.order));}

var nullOption=this.getNullOption();
if(options.nullOption!==false){
items.unshift(nullOption);}

return items;}},{key:'getLocals',value:function getLocals()


{var _this8=this;
var locals=babelHelpers.get(Object.getPrototypeOf(Select.prototype),'getLocals',this).call(this);
locals.options=this.getOptions();

[
'help'].
forEach(function(name){return locals[name]=_this8.props.options[name];});

return locals;}}]);return Select;}(Component);




Select.transformer=function(nullOption){
return {
format:function(value){return Nil.is(value)&&nullOption?nullOption.value:String(value);},
parse:function(value){return nullOption&&nullOption.value===value?null:value;}};};var 



DatePicker=function(_Component4){babelHelpers.inherits(DatePicker,_Component4);function DatePicker(){babelHelpers.classCallCheck(this,DatePicker);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(DatePicker).apply(this,arguments));}babelHelpers.createClass(DatePicker,[{key:'getTemplate',value:function getTemplate()

{
return this.props.options.template||this.props.ctx.templates.datepicker;}},{key:'getLocals',value:function getLocals()


{var _this10=this;
var locals=babelHelpers.get(Object.getPrototypeOf(DatePicker.prototype),'getLocals',this).call(this);

[
'help',
'maximumDate',
'minimumDate',
'minuteInterval',
'mode',
'timeZoneOffsetInMinutes'].
forEach(function(name){return locals[name]=_this10.props.options[name];});

return locals;}}]);return DatePicker;}(Component);




DatePicker.transformer={
format:function(value){return Nil.is(value)?new Date():value;},
parse:function(value){return value;}};var 


Struct=function(_Component5){babelHelpers.inherits(Struct,_Component5);function Struct(){babelHelpers.classCallCheck(this,Struct);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Struct).apply(this,arguments));}babelHelpers.createClass(Struct,[{key:'isValueNully',value:function isValueNully()

{var _this12=this;
return Object.keys(this.refs).every(function(ref){return _this12.refs[ref].isValueNully();});}},{key:'removeErrors',value:function removeErrors()


{var _this13=this;
this.setState({hasError:false});
Object.keys(this.refs).forEach(function(ref){return _this13.refs[ref].removeErrors();});}},{key:'getValue',value:function getValue()


{
var value={};
for(var ref in this.refs){
value[ref]=this.refs[ref].getValue();}

return this.getTransformer().parse(value);}},{key:'validate',value:function validate()


{

var value={};
var errors=[];
var hasError=false;
var result;

if(this.typeInfo.isMaybe&&this.isValueNully()){
this.removeErrors();
return new t.ValidationResult({errors:[],value:null});}


for(var ref in this.refs){
if(this.refs.hasOwnProperty(ref)){
result=this.refs[ref].validate();
errors=errors.concat(result.errors);
value[ref]=result.value;}}



if(errors.length===0){
var InnerType=this.typeInfo.innerType;
value=new InnerType(value);
if(this.typeInfo.isSubtype&&errors.length===0){
result=t.validate(value,this.props.type,this.getValidationOptions());
hasError=!result.isValid();
errors=errors.concat(result.errors);}}



this.setState({hasError:hasError});
return new t.ValidationResult({errors:errors,value:value});}},{key:'onChange',value:function onChange(


fieldName,fieldValue,path){var _this14=this;
var value=t.mixin({},this.state.value);
value[fieldName]=fieldValue;
this.setState({value:value},function(){
_this14.props.onChange(value,path);});}},{key:'getTemplates',value:function getTemplates()



{
return merge(this.props.ctx.templates,this.props.options.templates);}},{key:'getTemplate',value:function getTemplate()


{
return this.props.options.template||this.getTemplates().struct;}},{key:'getStylesheet',value:function getStylesheet()


{
return this.props.options.stylesheet||this.props.ctx.stylesheet;}},{key:'getTypeProps',value:function getTypeProps()


{
return this.typeInfo.innerType.meta.props;}},{key:'getOrder',value:function getOrder()


{
return this.props.options.order||Object.keys(this.getTypeProps());}},{key:'getInputs',value:function getInputs()


{var _props=
this.props;var ctx=_props.ctx;var options=_props.options;
var props=this.getTypeProps();
var auto=this.getAuto();
var i18n=this.getI18n();
var config=this.getConfig();
var value=this.state.value||{};
var templates=this.getTemplates();
var stylesheet=this.getStylesheet();
var inputs={};
for(var prop in props){
if(props.hasOwnProperty(prop)){
var propType=props[prop];
var propOptions=options.fields&&options.fields[prop]?options.fields[prop]:nooptions;
inputs[prop]=React.createElement(getComponent(propType,propOptions),{
key:prop,
ref:prop,
type:propType,
options:propOptions,
value:value[prop],
onChange:this.onChange.bind(this,prop),
ctx:{
context:ctx.context,
auto:auto,
config:config,
label:humanize(prop),
i18n:i18n,
stylesheet:stylesheet,
templates:templates,
path:this.props.ctx.path.concat(prop)}});}}




return inputs;}},{key:'getLocals',value:function getLocals()


{
var templates=this.getTemplates();
var locals=babelHelpers.get(Object.getPrototypeOf(Struct.prototype),'getLocals',this).call(this);
locals.order=this.getOrder();
locals.inputs=this.getInputs();
locals.template=templates.struct;
return locals;}}]);return Struct;}(Component);var 




Form=function(_React$Component2){babelHelpers.inherits(Form,_React$Component2);function Form(){babelHelpers.classCallCheck(this,Form);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Form).apply(this,arguments));}babelHelpers.createClass(Form,[{key:'validate',value:function validate()

{
return this.refs.input.validate();}},{key:'getValue',value:function getValue()


{
var result=this.validate();
return result.isValid()?result.value:null;}},{key:'getComponent',value:function getComponent(


path){
path=t.String.is(path)?path.split('.'):path;
return path.reduce(function(input,name){return input.refs[name];},this.refs.input);}},{key:'render',value:function render()


{

var type=this.props.type;
var options=this.props.options||nooptions;
var stylesheet=Form.stylesheet;
var templates=Form.templates;
var i18n=Form.i18n;

t.assert(t.isType(type),'['+SOURCE+'] missing required prop type');
t.assert(t.Object.is(options),'['+SOURCE+'] prop options must be an object');
t.assert(t.Object.is(stylesheet),'['+SOURCE+'] missing stylesheet config');
t.assert(t.Object.is(templates),'['+SOURCE+'] missing templates config');
t.assert(t.Object.is(i18n),'['+SOURCE+'] missing i18n config');

var Component=getComponent(type,options);

return React.createElement(Component,{
ref:'input',
type:type,
options:options,
value:this.props.value,
onChange:this.props.onChange||noop,
ctx:{
context:this.props.context,
auto:'labels',
stylesheet:stylesheet,
templates:templates,
i18n:i18n,
path:[]}});}}]);return Form;}(React.Component);






module.exports={
getComponent:getComponent,
Component:Component,
Textbox:Textbox,
Checkbox:Checkbox,
Select:Select,
DatePicker:DatePicker,
Struct:Struct,
Form:Form};
});
__d('tcomb-form-native/lib/util.js',function(global, require, module, exports) {  'use strict';

var t=require('tcomb-validation/index.js');

function getOptionsOfEnum(type){
var enums=type.meta.map;
return Object.keys(enums).map(function(value){
return {
value:value,
text:enums[value]};});}




function getTypeInfo(type){

var innerType=type;
var isMaybe=false;
var isSubtype=false;
var kind;
var innerGetValidationErrorMessage;

while(innerType){
kind=innerType.meta.kind;
if(t.Function.is(innerType.getValidationErrorMessage)){
innerGetValidationErrorMessage=innerType.getValidationErrorMessage;}

if(kind==='maybe'){
isMaybe=true;
innerType=innerType.meta.type;
continue;}

if(kind==='subtype'){
isSubtype=true;
innerType=innerType.meta.type;
continue;}

break;}


var getValidationErrorMessage=innerGetValidationErrorMessage?function(value,path,context){
var result=t.validate(value,type,{path:path,context:context});
if(!result.isValid()){
for(var i=0,len=result.errors.length;i<len;i++){
if(t.Function.is(result.errors[i].expected.getValidationErrorMessage)){
return result.errors[i].message;}}


return innerGetValidationErrorMessage(value,path,context);}}:

undefined;

return {
type:type,
isMaybe:isMaybe,
isSubtype:isSubtype,
innerType:innerType,
getValidationErrorMessage:getValidationErrorMessage};}





function underscored(s){
return s.trim().replace(/([a-z\d])([A-Z]+)/g,'$1_$2').replace(/[-\s]+/g,'_').toLowerCase();}


function capitalize(s){
return s.charAt(0).toUpperCase()+s.slice(1);}


function humanize(s){
return capitalize(underscored(s).replace(/_id$/,'').replace(/_/g,' '));}


function merge(a,b){
return t.mixin(t.mixin({},a),b,true);}









var React;
try{
React=require.call(this,'react');}
catch(e){
React=require('react-native/Libraries/react-native/react-native.js');}


module.exports={
getOptionsOfEnum:getOptionsOfEnum,
getTypeInfo:getTypeInfo,
humanize:humanize,
merge:merge,
React:React};
});
__d('tcomb-form-native/lib/i18n/en.js',function(global, require, module, exports) {  module.exports={
optional:' (optional)',
required:''};
});
__d('tcomb-form-native/lib/templates/bootstrap/index.js',function(global, require, module, exports) {  module.exports={
textbox:require('tcomb-form-native/lib/templates/bootstrap/textbox.js'),
checkbox:require('tcomb-form-native/lib/templates/bootstrap/checkbox.js'),
select:require('tcomb-form-native/lib/templates/bootstrap/select.js'),
datepicker:require('tcomb-form-native/lib/templates/bootstrap/datepicker.js'),
struct:require('tcomb-form-native/lib/templates/bootstrap/struct.js')};
});
__d('tcomb-form-native/lib/templates/bootstrap/textbox.js',function(global, require, module, exports) {  var _require=require('tcomb-form-native/lib/util.js');var React=_require.React;var 
View=React.View;var Text=React.Text;var TextInput=React.TextInput;

function textbox(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var textboxStyle=stylesheet.textbox.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle=stylesheet.formGroup.error;
controlLabelStyle=stylesheet.controlLabel.error;
textboxStyle=stylesheet.textbox.error;
helpBlockStyle=stylesheet.helpBlock.error;}


if(locals.editable===false){
textboxStyle=stylesheet.textbox.notEditable;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError&&locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(TextInput,{
ref:"input",
autoCapitalize:locals.autoCapitalize,
autoCorrect:locals.autoCorrect,
autoFocus:locals.autoFocus,
bufferDelay:locals.bufferDelay,
clearButtonMode:locals.clearButtonMode,
editable:locals.editable,
enablesReturnKeyAutomatically:locals.enablesReturnKeyAutomatically,
keyboardType:locals.keyboardType,
multiline:locals.multiline,
onBlur:locals.onBlur,
onEndEditing:locals.onEndEditing,
onFocus:locals.onFocus,
onSubmitEditing:locals.onSubmitEditing,
password:locals.password,
placeholderTextColor:locals.placeholderTextColor,
returnKeyType:locals.returnKeyType,
selectTextOnFocus:locals.selectTextOnFocus,
secureTextEntry:locals.secureTextEntry,
selectionState:locals.selectionState,
onChangeText:function(value){return locals.onChange(value);},
placeholder:locals.placeholder,
maxLength:locals.maxLength,
numberOfLines:locals.numberOfLines,
textAlign:locals.textAlign,
textAlignVertical:locals.textAlignVertical,
underlineColorAndroid:locals.underlineColorAndroid,
style:textboxStyle,
value:locals.value}),

help,
error));}




module.exports=textbox;
});
__d('tcomb-form-native/lib/templates/bootstrap/checkbox.js',function(global, require, module, exports) {  var _require=require('tcomb-form-native/lib/util.js');var React=_require.React;var 
View=React.View;var Text=React.Text;var SwitchIOS=React.SwitchIOS;

function checkbox(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var checkboxStyle=stylesheet.checkbox.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle=stylesheet.formGroup.error;
controlLabelStyle=stylesheet.controlLabel.error;
checkboxStyle=stylesheet.checkbox.error;
helpBlockStyle=stylesheet.helpBlock.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError&&locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(SwitchIOS,{
ref:"input",
disabled:locals.disabled,
onTintColor:locals.onTintColor,
thumbTintColor:locals.thumbTintColor,
tintColor:locals.tintColor,
style:checkboxStyle,
onValueChange:function(value){return locals.onChange(value);},
value:locals.value}),

help,
error));}




module.exports=checkbox;
});
__d('tcomb-form-native/lib/templates/bootstrap/select.js',function(global, require, module, exports) {  var _require=require('tcomb-form-native/lib/util.js');var React=_require.React;var 
View=React.View;var Text=React.Text;var PickerIOS=React.PickerIOS;

function select(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var selectStyle=stylesheet.select.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle=stylesheet.formGroup.error;
controlLabelStyle=stylesheet.controlLabel.error;
selectStyle=stylesheet.select.error;
helpBlockStyle=stylesheet.helpBlock.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError&&locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

var options=locals.options.map(function(_ref){var value=_ref.value;var text=_ref.text;return React.createElement(PickerIOS.Item,{key:value,value:value,label:text});});

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(PickerIOS,{
ref:"input",
style:selectStyle,
selectedValue:locals.value,
onValueChange:locals.onChange},

options),

help,
error));}




module.exports=select;
});
__d('tcomb-form-native/lib/templates/bootstrap/datepicker.js',function(global, require, module, exports) {  var _require=require('tcomb-form-native/lib/util.js');var React=_require.React;var 
View=React.View;var Text=React.Text;var DatePickerIOS=React.DatePickerIOS;

function datepicker(locals){

var stylesheet=locals.stylesheet;
var formGroupStyle=stylesheet.formGroup.normal;
var controlLabelStyle=stylesheet.controlLabel.normal;
var datepickerStyle=stylesheet.datepicker.normal;
var helpBlockStyle=stylesheet.helpBlock.normal;
var errorBlockStyle=stylesheet.errorBlock;

if(locals.hasError){
formGroupStyle=stylesheet.formGroup.error;
controlLabelStyle=stylesheet.controlLabel.error;
datepickerStyle=stylesheet.datepicker.error;
helpBlockStyle=stylesheet.helpBlock.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var help=locals.help?React.createElement(Text,{style:helpBlockStyle},locals.help):null;
var error=locals.hasError&&locals.error?React.createElement(Text,{style:errorBlockStyle},locals.error):null;

return (
React.createElement(View,{style:formGroupStyle},
label,
React.createElement(DatePickerIOS,{
ref:"input",
maximumDate:locals.maximumDate,
minimumDate:locals.minimumDate,
minuteInterval:locals.minuteInterval,
mode:locals.mode,
timeZoneOffsetInMinutes:locals.timeZoneOffsetInMinutes,
style:datepickerStyle,
onDateChange:function(value){return locals.onChange(value);},
date:locals.value}),

help,
error));}




module.exports=datepicker;
});
__d('tcomb-form-native/lib/templates/bootstrap/struct.js',function(global, require, module, exports) {  var _require=require('tcomb-form-native/lib/util.js');var React=_require.React;var 
View=React.View;var Text=React.Text;

function struct(locals){

var stylesheet=locals.stylesheet;
var fieldsetStyle=stylesheet.fieldset;
var controlLabelStyle=stylesheet.controlLabel.normal;

if(locals.hasError){
controlLabelStyle=stylesheet.controlLabel.error;}


var label=locals.label?React.createElement(Text,{style:controlLabelStyle},locals.label):null;
var error=locals.hasError&&locals.error?React.createElement(Text,{style:stylesheet.errorBlock},locals.error):null;

var rows=locals.order.map(function(name){
return locals.inputs[name];});


return (
React.createElement(View,{style:fieldsetStyle},
label,
error,
rows));}




module.exports=struct;
});
__d('tcomb-form-native/lib/stylesheets/bootstrap.js',function(global, require, module, exports) {  'use strict';






var LABEL_COLOR='#000000';
var INPUT_COLOR='#000000';
var ERROR_COLOR='#a94442';
var HELP_COLOR='#999999';
var BORDER_COLOR='#cccccc';
var DISABLED_COLOR='#777777';
var DISABLED_BACKGROUND_COLOR='#eeeeee';
var FONT_SIZE=17;
var FONT_WEIGHT='500';

var stylesheet=Object.freeze({
fieldset:{},

formGroup:{
normal:{
marginBottom:10},

error:{
marginBottom:10}},


controlLabel:{
normal:{
color:LABEL_COLOR,
fontSize:FONT_SIZE,
marginBottom:7,
fontWeight:FONT_WEIGHT},


error:{
color:ERROR_COLOR,
fontSize:FONT_SIZE,
marginBottom:7,
fontWeight:FONT_WEIGHT}},


helpBlock:{
normal:{
color:HELP_COLOR,
fontSize:FONT_SIZE,
marginBottom:2},


error:{
color:HELP_COLOR,
fontSize:FONT_SIZE,
marginBottom:2}},


errorBlock:{
fontSize:FONT_SIZE,
marginBottom:2,
color:ERROR_COLOR},

textbox:{
normal:{
color:INPUT_COLOR,
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:BORDER_COLOR,
borderWidth:1,
marginBottom:5},


error:{
color:INPUT_COLOR,
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:ERROR_COLOR,
borderWidth:1,
marginBottom:5},


notEditable:{
fontSize:FONT_SIZE,
height:36,
padding:7,
borderRadius:4,
borderColor:BORDER_COLOR,
borderWidth:1,
marginBottom:5,
color:DISABLED_COLOR,
backgroundColor:DISABLED_BACKGROUND_COLOR}},


checkbox:{
normal:{
color:INPUT_COLOR,
marginBottom:4},


error:{
color:INPUT_COLOR,
marginBottom:4}},


select:{
normal:{
marginBottom:4},


error:{
marginBottom:4}},


datepicker:{
normal:{
marginBottom:4},


error:{
marginBottom:4}}});




module.exports=stylesheet;
});
__d('sofTokyo/app/i18n.js',function(global, require, module, exports) {  var 



I18n=require('react-native-i18n/index.js');
I18n.locale='ja-JP';var 


I18nService=function(){
function I18nService(){var _this=this;babelHelpers.classCallCheck(this,I18nService);
this.I18n=I18n;

this.I18n.translations=I18n.translations;



this.I18n.missingTranslation=function(arg){
return _this.I18n.translations['ja-JP'][arg];};}babelHelpers.createClass(I18nService,[{key:'set',value:function set(




langKey,translationsObj){var _this2=this;
if(!this.I18n.translations[langKey])this.I18n.translations[langKey]={};
var _keys=Object.keys(translationsObj);
_keys.map(function(key){
_this2.I18n.translations[langKey][key]=translationsObj[key];});}},{key:'getTranslations',value:function getTranslations()



{


return this.I18n;}}]);return I18nService;}();



var serv=new I18nService();

module.exports=serv;
});
__d('react-native-i18n/index.js',function(global, require, module, exports) {  'use strict';var _require=

require('react-native/Libraries/react-native/react-native.js');var Platform=_require.Platform;var NativeModules=_require.NativeModules;var 
RNI18n=NativeModules.RNI18n;
var I18n=require('react-native-i18n/vendor/i18n.js');

if(Platform.OS==='android'){
RNI18n.getCurrentLocale(function(locale){
I18n.locale=locale.replace(/_/,'-');});}else 

{
I18n.locale=RNI18n.locale.replace(/_/,'-');}


module.exports=I18n;
});
__d('react-native-i18n/vendor/i18n.js',function(global, require, module, exports) {  ;













(function(factory){
if(typeof module!=='undefined'&&module.exports){

module.exports=factory(this);}else 
if(typeof define==='function'&&define.amd){

var global=this;
define('i18n',function(){return factory(global);});}else 
{

this.I18n=factory(this);}})(

function(global){
"use strict";


var I18n=global&&global.I18n||{};


var slice=Array.prototype.slice;


var padding=function(number){
return ("0"+number.toString()).substr(-2);};



var DATE={
day_names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],
abbr_day_names:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],
month_names:[null,"January","February","March","April","May","June","July","August","September","October","November","December"],
abbr_month_names:[null,"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],
meridian:["AM","PM"]};



var NUMBER_FORMAT={
precision:3,
separator:".",
delimiter:",",
strip_insignificant_zeros:false};



var CURRENCY_FORMAT={
unit:"$",
precision:2,
format:"%u%n",
sign_first:true,
delimiter:",",
separator:"."};



var PERCENTAGE_FORMAT={
unit:"%",
precision:3,
format:"%n%u",
separator:".",
delimiter:""};



var SIZE_UNITS=[null,"kb","mb","gb","tb"];


var DEFAULT_OPTIONS={


defaultLocale:"en",


baseLanguage:null,

locale:"en",

defaultSeparator:".",

placeholder:/(?:\{\{|%\{)(.*?)(?:\}\}?)/gm,


fallbacks:false,

translations:{},


missingBehaviour:'message',



missingTranslationPrefix:''};


I18n.reset=function(){


this.defaultLocale=DEFAULT_OPTIONS.defaultLocale;



this.baseLanguage=DEFAULT_OPTIONS.baseLanguage;


this.locale=DEFAULT_OPTIONS.locale;


this.defaultSeparator=DEFAULT_OPTIONS.defaultSeparator;


this.placeholder=DEFAULT_OPTIONS.placeholder;



this.fallbacks=DEFAULT_OPTIONS.fallbacks;


this.translations=DEFAULT_OPTIONS.translations;


this.missingBehaviour=DEFAULT_OPTIONS.missingBehaviour;


this.missingTranslationPrefix=DEFAULT_OPTIONS.missingTranslationPrefix;};




I18n.initializeOptions=function(){
if(typeof this.defaultLocale==="undefined"&&this.defaultLocale!==null)
this.defaultLocale=DEFAULT_OPTIONS.defaultLocale;

if(typeof this.baseLanguage==="undefined"&&this.baseLanguage!==null)
this.baseLanguage=DEFAULT_OPTIONS.baseLanguage;

if(typeof this.locale==="undefined"&&this.locale!==null)
this.locale=DEFAULT_OPTIONS.locale;

if(typeof this.defaultSeparator==="undefined"&&this.defaultSeparator!==null)
this.defaultSeparator=DEFAULT_OPTIONS.defaultSeparator;

if(typeof this.placeholder==="undefined"&&this.placeholder!==null)
this.placeholder=DEFAULT_OPTIONS.placeholder;

if(typeof this.fallbacks==="undefined"&&this.fallbacks!==null)
this.fallbacks=DEFAULT_OPTIONS.fallbacks;

if(typeof this.translations==="undefined"&&this.translations!==null)
this.translations=DEFAULT_OPTIONS.translations;};

I18n.initializeOptions();
















I18n.locales={};



I18n.locales.get=function(locale){
var result=this[locale]||this[I18n.locale]||this["default"];

if(typeof result==="function"){
result=result(locale);}


if(result instanceof Array===false){
result=[result];}


return result;};



I18n.locales["default"]=function(locale){
var locales=[],
list=[],
countryCode,
count;




if(locale){
locales.push(locale);}



if(!locale&&I18n.locale){
locales.push(I18n.locale);}



if(I18n.fallbacks&&I18n.defaultLocale){
locales.push(I18n.defaultLocale);}





locales.forEach(function(locale){
countryCode=locale.split("-")[0];

if(! ~list.indexOf(locale)){
list.push(locale);}


if(I18n.fallbacks&&countryCode&&countryCode!==locale&&! ~list.indexOf(countryCode)){
list.push(countryCode);}});




if(!locales.length){
locales.push("en");}


return list;};



I18n.pluralization={};



I18n.pluralization.get=function(locale){
return this[locale]||this[I18n.locale]||this["default"];};




I18n.pluralization["default"]=function(count){
switch(count){
case 0:return ["zero","other"];
case 1:return ["one"];
default:return ["other"];}};





I18n.currentLocale=function(){
return this.locale||this.defaultLocale;};



I18n.isSet=function(value){
return value!==undefined&&value!==null;};





I18n.lookup=function(scope,options){
options=this.prepareOptions(options);

var locales=this.locales.get(options.locale).slice(),
requestedLocale=locales[0],
locale,
scopes,
translations;


scope=this.getFullScope(scope,options);

while(locales.length){
locale=locales.shift();

if(this.baseLanguage!==null&&locale==this.baseLanguage){
return scope;}


scopes=scope.split(this.defaultSeparator);
translations=this.translations[locale];

if(!translations){
continue;}


while(scopes.length){
translations=translations[scopes.shift()];

if(translations===undefined||translations===null){
break;}}



if(translations!==undefined&&translations!==null){
return translations;}}



if(this.isSet(options.defaultValue)){
return options.defaultValue;}};








I18n.meridian=function(){
var time=this.lookup("time");
var date=this.lookup("date");

if(time&&time.am&&time.pm){
return [time.am,time.pm];}else 
if(date&&date.meridian){
return date.meridian;}else 
{
return DATE.meridian;}};









I18n.prepareOptions=function(){
var args=slice.call(arguments),
options={},
subject;


while(args.length){
subject=args.shift();

if(typeof subject!="object"){
continue;}


for(var attr in subject){
if(!subject.hasOwnProperty(attr)){
continue;}


if(this.isSet(options[attr])){
continue;}


options[attr]=subject[attr];}}



return options;};





I18n.createTranslationOptions=function(scope,options){
var translationOptions=[{scope:scope}];



if(this.isSet(options.defaults)){
translationOptions=translationOptions.concat(options.defaults);}




if(this.isSet(options.defaultValue)){
translationOptions.push({message:options.defaultValue});
delete options.defaultValue;}


return translationOptions;};



I18n.translate=function(scope,options){
options=this.prepareOptions(options);

var translationOptions=this.createTranslationOptions(scope,options);

var translation;


var translationFound=
translationOptions.some(function(translationOption){
if(this.isSet(translationOption.scope)){
translation=this.lookup(translationOption.scope,options);}else 
if(this.isSet(translationOption.message)){
translation=translationOption.message;}


if(translation!==undefined&&translation!==null){
return true;}},

this);

if(!translationFound){
return this.missingTranslation(scope,options);}


if(typeof translation==="string"){
translation=this.interpolate(translation,options);}else 
if(translation instanceof Object&&this.isSet(options.count)){
translation=this.pluralize(options.count,translation,options);}


return translation;};



I18n.interpolate=function(message,options){
options=this.prepareOptions(options);
var matches=message.match(this.placeholder),
placeholder,
value,
name,
regex;


if(!matches){
return message;}


var value;

while(matches.length){
placeholder=matches.shift();
name=placeholder.replace(this.placeholder,"$1");

if(this.isSet(options[name])){
value=options[name].toString().replace(/\$/gm,"_#$#_");}else 
if(name in options){
value=this.nullPlaceholder(placeholder,message);}else 
{
value=this.missingPlaceholder(placeholder,message);}


regex=new RegExp(placeholder.replace(/\{/gm,"\\{").replace(/\}/gm,"\\}"));
message=message.replace(regex,value);}


return message.replace(/_#\$#_/g,"$");};





I18n.pluralize=function(count,scope,options){
options=this.prepareOptions(options);
var translations,pluralizer,keys,key,message;

if(scope instanceof Object){
translations=scope;}else 
{
translations=this.lookup(scope,options);}


if(!translations){
return this.missingTranslation(scope,options);}


pluralizer=this.pluralization.get(options.locale);
keys=pluralizer(count);

while(keys.length){
key=keys.shift();

if(this.isSet(translations[key])){
message=translations[key];
break;}}



options.count=String(count);
return this.interpolate(message,options);};



I18n.missingTranslation=function(scope,options){

if(this.missingBehaviour=='guess'){

var s=scope.split('.').slice(-1)[0];

return (this.missingTranslationPrefix.length>0?this.missingTranslationPrefix:'')+
s.replace('_',' ').replace(/([a-z])([A-Z])/g,
function(match,p1,p2){return p1+' '+p2.toLowerCase();});}


var fullScope=this.getFullScope(scope,options);
var fullScopeWithLocale=[this.currentLocale(),fullScope].join(this.defaultSeparator);

return '[missing "'+fullScopeWithLocale+'" translation]';};



I18n.missingPlaceholder=function(placeholder,message){
return "[missing "+placeholder+" value]";};


I18n.nullPlaceholder=function(){
return I18n.missingPlaceholder.apply(I18n,arguments);};













I18n.toNumber=function(number,options){
options=this.prepareOptions(
options,
this.lookup("number.format"),
NUMBER_FORMAT);


var negative=number<0,
string=Math.abs(number).toFixed(options.precision).toString(),
parts=string.split("."),
precision,
buffer=[],
formattedNumber,
format=options.format||"%n",
sign=negative?"-":"";


number=parts[0];
precision=parts[1];

while(number.length>0){
buffer.unshift(number.substr(Math.max(0,number.length-3),3));
number=number.substr(0,number.length-3);}


formattedNumber=buffer.join(options.delimiter);

if(options.strip_insignificant_zeros&&precision){
precision=precision.replace(/0+$/,"");}


if(options.precision>0&&precision){
formattedNumber+=options.separator+precision;}


if(options.sign_first){
format="%s"+format;}else 

{
format=format.replace("%n","%s%n");}


formattedNumber=format.
replace("%u",options.unit).
replace("%n",formattedNumber).
replace("%s",sign);


return formattedNumber;};

















I18n.toCurrency=function(number,options){
options=this.prepareOptions(
options,
this.lookup("number.currency.format"),
this.lookup("number.format"),
CURRENCY_FORMAT);


return this.toNumber(number,options);};









I18n.localize=function(scope,value,options){
options||(options={});

switch(scope){
case "currency":
return this.toCurrency(value);
case "number":
scope=this.lookup("number.format");
return this.toNumber(value,scope);
case "percentage":
return this.toPercentage(value);
default:
var localizedValue;

if(scope.match(/^(date|time)/)){
localizedValue=this.toTime(scope,value);}else 
{
localizedValue=value.toString();}


return this.interpolate(localizedValue,options);}};
















I18n.parseDate=function(date){
var matches,convertedDate,fraction;

if(typeof date=="object"){
return date;}
;

matches=date.toString().match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2})([\.,]\d{1,3})?)?(Z|\+00:?00)?/);

if(matches){
for(var i=1;i<=6;i++){
matches[i]=parseInt(matches[i],10)||0;}



matches[2]-=1;

fraction=matches[7]?1000*("0"+matches[7]):null;

if(matches[8]){
convertedDate=new Date(Date.UTC(matches[1],matches[2],matches[3],matches[4],matches[5],matches[6],fraction));}else 
{
convertedDate=new Date(matches[1],matches[2],matches[3],matches[4],matches[5],matches[6],fraction);}}else 

if(typeof date=="number"){

convertedDate=new Date();
convertedDate.setTime(date);}else 
if(date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\d+) (\d+:\d+:\d+) ([+-]\d+) (\d+)/)){


convertedDate=new Date();
convertedDate.setTime(Date.parse([
RegExp.$1,RegExp.$2,RegExp.$3,RegExp.$6,RegExp.$4,RegExp.$5].
join(" ")));}else 
if(date.match(/\d+ \d+:\d+:\d+ [+-]\d+ \d+/)){

convertedDate=new Date();
convertedDate.setTime(Date.parse(date));}else 
{

convertedDate=new Date();
convertedDate.setTime(Date.parse(date));}


return convertedDate;};
































I18n.strftime=function(date,format){
var options=this.lookup("date"),
meridianOptions=I18n.meridian();


if(!options){
options={};}


options=this.prepareOptions(options,DATE);

var weekDay=date.getDay(),
day=date.getDate(),
year=date.getFullYear(),
month=date.getMonth()+1,
hour=date.getHours(),
hour12=hour,
meridian=hour>11?1:0,
secs=date.getSeconds(),
mins=date.getMinutes(),
offset=date.getTimezoneOffset(),
absOffsetHours=Math.floor(Math.abs(offset/60)),
absOffsetMinutes=Math.abs(offset)-absOffsetHours*60,
timezoneoffset=(offset>0?"-":"+")+(
absOffsetHours.toString().length<2?"0"+absOffsetHours:absOffsetHours)+(
absOffsetMinutes.toString().length<2?"0"+absOffsetMinutes:absOffsetMinutes);


if(hour12>12){
hour12=hour12-12;}else 
if(hour12===0){
hour12=12;}


format=format.replace("%a",options.abbr_day_names[weekDay]);
format=format.replace("%A",options.day_names[weekDay]);
format=format.replace("%b",options.abbr_month_names[month]);
format=format.replace("%B",options.month_names[month]);
format=format.replace("%d",padding(day));
format=format.replace("%e",day);
format=format.replace("%-d",day);
format=format.replace("%H",padding(hour));
format=format.replace("%-H",hour);
format=format.replace("%I",padding(hour12));
format=format.replace("%-I",hour12);
format=format.replace("%m",padding(month));
format=format.replace("%-m",month);
format=format.replace("%M",padding(mins));
format=format.replace("%-M",mins);
format=format.replace("%p",meridianOptions[meridian]);
format=format.replace("%S",padding(secs));
format=format.replace("%-S",secs);
format=format.replace("%w",weekDay);
format=format.replace("%y",padding(year));
format=format.replace("%-y",padding(year).replace(/^0+/,""));
format=format.replace("%Y",year);
format=format.replace("%z",timezoneoffset);

return format;};



I18n.toTime=function(scope,dateString){
var date=this.parseDate(dateString),
format=this.lookup(scope);


if(date.toString().match(/invalid/i)){
return date.toString();}


if(!format){
return date.toString();}


return this.strftime(date,format);};



I18n.toPercentage=function(number,options){
options=this.prepareOptions(
options,
this.lookup("number.percentage.format"),
this.lookup("number.format"),
PERCENTAGE_FORMAT);


return this.toNumber(number,options);};



I18n.toHumanSize=function(number,options){
var kb=1024,
size=number,
iterations=0,
unit,
precision;


while(size>=kb&&iterations<4){
size=size/kb;
iterations+=1;}


if(iterations===0){
unit=this.t("number.human.storage_units.units.byte",{count:size});
precision=0;}else 
{
unit=this.t("number.human.storage_units.units."+SIZE_UNITS[iterations]);
precision=size-Math.floor(size)===0?0:1;}


options=this.prepareOptions(
options,
{unit:unit,precision:precision,format:"%n%u",delimiter:""});


return this.toNumber(size,options);};


I18n.getFullScope=function(scope,options){
options=this.prepareOptions(options);


if(scope.constructor===Array){
scope=scope.join(this.defaultSeparator);}






if(options.scope){
scope=[options.scope,scope].join(this.defaultSeparator);}


return scope;};



I18n.t=I18n.translate;
I18n.l=I18n.localize;
I18n.p=I18n.pluralize;

return I18n;});
});
__d('sofTokyo/app/services/Storage.js',function(global, require, module, exports) {  var _reactNativeStorage=require('react-native-storage/storage.js');var _reactNativeStorage2=babelHelpers.interopRequireDefault(_reactNativeStorage);





var _storage=new _reactNativeStorage2.default({
size:1000,
defaultExpires:1000*3600*24,
enableCache:true});var 


StorageService=function(){function StorageService(){babelHelpers.classCallCheck(this,StorageService);}babelHelpers.createClass(StorageService,[{key:'getInstance',value:function getInstance()
{
return _storage;}}]);return StorageService;}();



var _serv=new StorageService();

module.exports=_serv;
});
__d('react-native-storage/storage.js',function(global, require, module, exports) {  Object.defineProperty(exports,"__esModule",{value:true});var 





Storage=function(){
function Storage(){var options=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];babelHelpers.classCallCheck(this,Storage);
var me=this;

me._SIZE=options.size||1000;
me.sync=options.sync||{};
me.defaultExpires=options.defaultExpires||1000*3600*24;
me.enableCache=options.enableCache||true;
me._innerVersion=10;
me.cache={};


me.isBrowser=false;
if(window&&window.localStorage){
try{

window.localStorage.setItem('__react_native_storage_test','test');

me._s=window.localStorage;
me.isBrowser=true;}

catch(e){
console.warn(e);
throw e;}}else 


{
me._s=require('react-native/Libraries/react-native/react-native.js').AsyncStorage;}


me._mapPromise=me.getItem('map').then(function(map){
me._m=me._checkMap(JSON.parse(map));
delete me._mapPromise;});}babelHelpers.createClass(Storage,[{key:'getItem',value:function getItem(


key){var _this=this;
return this.isBrowser?new Promise(function(resolve,reject){return resolve(_this._s.getItem(key));}):this._s.getItem(key);}},{key:'setItem',value:function setItem(

key,value){var _this2=this;
return this.isBrowser?new Promise(function(resolve,reject){return resolve(_this2._s.setItem(key,value));}):this._s.setItem(key,value);}},{key:'removeItem',value:function removeItem(

key){var _this3=this;
return this.isBrowser?new Promise(function(resolve,reject){return resolve(_this3._s.removeItem(key));}):this._s.removeItem(key);}},{key:'_checkMap',value:function _checkMap(

map){
var me=this;
if(map&&map.innerVersion&&map.innerVersion===me._innerVersion){
return map;}else 

{
return {
innerVersion:me._innerVersion,
index:0};}}},{key:'_getId',value:function _getId(



key,id){
return key+'_'+id;}},{key:'_saveToMap',value:function _saveToMap(

params){var _this4=this;
var promise=new Promise(function(resolve,reject){var 
key=params.key;var id=params.id;var data=params.data;
var newId=_this4._getId(key,id);
var m=_this4._m;
if(m[newId]!==undefined){

if(_this4.enableCache)_this4.cache[newId]=JSON.parse(data);
return resolve(_this4.setItem('map_'+m[newId],data));}

if(m[m.index]!==undefined){

var oldId=m[m.index];
delete m[oldId];
if(_this4.enableCache){
delete _this4.cache[oldId];}}


m[newId]=m.index;
m[m.index]=newId;
if(_this4.enableCache){
var cacheData=JSON.parse(data);
_this4.cache[newId]=cacheData;}


resolve(_this4.setItem('map_'+m.index,data).
then(_this4.setItem('map',JSON.stringify(m))));
if(++m.index===_this4._SIZE){
m.index=0;}});


return this._mapPromise?this._mapPromise.then(function(){return promise;}):promise;}},{key:'save',value:function save(

params){
var promise;
var me=this;var 
key=params.key;var id=params.id;var rawData=params.rawData;var expires=params.expires;
if(key.toString().indexOf('_')!==-1){
console.error('Please do not use "_" in key!');}

var data={
rawData:rawData};

var now=new Date().getTime();
if(expires===undefined){
expires=me.defaultExpires;}

if(expires!==null){
data.expires=now+expires;}

data=JSON.stringify(data);
if(id===undefined){
if(me.enableCache){
var cacheData=JSON.parse(data);
me.cache[key]=cacheData;}

promise=me.setItem(key,data);}else 

{
if(id.toString().indexOf('_')!==-1){
console.error('Please do not use "_" in id!');}

promise=me._saveToMap({
key:key,
id:id,
data:data});}


return this._mapPromise?this._mapPromise.then(function(){return promise;}):promise;}},{key:'getBatchData',value:function getBatchData(

querys){
var me=this;
var tasks=[];
for(var i=0,query;query=querys[i];i++){
tasks[i]=me.load(query);}









return Promise.all(tasks);}},{key:'getBatchDataWithIds',value:function getBatchDataWithIds(

params){
var me=this;var 
key=params.key;var ids=params.ids;var syncInBackground=params.syncInBackground;

return Promise.all(
ids.map(function(id){return me.load({key:key,id:id,syncInBackground:syncInBackground,autoSync:false,batched:true});})).
then(function(results){return handlePromise(function(resolve,reject){return me.sync[key]({
id:results.
filter(function(value){return value.syncId!==undefined;}).
map(function(value){return value.syncId;}),
resolve:resolve,
reject:reject});}).
then(function(data){return results.map(function(value){return value.syncId?data.shift():value;});});});}},{key:'_lookupGlobalItem',value:function _lookupGlobalItem(

params){
var me=this,
ret=undefined;var 
key=params.key;
if(me.enableCache&&me.cache[key]!==undefined){
ret=me.cache[key];
return me._loadGlobalItem(babelHelpers.extends({ret:ret},params));}

return me.getItem(key).then(function(ret){return me._loadGlobalItem(babelHelpers.extends({ret:ret},params));});}},{key:'_loadGlobalItem',value:function _loadGlobalItem(

params){
var me=this;var 
key=params.key;var ret=params.ret;var autoSync=params.autoSync;var syncInBackground=params.syncInBackground;
if(ret===null||ret===undefined){
if(autoSync&&me.sync[key]){
return handlePromise(function(resolve,reject){return me.sync[key]({resolve:resolve,reject:reject});});}

return Promise.reject();}

if(typeof ret==='string'){
ret=JSON.parse(ret);}

var now=new Date().getTime();
if(autoSync&&ret.expires<now&&me.sync[key]){
if(syncInBackground){
me.sync[key]({});
return Promise.resolve(ret.rawData);}

return handlePromise(function(resolve,reject){return me.sync[key]({resolve:resolve,reject:reject});});}

return Promise.resolve(ret.rawData);}},{key:'_noItemFound',value:function _noItemFound(

params){
var me=this;var 
key=params.key;var id=params.id;var resolve=params.resolve;var reject=params.reject;var autoSync=params.autoSync;
if(me.sync[key]){
if(autoSync){
return handlePromise(function(resolve,reject){return me.sync[key]({id:id,resolve:resolve,reject:reject});});}

return Promise.resolve({syncId:id});}

return Promise.reject();}},{key:'_loadMapItem',value:function _loadMapItem(

params){
var me=this;var 
ret=params.ret;var key=params.key;var id=params.id;var resolve=params.resolve;var reject=params.reject;var autoSync=params.autoSync;var batched=params.batched;var syncInBackground=params.syncInBackground;
if(ret===null||ret===undefined){
return me._noItemFound(params);}

if(typeof ret==='string'){
ret=JSON.parse(ret);}

var now=new Date().getTime();
if(autoSync&&ret.expires<now){
if(me.sync[key]){
if(syncInBackground){
me.sync[key]({id:id});
return Promise.resolve(ret.rawData);}

return handlePromise(function(resolve,reject){return me.sync[key]({id:id,resolve:resolve,reject:reject});});}

if(batched){
return Promise.resolve({syncId:id});}}


return Promise.resolve(ret.rawData);}},{key:'_lookUpInMap',value:function _lookUpInMap(

params){
var me=this,
m=me._m,
ret=undefined;var 
key=params.key;var id=params.id;
var newId=me._getId(key,id);
if(me.enableCache&&me.cache[newId]){
ret=me.cache[newId];
return me._loadMapItem(babelHelpers.extends({ret:ret},params));}

if(m[newId]!==undefined){
return me.getItem('map_'+m[newId]).then(function(ret){return me._loadMapItem(babelHelpers.extends({ret:ret},params));});}

return me._noItemFound(babelHelpers.extends({ret:ret},params));}},{key:'remove',value:function remove(

params){
var me=this,
m=me._m;var 
key=params.key;var id=params.id;

if(id===undefined){
if(me.enableCache&&me.cache[key]){
delete me.cache[key];}

return me.removeItem(key);}

var newId=me._getId(key,id);


if(m[newId]!==undefined){
if(me.enableCache&&me.cache[newId]){
delete me.cache[newId];}

var idTobeDeleted=m[newId];
delete m[newId];
me.setItem('map',JSON.stringify(m));
return me.removeItem('map_'+idTobeDeleted);}}},{key:'load',value:function load(


params){
var me=this,
m=me._m;var 
key=params.key;var id=params.id;var autoSync=params.autoSync;var syncInBackground=params.syncInBackground;
if(autoSync===undefined){
autoSync=true;}

if(syncInBackground===undefined){
syncInBackground=true;}

var promise=new Promise(function(resolve,reject){
if(id===undefined){
return resolve(me._lookupGlobalItem({key:key,resolve:resolve,reject:reject,autoSync:autoSync,syncInBackground:syncInBackground}));}

return resolve(me._lookUpInMap({key:key,id:id,resolve:resolve,reject:reject,autoSync:autoSync,syncInBackground:syncInBackground}));});

return this._mapPromise?this._mapPromise.then(function(){return promise;}):promise;}},{key:'clearMap',value:function clearMap()

{
var me=this;
me.removeItem('map');
me._m={
innerVersion:me._innerVersion,
index:0};}}]);return Storage;}();exports.default=Storage;




function noop(){}


function handlePromise(fn){
return new Promise(function(resolve,reject){
var promise,isPromise;
if(isPromise=(promise=fn(function(data){return isPromise?noop():resolve(data);},function(err){return isPromise?noop():reject(err);})) instanceof Promise)resolve(promise);});}
});
__d('sofTokyo/app/pages/Register.js',function(global, require, module, exports) {  var _apslReactNativeButton=require('apsl-react-native-button/Button.js');var _apslReactNativeButton2=babelHelpers.interopRequireDefault(_apslReactNativeButton);



var React=require('react-native/Libraries/react-native/react-native.js');

var Dimensions=require('Dimensions');
var windowsSize=Dimensions.get('window');



var api=require("sofTokyo/app/utils/api/UserApi.js");



var t=require('tcomb-form-native/index.js');

var I18nService=require('sofTokyo/app/i18n.js');

I18nService.set('ja-JP',{
'registerWithFacebook':'RegisterFacebookで始める'});



var I18n=I18nService.getTranslations();var 


View=


React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;

var Icon=require('FontAwesome');

var styles={
Search:{
flex:1,
padding:30,
flexDirection:'column',
justifyContent:'center',
backgroundColor:'#FFFFFF'},

title:{
marginBottom:20,
fontSize:25,
textAlign:'center',
color:'#0000'},

searchInput:{
height:50,
padding:4,
marginRight:5,
fontSize:23,
borderWidth:1,
borderColor:'white',
borderRadius:8,
color:'white'},

buttonText:{
fontSize:18,
color:'#111',
alignSelf:'center'},

button:{
height:45,
flexDirection:'row',
backgroundColor:'white',
borderColor:'white',
borderWidth:1,
borderRadius:8,
marginBottom:10,
marginTop:10,
alignSelf:'stretch',
justifyContent:'center'}};



var styles=StyleSheet.create({
buttonsContainer:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},

facebookContainer:{
backgroundColor:"#2A406B",
height:windowsSize.height*0.2,
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


facebookButton:{
flex:1,
borderColor:'#2A406B',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3,
width:windowsSize.width*0.75,
marginLeft:windowsSize.width*0.125,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


loginButtonContainer:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


loginButton:{
flex:1,
borderColor:'#EEEEEE',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3,
width:windowsSize.width*0.5,
marginLeft:windowsSize.width*0.25,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


registerButton:{
flex:1,
borderColor:'#00b9f7',
backgroundColor:'transparent',
borderRadius:0,
borderWidth:3,
width:windowsSize.width*0.4,
marginLeft:windowsSize.width*0.30,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},


loginText:{
color:"##444444",
fontSize:25},


registerText:{
color:"##444444",
fontSize:20},



facebookText:{
color:"#FFF",
fontSize:25}});



var Form=t.form.Form;

var UserCredentials=t.struct({
username:t.String,
password:t.String});

var options={};




var username={};


var Register=React.createClass({displayName:'Register',
loginWithFacebook:function(){
FBLoginManager.loginWithPermissions(["email","user_friends"],function(error,data){
if(!error){
console.info("Login data: ",data);}else 
{
console.info("Error: ",data);}});},




register:function(){
var _credentials=this.refs.form.getValue();
if(_credentials){
api.sendCredentials(_credentials);}},



login:function(){
var NavigationSubject=require("sofTokyo/app/services/NavigationManager.js").getStream();
NavigationSubject.onNext({path:'login'});},


render:function(){
return (
React.createElement(View,{style:styles.Search},
React.createElement(View,{style:styles.facebookContainer},
React.createElement(_apslReactNativeButton2.default,{style:styles.facebookButton,textStyle:styles.facebookText,onPress:this.loginWithFacebook},
React.createElement(Text,null,
I18n.t('registerWithFacebook')))),



React.createElement(Form,{ref:'form',type:UserCredentials}),

React.createElement(View,{style:styles.loginButtonContainer},
React.createElement(_apslReactNativeButton2.default,{style:styles.loginButton,textStyle:styles.loginText,
onPress:this.register},
I18n.t('register'))),


React.createElement(View,{style:styles.loginButtonContainer},
React.createElement(Text,null,'か')),



React.createElement(View,{style:styles.loginButtonContainer},
React.createElement(_apslReactNativeButton2.default,{style:styles.registerButton,textStyle:styles.registerText,
onPress:this.login},
I18n.t('login')))));}});








module.exports=Register;
});
__d('sofTokyo/app/pages/PostView.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var Dimensions=require('Dimensions');
var windowSize=Dimensions.get("window");
var ResponsiveImage=require('react-native-responsive-image/react-native-responsive-image.js');
var PostStream=require("sofTokyo/app/services/Streams.js").getStream("Post");
var Storage=require("sofTokyo/app/services/Storage.js").getInstance();
var api=require("sofTokyo/app/utils/api/PostApi.js");
var GiftedSpinner=require('react-native-gifted-spinner/GiftedSpinner.js');
var GridView=require('react-native-grid-view/index.js');

var PostContentDisplayer=require("sofTokyo/app/components/posts/helpers/PostContentDisplayer.js");
var Avatar=require("sofTokyo/app/components/user/Avatar.js");
var CommentItem=require("sofTokyo/app/components/posts/helpers/CommentItem.js");

var Icon=require("FontAwesome"),
screen=Dimensions.get('window');var 


PixelRatio=





React.PixelRatio;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var Dimensions=React.Dimensions;

var styles=StyleSheet.create({
spinner:{
marginTop:20,
width:50},


postImage:{
flex:1,
flexDirection:'row',
alignItems:'center'},

a:{
fontWeight:"300",
color:"#ea4c89"},

p:{
marginBottom:0,
flexDirection:"row",
marginTop:0},

invisibleView:{
flex:1,
position:"absolute",
top:0,
left:0,
bottom:0,
right:0},

customModalImage:{
height:screen.height/2},

headerContent:{
flex:1,
paddingBottom:20,
paddingTop:40,
alignItems:"center",
width:screen.width,
backgroundColor:"#fff"},

shotTitle:{
fontSize:16,
fontWeight:"400",
color:"#ea4c89",
lineHeight:18},

playerContent:{
fontSize:12},

player:{
fontWeight:"900",
lineHeight:18},

playerAvatar:{
borderRadius:40,
width:80,
height:80,
position:"absolute",
bottom:60,
left:screen.width/2-40,
borderWidth:2,
borderColor:"#fff"},

rightPane:{
flex:1,
flexDirection:"column",
alignItems:"center"},

shotDetailsRow:{
flex:1,
alignItems:"center",
justifyContent:"center",
backgroundColor:"white",
flexDirection:"row"},

shotCounter:{
flex:2,
alignItems:"center",
justifyContent:"space-between"},

shotCounterText:{
color:"#333"},

mainSection:{
flex:1,
alignItems:"stretch",
padding:10,
backgroundColor:"white"},

separator:{
backgroundColor:"rgba(0, 0, 0, 0.1)",
height:1/PixelRatio.get(),
marginVertical:10},

sectionSpacing:{
marginTop:20},

heading:{
fontWeight:"700",
fontSize:16}});




var imageSizes={
width:windowSize.width*0.45,
height:windowSize.height*0.6};


var PostId;

var PostView=React.createClass({displayName:'PostView',

getInitialState:function(){
return {
post:{},
isLoading:true};},



componentDidMount:function(){var _this=this;
Storage.load({
key:'UserId'}).
then(function(ret){
api.RetrievePost(PostId,ret.data);});


PostStream.subscribe(function(data){
if(data['type']!='comment'){
_this.setState({
isLoading:false,
data:data['post']});}else 

{
console.warn(data);}});},




render:function(){
var _photo=this.state.data&&this.state.data.thumbnail?this.state.data.thumbnail:"http://res.cloudinary.com/ceiboit/image/upload/v1452990023/imgpsh_fullsize_m24pha.jpg";
PostId=this.props.id;

if(this.state.isLoading)return React.createElement(GiftedSpinner,null);

var _postView=
React.createElement(ScrollView,{style:styles.container},
React.createElement(View,null,
React.createElement(ResponsiveImage,{style:styles.image,source:{uri:_photo},
initWidth:imageSizes.width,
initHeight:imageSizes.height}),

React.createElement(PostContentDisplayer,{content:this.state.data.content,
removeHTMLTags:true}),

React.createElement(Avatar,{author:this.state.data.author}),
React.createElement(GridView,{
items:this.state.data.comments,
itemsPerRow:1,
renderItem:function(rowData){return React.createElement(CommentItem,{comment:rowData,key:rowData.id});}}),


React.createElement(CommentInput,{id:this.state.data.id,subject:PostStream})));


return _postView;}});





PostView.PropTypes={
id:React.PropTypes.object};


module.exports=PostView;
});
__d('sofTokyo/app/components/posts/helpers/CommentItem.js',function(global, require, module, exports) {  var 



React=require("react-native/Libraries/react-native/react-native.js");var 

Image=






React.Image;var StyleSheet=React.StyleSheet;var PixelRatio=React.PixelRatio;var Text=React.Text;var TouchableHighlight=React.TouchableHighlight;var View=React.View;var Dimensions=React.Dimensions;

var Icon=require("FontAwesome"),
screen=Dimensions.get('window');

var Avatar=require('sofTokyo/app/components/user/Avatar.js');

var styles=StyleSheet.create({
commentContent:{
padding:10,
flex:1,
flexDirection:"row",
alignItems:"flex-start"},

userName:{
fontWeight:"700"},

commentBody:{
flex:1,
flexDirection:"column",
justifyContent:"center"},

commentText:{
flex:1,
flexDirection:"row"},

cellBorder:{
backgroundColor:"rgba(0, 0, 0, 0.2)",

height:1/PixelRatio.get(),
marginLeft:4},

avatar:{
borderRadius:20,
width:40,
height:40,
marginRight:10}});



var CommentItem=React.createClass({displayName:"CommentItem",
getDefaultProps:function(){
return {
comments:[]};},



render:function(){
return React.createElement(View,null,
React.createElement(TouchableHighlight,{underlayColor:"#f3f3f3"},
React.createElement(View,null,
React.createElement(View,{style:styles.commentContent},
React.createElement(Avatar,{author:this.props.comment.author}),
React.createElement(View,{style:styles.commentBody},
React.createElement(Text,{style:styles.commentText},
this.props.comment.content))),



React.createElement(View,{style:styles.cellBorder}))));}});







module.exports=CommentItem;
});
__d('sofTokyo/app/pages/Schools.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');

var GridView=require('react-native-grid-view/index.js');
var SchoolsStream=require("sofTokyo/app/services/Streams.js").getStream("Schools");var 



Schools=function(_React$Component){babelHelpers.inherits(Schools,_React$Component);

function Schools(props){babelHelpers.classCallCheck(this,Schools);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Schools).call(this,
props));

_this.state={
schools:[]};


SchoolsStream.subscribe(function(response){
console.warn(Object.keys(response['schools']));
_this.setState({
schools:response.schools});});return _this;}babelHelpers.createClass(Schools,[{key:'render',value:function render()




{
return (
React.createElement(GridView,{
items:this.state.schools,
itemsPerRow:1,
renderItem:function(rowData){return React.createElement(Text,null,rowData);}}));}}]);return Schools;}(React.Component);





module.exports=Schools;
});
__d('sofTokyo/app/pages/Profile.js',function(global, require, module, exports) {  var _reactNativeTabNavigator=require("react-native-tab-navigator/TabNavigator.js");var _reactNativeTabNavigator2=babelHelpers.interopRequireDefault(_reactNativeTabNavigator);





var React=require('react-native/Libraries/react-native/react-native.js');
var UserStream=require("sofTokyo/app/services/Streams.js").getStream("User");
var GridView=require('react-native-grid-view/index.js');


var Badge=require('sofTokyo/app/components/user/Badge.js');

var api=require('sofTokyo/app/utils/api/UserApi.js');
var storage=require('sofTokyo/app/services/Storage.js').getInstance();
var PostElement=require('sofTokyo/app/components/posts/PostElement.js');
var Icon=require('FontAwesome');


var Dimensions=require('Dimensions');
var windowSize=Dimensions.get("window");var 


View=



React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var ScrollView=React.ScrollView;

var styles=StyleSheet.create({
container:{
flex:1,
marginTop:10,
height:windowSize.height},



tabView:{
flex:1,
padding:10,
backgroundColor:'rgba(0,0,0,0.01)'},

card:{
borderWidth:1,
backgroundColor:'#fff',
borderColor:'rgba(0,0,0,0.1)',
margin:5,
height:150,
padding:15,
shadowColor:'#ccc',
shadowOffset:{width:2,height:2},
shadowOpacity:0.5,
shadowRadius:3},


tabViewContainer:{
flex:1,
flexDirection:'column',
alignItems:'stretch',
height:windowSize.height},



postContainer:{
flex:1,
flexDirection:'row',
backgroundColor:'#FFFFFF',
margin:10,
width:windowSize.width*0.4}});




var postImage={
width:windowSize.width*0.2,
height:windowSize.height*0.35};


var postElement={
height:windowSize.height*0.8};


var goToPost=function(rowData){
var subject=require("sofTokyo/app/services/NavigationManager.js").getStream();
subject.onNext({path:'post',params:{id:rowData.id}});};




var Profile=React.createClass({displayName:"Profile",

getInitialState:function(){
return {
user:{},
posts:[],
isLoading:true};},



componentDidMount:function(){var _this=this;
this.getUserData(this.props.id);
UserStream.subscribe(function(data){
if(_this.props.id=='me'){
_this.setState({
user:data.data,
isLoading:false,
selectedTab:'home'});}else 

{
_this.setState({
user:data.data.author,
posts:data.data.posts,
isLoading:false,
selectedTab:'posts'});}});},





getUserData:function(id){
if(id=='me'){
storage.load({key:'UserId'}).
then(function(ret){
api.getUser(ret.data);});}else 

{
api.getMember(id);}},



selectedPosts:function(){
this.setState({
selectedTab:'posts'});},



selectedHome:function(){
this.setState({
selectedTab:'home'});},



calculateListHeight:function(){},



render:function(){var _this2=this;

var _ownerTab=
React.createElement(View,{style:{height:300}},
React.createElement(_reactNativeTabNavigator2.default,null,
React.createElement(_reactNativeTabNavigator2.default.Item,{
selected:this.state.selectedTab==='profileData',
renderIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"user",size:20}));},
renderSelectedIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"bell-o",color:"#FFF000",size:20}));},
onPress:function(){return _this2.setState({selectedTab:'profileData'});}},
React.createElement(Text,null,"Test!")),


React.createElement(_reactNativeTabNavigator2.default.Item,{

selected:this.state.selectedTab==='home',
renderIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"bell-o",size:20}));},
renderSelectedIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"bell-o",color:"#FFF000",size:20}));},
onPress:function(){return _this2.setState({selectedTab:'home'});}},
React.createElement(Text,null,"Hola"))));





var _dynamicHeight=0;

if(this.state.posts&&this.state.posts.length){
_dynamicHeight=postElement.height*Math.abs(this.state.posts.length/2);}


console.warn(_dynamicHeight);

var _visitorTab=
React.createElement(_reactNativeTabNavigator2.default,{
sceneStyle:{height:postElement.height-50}},

React.createElement(_reactNativeTabNavigator2.default.Item,{
selected:this.state.selectedTab==='posts',
renderIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"files-o",size:20,color:"##bbbbbb"}));},
renderSelectedIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"files-o",color:"#000000",size:20}));},
onPress:this.selectedPosts},

React.createElement(ScrollView,{style:{height:500}},
React.createElement(GridView,{
style:{height:_dynamicHeight},
items:this.state.posts,
itemsPerRow:2,
renderItem:function(rowData){return React.createElement(PostElement,{key:rowData.id,postData:rowData});}}))),




React.createElement(_reactNativeTabNavigator2.default.Item,{
selected:this.state.selectedTab==='home',
renderIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"bell-o",size:20,color:"#bbbbbb"}));},
renderSelectedIcon:function(){return React.createElement(View,null,React.createElement(Icon,{name:"bell-o",color:"#000000",size:20}));},
onPress:this.selectedHome},

React.createElement(Text,null,"Test")));





var _render=this.props.id=='me'?_ownerTab:_visitorTab;
return (

React.createElement(View,null,
React.createElement(Badge,{data:this.state.user}),
_render));}});





Profile.propTypes={
id:React.PropTypes.any};


module.exports=Profile;
});
__d('react-native-tab-navigator/TabNavigator.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _immutable=require('immutable/dist/immutable.js');var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);var _Badge=require('react-native-tab-navigator/Badge.js');var _Badge2=babelHelpers.interopRequireDefault(_Badge);var _Layout=require('react-native-tab-navigator/Layout.js');var _Layout2=babelHelpers.interopRequireDefault(_Layout);var _StaticContainer=require('react-native-tab-navigator/StaticContainer.js');var _StaticContainer2=babelHelpers.interopRequireDefault(_StaticContainer);var _Tab=require('react-native-tab-navigator/Tab.js');var _Tab2=babelHelpers.interopRequireDefault(_Tab);var _TabBar=require('react-native-tab-navigator/TabBar.js');var _TabBar2=babelHelpers.interopRequireDefault(_TabBar);var _TabNavigatorItem=require('react-native-tab-navigator/TabNavigatorItem.js');var _TabNavigatorItem2=babelHelpers.interopRequireDefault(_TabNavigatorItem);var 















TabNavigator=function(_React$Component){babelHelpers.inherits(TabNavigator,_React$Component);








function TabNavigator(props,context){babelHelpers.classCallCheck(this,TabNavigator);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(TabNavigator).call(this,
props,context));
_this.state={
renderedSceneKeys:_this._updateRenderedSceneKeys(props.children)};


_this._renderTab=_this._renderTab.bind(_this);return _this;}babelHelpers.createClass(TabNavigator,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(


nextProps){var 
renderedSceneKeys=this.state.renderedSceneKeys;
this.setState({
renderedSceneKeys:this._updateRenderedSceneKeys(
nextProps.children,
renderedSceneKeys)});}},{key:'_getSceneKey',value:function _getSceneKey(




item,index){
return 'scene-'+(item.key!==null?item.key:index);}},{key:'_updateRenderedSceneKeys',value:function _updateRenderedSceneKeys(


children){var _this2=this;var oldSceneKeys=arguments.length<=1||arguments[1]===undefined?(0,_immutable.Set)():arguments[1];
var newSceneKeys=(0,_immutable.Set)().asMutable();
_reactNative2.default.Children.forEach(children,function(item,index){
var key=_this2._getSceneKey(item,index);
if(oldSceneKeys.has(key)||item.props.selected){
newSceneKeys.add(key);}});


return newSceneKeys.asImmutable();}},{key:'render',value:function render()


{var _this3=this;var _props=
this.props;var style=_props.style;var children=_props.children;var tabBarStyle=_props.tabBarStyle;var tabBarShadowStyle=_props.tabBarShadowStyle;var sceneStyle=_props.sceneStyle;var props=babelHelpers.objectWithoutProperties(_props,['style','children','tabBarStyle','tabBarShadowStyle','sceneStyle']);
var scenes=[];

_reactNative2.default.Children.forEach(children,function(item,index){
var sceneKey=_this3._getSceneKey(item,index);
if(!_this3.state.renderedSceneKeys.has(sceneKey)){
return;}var 


selected=item.props.selected;
var scene=
_reactNative2.default.createElement(SceneContainer,{key:sceneKey,selected:selected,style:sceneStyle},
item);


scenes.push(scene);});


return (
_reactNative2.default.createElement(_reactNative.View,babelHelpers.extends({},props,{style:[styles.container,style]}),
scenes,
_reactNative2.default.createElement(_TabBar2.default,{style:tabBarStyle,shadowStyle:tabBarShadowStyle},
_reactNative2.default.Children.map(children,this._renderTab))));}},{key:'_renderTab',value:function _renderTab(





item){
var icon=undefined;
if(item.props.selected){
if(item.props.renderSelectedIcon){
icon=item.props.renderSelectedIcon();}else 
if(item.props.renderIcon){
var defaultIcon=item.props.renderIcon();
icon=_reactNative2.default.cloneElement(defaultIcon,{
style:[defaultIcon.props.style,styles.defaultSelectedIcon]});}}else 


if(item.props.renderIcon){
icon=item.props.renderIcon();}


var badge=undefined;
if(item.props.renderBadge){
badge=item.props.renderBadge();}else 
if(item.props.badgeText){
badge=_reactNative2.default.createElement(_Badge2.default,null,item.props.badgeText);}


return (
_reactNative2.default.createElement(_Tab2.default,{
title:item.props.title,
allowFontScaling:item.props.allowFontScaling,
titleStyle:[
item.props.titleStyle,
item.props.selected?[
styles.defaultSelectedTitle,
item.props.selectedTitleStyle]:
null],

badge:badge,
onPress:item.props.onPress,
hidesTabTouch:this.props.hidesTabTouch},
icon));}}]);return TabNavigator;}(_reactNative2.default.Component);TabNavigator.propTypes=babelHelpers.extends({},_reactNative.View.propTypes,{sceneStyle:_reactNative.View.propTypes.style,tabBarStyle:_TabBar2.default.propTypes.style,tabBarShadowStyle:_TabBar2.default.propTypes.shadowStyle,hidesTabTouch:_reactNative.PropTypes.bool});exports.default=TabNavigator;var 





SceneContainer=function(_React$Component2){babelHelpers.inherits(SceneContainer,_React$Component2);function SceneContainer(){babelHelpers.classCallCheck(this,SceneContainer);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(SceneContainer).apply(this,arguments));}babelHelpers.createClass(SceneContainer,[{key:'render',value:function render()





{var _props2=
this.props;var selected=_props2.selected;var props=babelHelpers.objectWithoutProperties(_props2,['selected']);
return (
_reactNative2.default.createElement(_reactNative.View,babelHelpers.extends({},
props,{
pointerEvents:selected?'auto':'none',
removeClippedSubviews:!selected,
style:[
styles.sceneContainer,
selected?null:styles.hiddenSceneContainer,
props.style]}),

_reactNative2.default.createElement(_StaticContainer2.default,{shouldUpdate:selected},
this.props.children)));}}]);return SceneContainer;}(_reactNative2.default.Component);SceneContainer.propTypes=babelHelpers.extends({},_reactNative.View.propTypes,{selected:_reactNative.PropTypes.bool});






var styles=_reactNative.StyleSheet.create({
container:{
flex:1},

sceneContainer:{
position:'absolute',
top:0,
left:0,
right:0,
bottom:0,
paddingBottom:_Layout2.default.tabBarHeight},

hiddenSceneContainer:{
overflow:'hidden',
opacity:0},

defaultSelectedTitle:{
color:'rgb(0, 122, 255)'},

defaultSelectedIcon:{
tintColor:'rgb(0, 122, 255)'}});



TabNavigator.Item=_TabNavigatorItem2.default;
});
__d('immutable/dist/immutable.js',function(global, require, module, exports) {  (








function(global,factory){
typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():
typeof define==='function'&&define.amd?define(factory):
global.Immutable=factory();})(
this,function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor,superClass){
if(superClass){
ctor.prototype=Object.create(superClass.prototype);}

ctor.prototype.constructor=ctor;}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable,Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable,Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable,Iterable);
function SetIterable(value){
return isIterable(value)&&!isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable&&maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed&&maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed&&maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative)||isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered&&maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable=isIterable;
Iterable.isKeyed=isKeyed;
Iterable.isIndexed=isIndexed;
Iterable.isAssociative=isAssociative;
Iterable.isOrdered=isOrdered;

Iterable.Keyed=KeyedIterable;
Iterable.Indexed=IndexedIterable;
Iterable.Set=SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';


var DELETE='delete';


var SHIFT=5;
var SIZE=1<<SHIFT;
var MASK=SIZE-1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value=false;
return ref;}


function SetRef(ref){
ref&&(ref.value=true);}





function OwnerID(){}


function arrCopy(arr,offset){
offset=offset||0;
var len=Math.max(0,arr.length-offset);
var newArr=new Array(len);
for(var ii=0;ii<len;ii++){
newArr[ii]=arr[ii+offset];}

return newArr;}


function ensureSize(iter){
if(iter.size===undefined){
iter.size=iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter,index){







if(typeof index!=='number'){
var uint32Index=index>>>0;
if(''+uint32Index!==index||uint32Index===4294967295){
return NaN;}

index=uint32Index;}

return index<0?ensureSize(iter)+index:index;}


function returnTrue(){
return true;}


function wholeSlice(begin,end,size){
return (begin===0||size!==undefined&&begin<=-size)&&(
end===undefined||size!==undefined&&end>=size);}


function resolveBegin(begin,size){
return resolveIndex(begin,size,0);}


function resolveEnd(end,size){
return resolveIndex(end,size,size);}


function resolveIndex(index,size,defaultIndex){
return index===undefined?
defaultIndex:
index<0?
Math.max(0,size+index):
size===undefined?
index:
Math.min(size,index);}




var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol==='function'&&Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL||FAUX_ITERATOR_SYMBOL;


function Iterator(next){
this.next=next;}


Iterator.prototype.toString=function(){
return '[Iterator]';};



Iterator.KEYS=ITERATE_KEYS;
Iterator.VALUES=ITERATE_VALUES;
Iterator.ENTRIES=ITERATE_ENTRIES;

Iterator.prototype.inspect=
Iterator.prototype.toSource=function(){return this.toString();};
Iterator.prototype[ITERATOR_SYMBOL]=function(){
return this;};



function iteratorValue(type,k,v,iteratorResult){
var value=type===0?k:type===1?v:[k,v];
iteratorResult?iteratorResult.value=value:iteratorResult={
value:value,done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined,done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator&&typeof maybeIterator.next==='function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn&&iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable&&(
REAL_ITERATOR_SYMBOL&&iterable[REAL_ITERATOR_SYMBOL]||
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn==='function'){
return iteratorFn;}}



function isArrayLike(value){
return value&&typeof value.length==='number';}


createClass(Seq,Iterable);
function Seq(value){
return value===null||value===undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of=function(){
return Seq(arguments);};


Seq.prototype.toSeq=function(){
return this;};


Seq.prototype.toString=function(){
return this.__toString('Seq {','}');};


Seq.prototype.cacheResult=function(){
if(!this._cache&&this.__iterateUncached){
this._cache=this.entrySeq().toArray();
this.size=this._cache.length;}

return this;};




Seq.prototype.__iterate=function(fn,reverse){
return seqIterate(this,fn,reverse,true);};




Seq.prototype.__iterator=function(type,reverse){
return seqIterator(this,type,reverse,true);};




createClass(KeyedSeq,Seq);
function KeyedSeq(value){
return value===null||value===undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq=function(){
return this;};




createClass(IndexedSeq,Seq);
function IndexedSeq(value){
return value===null||value===undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of=function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq=function(){
return this;};


IndexedSeq.prototype.toString=function(){
return this.__toString('Seq [',']');};


IndexedSeq.prototype.__iterate=function(fn,reverse){
return seqIterate(this,fn,reverse,false);};


IndexedSeq.prototype.__iterator=function(type,reverse){
return seqIterator(this,type,reverse,false);};




createClass(SetSeq,Seq);
function SetSeq(value){
return (
value===null||value===undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of=function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq=function(){
return this;};




Seq.isSeq=isSeq;
Seq.Keyed=KeyedSeq;
Seq.Set=SetSeq;
Seq.Indexed=IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL]=true;



createClass(ArraySeq,IndexedSeq);
function ArraySeq(array){
this._array=array;
this.size=array.length;}


ArraySeq.prototype.get=function(index,notSetValue){
return this.has(index)?this._array[wrapIndex(this,index)]:notSetValue;};


ArraySeq.prototype.__iterate=function(fn,reverse){
var array=this._array;
var maxIndex=array.length-1;
for(var ii=0;ii<=maxIndex;ii++){
if(fn(array[reverse?maxIndex-ii:ii],ii,this)===false){
return ii+1;}}


return ii;};


ArraySeq.prototype.__iterator=function(type,reverse){
var array=this._array;
var maxIndex=array.length-1;
var ii=0;
return new Iterator(function()
{return ii>maxIndex?
iteratorDone():
iteratorValue(type,ii,array[reverse?maxIndex-ii++:ii++]);});};





createClass(ObjectSeq,KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object=object;
this._keys=keys;
this.size=keys.length;}


ObjectSeq.prototype.get=function(key,notSetValue){
if(notSetValue!==undefined&&!this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has=function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate=function(fn,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length-1;
for(var ii=0;ii<=maxIndex;ii++){
var key=keys[reverse?maxIndex-ii:ii];
if(fn(object[key],key,this)===false){
return ii+1;}}


return ii;};


ObjectSeq.prototype.__iterator=function(type,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length-1;
var ii=0;
return new Iterator(function(){
var key=keys[reverse?maxIndex-ii:ii];
return ii++>maxIndex?
iteratorDone():
iteratorValue(type,key,object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL]=true;


createClass(IterableSeq,IndexedSeq);
function IterableSeq(iterable){
this._iterable=iterable;
this.size=iterable.length||iterable.size;}


IterableSeq.prototype.__iterateUncached=function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step=iterator.next()).done){
if(fn(step.value,iterations++,this)===false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached=function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new Iterator(iteratorDone);}

var iterations=0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type,iterations++,step.value);});};





createClass(IteratorSeq,IndexedSeq);
function IteratorSeq(iterator){
this._iterator=iterator;
this._iteratorCache=[];}


IteratorSeq.prototype.__iterateUncached=function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations<cache.length){
if(fn(cache[iterations],iterations++,this)===false){
return iterations;}}


var step;
while(!(step=iterator.next()).done){
var val=step.value;
cache[iterations]=val;
if(fn(val,iterations++,this)===false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached=function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new Iterator(function(){
if(iterations>=cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations]=step.value;}

return iteratorValue(type,iterations,cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq&&maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ||(EMPTY_SEQ=new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value==='object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, '+
'or keyed object: '+value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: '+value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value)||
typeof value==='object'&&new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: '+value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq,fn,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length-1;
for(var ii=0;ii<=maxIndex;ii++){
var entry=cache[reverse?maxIndex-ii:ii];
if(fn(entry[1],useKeys?entry[0]:ii,seq)===false){
return ii+1;}}


return ii;}

return seq.__iterateUncached(fn,reverse);}


function seqIterator(seq,type,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length-1;
var ii=0;
return new Iterator(function(){
var entry=cache[reverse?maxIndex-ii:ii];
return ii++>maxIndex?
iteratorDone():
iteratorValue(type,useKeys?entry[0]:ii-1,entry[1]);});}


return seq.__iteratorUncached(type,reverse);}


function fromJS(json,converter){
return converter?
fromJSWith(converter,json,'',{'':json}):
fromJSDefault(json);}


function fromJSWith(converter,json,key,parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON,key,IndexedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON,key,KeyedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value&&(value.constructor===Object||value.constructor===undefined);}
























































function is(valueA,valueB){
if(valueA===valueB||valueA!==valueA&&valueB!==valueB){
return true;}

if(!valueA||!valueB){
return false;}

if(typeof valueA.valueOf==='function'&&
typeof valueB.valueOf==='function'){
valueA=valueA.valueOf();
valueB=valueB.valueOf();
if(valueA===valueB||valueA!==valueA&&valueB!==valueB){
return true;}

if(!valueA||!valueB){
return false;}}


if(typeof valueA.equals==='function'&&
typeof valueB.equals==='function'&&
valueA.equals(valueB)){
return true;}

return false;}


function deepEqual(a,b){
if(a===b){
return true;}


if(
!isIterable(b)||
a.size!==undefined&&b.size!==undefined&&a.size!==b.size||
a.__hash!==undefined&&b.__hash!==undefined&&a.__hash!==b.__hash||
isKeyed(a)!==isKeyed(b)||
isIndexed(a)!==isIndexed(b)||
isOrdered(a)!==isOrdered(b))
{
return false;}


if(a.size===0&&b.size===0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v,k){
var entry=entries.next().value;
return entry&&is(entry[1],v)&&(notAssociative||is(entry[0],k));})&&
entries.next().done;}


var flipped=false;

if(a.size===undefined){
if(b.size===undefined){
if(typeof a.cacheResult==='function'){
a.cacheResult();}}else 

{
flipped=true;
var _=a;
a=b;
b=_;}}



var allEqual=true;
var bSize=b.__iterate(function(v,k){
if(notAssociative?!a.has(v):
flipped?!is(v,a.get(k,NOT_SET)):!is(a.get(k,NOT_SET),v)){
allEqual=false;
return false;}});



return allEqual&&a.size===bSize;}


createClass(Repeat,IndexedSeq);

function Repeat(value,times){
if(!(this instanceof Repeat)){
return new Repeat(value,times);}

this._value=value;
this.size=times===undefined?Infinity:Math.max(0,times);
if(this.size===0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT=this;}}



Repeat.prototype.toString=function(){
if(this.size===0){
return 'Repeat []';}

return 'Repeat [ '+this._value+' '+this.size+' times ]';};


Repeat.prototype.get=function(index,notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes=function(searchValue){
return is(this._value,searchValue);};


Repeat.prototype.slice=function(begin,end){
var size=this.size;
return wholeSlice(begin,end,size)?this:
new Repeat(this._value,resolveEnd(end,size)-resolveBegin(begin,size));};


Repeat.prototype.reverse=function(){
return this;};


Repeat.prototype.indexOf=function(searchValue){
if(is(this._value,searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf=function(searchValue){
if(is(this._value,searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate=function(fn,reverse){
for(var ii=0;ii<this.size;ii++){
if(fn(this._value,ii,this)===false){
return ii+1;}}


return ii;};


Repeat.prototype.__iterator=function(type,reverse){var this$0=this;
var ii=0;
return new Iterator(function()
{return ii<this$0.size?iteratorValue(type,ii++,this$0._value):iteratorDone();});};



Repeat.prototype.equals=function(other){
return other instanceof Repeat?
is(this._value,other._value):
deepEqual(other);};



var EMPTY_REPEAT;

function invariant(condition,error){
if(!condition)throw new Error(error);}


createClass(Range,IndexedSeq);

function Range(start,end,step){
if(!(this instanceof Range)){
return new Range(start,end,step);}

invariant(step!==0,'Cannot step a Range by 0');
start=start||0;
if(end===undefined){
end=Infinity;}

step=step===undefined?1:Math.abs(step);
if(end<start){
step=-step;}

this._start=start;
this._end=end;
this._step=step;
this.size=Math.max(0,Math.ceil((end-start)/step-1)+1);
if(this.size===0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE=this;}}



Range.prototype.toString=function(){
if(this.size===0){
return 'Range []';}

return 'Range [ '+
this._start+'...'+this._end+(
this._step>1?' by '+this._step:'')+
' ]';};


Range.prototype.get=function(index,notSetValue){
return this.has(index)?
this._start+wrapIndex(this,index)*this._step:
notSetValue;};


Range.prototype.includes=function(searchValue){
var possibleIndex=(searchValue-this._start)/this._step;
return possibleIndex>=0&&
possibleIndex<this.size&&
possibleIndex===Math.floor(possibleIndex);};


Range.prototype.slice=function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

begin=resolveBegin(begin,this.size);
end=resolveEnd(end,this.size);
if(end<=begin){
return new Range(0,0);}

return new Range(this.get(begin,this._end),this.get(end,this._end),this._step);};


Range.prototype.indexOf=function(searchValue){
var offsetValue=searchValue-this._start;
if(offsetValue%this._step===0){
var index=offsetValue/this._step;
if(index>=0&&index<this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf=function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate=function(fn,reverse){
var maxIndex=this.size-1;
var step=this._step;
var value=reverse?this._start+maxIndex*step:this._start;
for(var ii=0;ii<=maxIndex;ii++){
if(fn(value,ii,this)===false){
return ii+1;}

value+=reverse?-step:step;}

return ii;};


Range.prototype.__iterator=function(type,reverse){
var maxIndex=this.size-1;
var step=this._step;
var value=reverse?this._start+maxIndex*step:this._start;
var ii=0;
return new Iterator(function(){
var v=value;
value+=reverse?-step:step;
return ii>maxIndex?iteratorDone():iteratorValue(type,ii++,v);});};



Range.prototype.equals=function(other){
return other instanceof Range?
this._start===other._start&&
this._end===other._end&&
this._step===other._step:
deepEqual(this,other);};



var EMPTY_RANGE;

createClass(Collection,Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection,Collection);function KeyedCollection(){}

createClass(IndexedCollection,Collection);function IndexedCollection(){}

createClass(SetCollection,Collection);function SetCollection(){}


Collection.Keyed=KeyedCollection;
Collection.Indexed=IndexedCollection;
Collection.Set=SetCollection;

var imul=
typeof Math.imul==='function'&&Math.imul(0xffffffff,2)===-2?
Math.imul:
function imul(a,b){
a=a|0;
b=b|0;
var c=a&0xffff;
var d=b&0xffff;

return c*d+((a>>>16)*d+c*(b>>>16)<<16>>>0)|0;};






function smi(i32){
return i32>>>1&0x40000000|i32&0xBFFFFFFF;}


function hash(o){
if(o===false||o===null||o===undefined){
return 0;}

if(typeof o.valueOf==='function'){
o=o.valueOf();
if(o===false||o===null||o===undefined){
return 0;}}


if(o===true){
return 1;}

var type=typeof o;
if(type==='number'){
var h=o|0;
if(h!==o){
h^=o*0xFFFFFFFF;}

while(o>0xFFFFFFFF){
o/=0xFFFFFFFF;
h^=o;}

return smi(h);}

if(type==='string'){
return o.length>STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode==='function'){
return o.hashCode();}

if(type==='object'){
return hashJSObj(o);}

if(typeof o.toString==='function'){
return hashString(o.toString());}

throw new Error('Value type '+type+' cannot be hashed.');}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash===undefined){
hash=hashString(string);
if(STRING_HASH_CACHE_SIZE===STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE=0;
stringHashCache={};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string]=hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0;ii<string.length;ii++){
hash=31*hash+string.charCodeAt(ii)|0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash=weakMap.get(obj);
if(hash!==undefined){
return hash;}}



hash=obj[UID_HASH_KEY];
if(hash!==undefined){
return hash;}


if(!canDefineProperty){
hash=obj.propertyIsEnumerable&&obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash!==undefined){
return hash;}


hash=getIENodeHash(obj);
if(hash!==undefined){
return hash;}}



hash=++objHashUID;
if(objHashUID&0x40000000){
objHashUID=0;}


if(usingWeakMap){
weakMap.set(obj,hash);}else 
if(isExtensible!==undefined&&isExtensible(obj)===false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj,UID_HASH_KEY,{
'enumerable':false,
'configurable':false,
'writable':false,
'value':hash});}else 

if(obj.propertyIsEnumerable!==undefined&&
obj.propertyIsEnumerable===obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable=function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY]=hash;}else 
if(obj.nodeType!==undefined){




obj[UID_HASH_KEY]=hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=function(){
try{
Object.defineProperty({},'@',{});
return true;}
catch(e){
return false;}}();





function getIENodeHash(node){
if(node&&node.nodeType>0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement&&node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap==='function';
var weakMap;
if(usingWeakMap){
weakMap=new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol==='function'){
UID_HASH_KEY=Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function assertNotInfinite(size){
invariant(
size!==Infinity,
'Cannot perform this action with an infinite size.');}



createClass(Map,KeyedCollection);



function Map(value){
return value===null||value===undefined?emptyMap():
isMap(value)&&!isOrdered(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



Map.prototype.toString=function(){
return this.__toString('Map {','}');};




Map.prototype.get=function(k,notSetValue){
return this._root?
this._root.get(0,undefined,k,notSetValue):
notSetValue;};




Map.prototype.set=function(k,v){
return updateMap(this,k,v);};


Map.prototype.setIn=function(keyPath,v){
return this.updateIn(keyPath,NOT_SET,function(){return v;});};


Map.prototype.remove=function(k){
return updateMap(this,k,NOT_SET);};


Map.prototype.deleteIn=function(keyPath){
return this.updateIn(keyPath,function(){return NOT_SET;});};


Map.prototype.update=function(k,notSetValue,updater){
return arguments.length===1?
k(this):
this.updateIn([k],notSetValue,updater);};


Map.prototype.updateIn=function(keyPath,notSetValue,updater){
if(!updater){
updater=notSetValue;
notSetValue=undefined;}

var updatedValue=updateInDeepMap(
this,
forceIterator(keyPath),
notSetValue,
updater);

return updatedValue===NOT_SET?undefined:updatedValue;};


Map.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._root=null;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyMap();};




Map.prototype.merge=function(){
return mergeIntoMapWith(this,undefined,arguments);};


Map.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,merger,iters);};


Map.prototype.mergeIn=function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.merge==='function'?
m.merge.apply(m,iters):
iters[iters.length-1];});};



Map.prototype.mergeDeep=function(){
return mergeIntoMapWith(this,deepMerger,arguments);};


Map.prototype.mergeDeepWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,deepMergerWith(merger),iters);};


Map.prototype.mergeDeepIn=function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.mergeDeep==='function'?
m.mergeDeep.apply(m,iters):
iters[iters.length-1];});};



Map.prototype.sort=function(comparator){

return OrderedMap(sortFactory(this,comparator));};


Map.prototype.sortBy=function(mapper,comparator){

return OrderedMap(sortFactory(this,comparator,mapper));};




Map.prototype.withMutations=function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


Map.prototype.asMutable=function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


Map.prototype.asImmutable=function(){
return this.__ensureOwner();};


Map.prototype.wasAltered=function(){
return this.__altered;};


Map.prototype.__iterator=function(type,reverse){
return new MapIterator(this,type,reverse);};


Map.prototype.__iterate=function(fn,reverse){var this$0=this;
var iterations=0;
this._root&&this._root.iterate(function(entry){
iterations++;
return fn(entry[1],entry[0],this$0);},
reverse);
return iterations;};


Map.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
this.__altered=false;
return this;}

return makeMap(this.size,this._root,ownerID,this.__hash);};



function isMap(maybeMap){
return !!(maybeMap&&maybeMap[IS_MAP_SENTINEL]);}


Map.isMap=isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=Map.prototype;
MapPrototype[IS_MAP_SENTINEL]=true;
MapPrototype[DELETE]=MapPrototype.remove;
MapPrototype.removeIn=MapPrototype.deleteIn;






function ArrayMapNode(ownerID,entries){
this.ownerID=ownerID;
this.entries=entries;}


ArrayMapNode.prototype.get=function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii<len;ii++){
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value===NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length;idx<len;idx++){
if(is(key,entries[idx][0])){
break;}}


var exists=idx<len;

if(exists?entries[idx][1]===value:removed){
return this;}


SetRef(didAlter);
(removed||!exists)&&SetRef(didChangeSize);

if(removed&&entries.length===1){
return;}


if(!exists&&!removed&&entries.length>=MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID,entries,key,value);}


var isEditable=ownerID&&ownerID===this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx===len-1?newEntries.pop():newEntries[idx]=newEntries.pop();}else 
{
newEntries[idx]=[key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries=newEntries;
return this;}


return new ArrayMapNode(ownerID,newEntries);};





function BitmapIndexedNode(ownerID,bitmap,nodes){
this.ownerID=ownerID;
this.bitmap=bitmap;
this.nodes=nodes;}


BitmapIndexedNode.prototype.get=function(shift,keyHash,key,notSetValue){
if(keyHash===undefined){
keyHash=hash(key);}

var bit=1<<((shift===0?keyHash:keyHash>>>shift)&MASK);
var bitmap=this.bitmap;
return (bitmap&bit)===0?notSetValue:
this.nodes[popCount(bitmap&bit-1)].get(shift+SHIFT,keyHash,key,notSetValue);};


BitmapIndexedNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}

var keyHashFrag=(shift===0?keyHash:keyHash>>>shift)&MASK;
var bit=1<<keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap&bit)!==0;

if(!exists&&value===NOT_SET){
return this;}


var idx=popCount(bitmap&bit-1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node,ownerID,shift+SHIFT,keyHash,key,value,didChangeSize,didAlter);

if(newNode===node){
return this;}


if(!exists&&newNode&&nodes.length>=MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID,nodes,bitmap,keyHashFrag,newNode);}


if(exists&&!newNode&&nodes.length===2&&isLeafNode(nodes[idx^1])){
return nodes[idx^1];}


if(exists&&newNode&&nodes.length===1&&isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID&&ownerID===this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap^bit:bitmap|bit;
var newNodes=exists?newNode?
setIn(nodes,idx,newNode,isEditable):
spliceOut(nodes,idx,isEditable):
spliceIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.bitmap=newBitmap;
this.nodes=newNodes;
return this;}


return new BitmapIndexedNode(ownerID,newBitmap,newNodes);};





function HashArrayMapNode(ownerID,count,nodes){
this.ownerID=ownerID;
this.count=count;
this.nodes=nodes;}


HashArrayMapNode.prototype.get=function(shift,keyHash,key,notSetValue){
if(keyHash===undefined){
keyHash=hash(key);}

var idx=(shift===0?keyHash:keyHash>>>shift)&MASK;
var node=this.nodes[idx];
return node?node.get(shift+SHIFT,keyHash,key,notSetValue):notSetValue;};


HashArrayMapNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}

var idx=(shift===0?keyHash:keyHash>>>shift)&MASK;
var removed=value===NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed&&!node){
return this;}


var newNode=updateNode(node,ownerID,shift+SHIFT,keyHash,key,value,didChangeSize,didAlter);
if(newNode===node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount<MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID,nodes,newCount,idx);}}



var isEditable=ownerID&&ownerID===this.ownerID;
var newNodes=setIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.count=newCount;
this.nodes=newNodes;
return this;}


return new HashArrayMapNode(ownerID,newCount,newNodes);};





function HashCollisionNode(ownerID,keyHash,entries){
this.ownerID=ownerID;
this.keyHash=keyHash;
this.entries=entries;}


HashCollisionNode.prototype.get=function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii<len;ii++){
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash===undefined){
keyHash=hash(key);}


var removed=value===NOT_SET;

if(keyHash!==this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,keyHash,[key,value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length;idx<len;idx++){
if(is(key,entries[idx][0])){
break;}}


var exists=idx<len;

if(exists?entries[idx][1]===value:removed){
return this;}


SetRef(didAlter);
(removed||!exists)&&SetRef(didChangeSize);

if(removed&&len===2){
return new ValueNode(ownerID,this.keyHash,entries[idx^1]);}


var isEditable=ownerID&&ownerID===this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx===len-1?newEntries.pop():newEntries[idx]=newEntries.pop();}else 
{
newEntries[idx]=[key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries=newEntries;
return this;}


return new HashCollisionNode(ownerID,this.keyHash,newEntries);};





function ValueNode(ownerID,keyHash,entry){
this.ownerID=ownerID;
this.keyHash=keyHash;
this.entry=entry;}


ValueNode.prototype.get=function(shift,keyHash,key,notSetValue){
return is(key,this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update=function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value===NOT_SET;
var keyMatch=is(key,this.entry[0]);
if(keyMatch?value===this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID&&ownerID===this.ownerID){
this.entry[1]=value;
return this;}

return new ValueNode(ownerID,this.keyHash,[key,value]);}


SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,hash(key),[key,value]);};






ArrayMapNode.prototype.iterate=
HashCollisionNode.prototype.iterate=function(fn,reverse){
var entries=this.entries;
for(var ii=0,maxIndex=entries.length-1;ii<=maxIndex;ii++){
if(fn(entries[reverse?maxIndex-ii:ii])===false){
return false;}}};




BitmapIndexedNode.prototype.iterate=
HashArrayMapNode.prototype.iterate=function(fn,reverse){
var nodes=this.nodes;
for(var ii=0,maxIndex=nodes.length-1;ii<=maxIndex;ii++){
var node=nodes[reverse?maxIndex-ii:ii];
if(node&&node.iterate(fn,reverse)===false){
return false;}}};




ValueNode.prototype.iterate=function(fn,reverse){
return fn(this.entry);};


createClass(MapIterator,Iterator);

function MapIterator(map,type,reverse){
this._type=type;
this._reverse=reverse;
this._stack=map._root&&mapIteratorFrame(map._root);}


MapIterator.prototype.next=function(){
var type=this._type;
var stack=this._stack;
while(stack){
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index===0){
return mapIteratorValue(type,node.entry);}}else 

if(node.entries){
maxIndex=node.entries.length-1;
if(index<=maxIndex){
return mapIteratorValue(type,node.entries[this._reverse?maxIndex-index:index]);}}else 

{
maxIndex=node.nodes.length-1;
if(index<=maxIndex){
var subNode=node.nodes[this._reverse?maxIndex-index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type,subNode.entry);}

stack=this._stack=mapIteratorFrame(subNode,stack);}

continue;}}


stack=this._stack=this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type,entry){
return iteratorValue(type,entry[0],entry[1]);}


function mapIteratorFrame(node,prev){
return {
node:node,
index:0,
__prev:prev};}



function makeMap(size,root,ownerID,hash){
var map=Object.create(MapPrototype);
map.size=size;
map._root=root;
map.__ownerID=ownerID;
map.__hash=hash;
map.__altered=false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP||(EMPTY_MAP=makeMap(0));}


function updateMap(map,k,v){
var newRoot;
var newSize;
if(!map._root){
if(v===NOT_SET){
return map;}

newSize=1;
newRoot=new ArrayMapNode(map.__ownerID,[[k,v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot=updateNode(map._root,map.__ownerID,0,undefined,k,v,didChangeSize,didAlter);
if(!didAlter.value){
return map;}

newSize=map.size+(didChangeSize.value?v===NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size=newSize;
map._root=newRoot;
map.__hash=undefined;
map.__altered=true;
return map;}

return newRoot?makeMap(newSize,newRoot):emptyMap();}


function updateNode(node,ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(!node){
if(value===NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID,keyHash,[key,value]);}

return node.update(ownerID,shift,keyHash,key,value,didChangeSize,didAlter);}


function isLeafNode(node){
return node.constructor===ValueNode||node.constructor===HashCollisionNode;}


function mergeIntoNode(node,ownerID,shift,keyHash,entry){
if(node.keyHash===keyHash){
return new HashCollisionNode(ownerID,keyHash,[node.entry,entry]);}


var idx1=(shift===0?node.keyHash:node.keyHash>>>shift)&MASK;
var idx2=(shift===0?keyHash:keyHash>>>shift)&MASK;

var newNode;
var nodes=idx1===idx2?
[mergeIntoNode(node,ownerID,shift+SHIFT,keyHash,entry)]:(
newNode=new ValueNode(ownerID,keyHash,entry),idx1<idx2?[node,newNode]:[newNode,node]);

return new BitmapIndexedNode(ownerID,1<<idx1|1<<idx2,nodes);}


function createNodes(ownerID,entries,key,value){
if(!ownerID){
ownerID=new OwnerID();}

var node=new ValueNode(ownerID,hash(key),[key,value]);
for(var ii=0;ii<entries.length;ii++){
var entry=entries[ii];
node=node.update(ownerID,0,undefined,entry[0],entry[1]);}

return node;}


function packNodes(ownerID,nodes,count,excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0,bit=1,len=nodes.length;ii<len;ii++,bit<<=1){
var node=nodes[ii];
if(node!==undefined&&ii!==excluding){
bitmap|=bit;
packedNodes[packedII++]=node;}}


return new BitmapIndexedNode(ownerID,bitmap,packedNodes);}


function expandNodes(ownerID,nodes,bitmap,including,node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0;bitmap!==0;ii++,bitmap>>>=1){
expandedNodes[ii]=bitmap&1?nodes[count++]:undefined;}

expandedNodes[including]=node;
return new HashArrayMapNode(ownerID,count+1,expandedNodes);}


function mergeIntoMapWith(map,merger,iterables){
var iters=[];
for(var ii=0;ii<iterables.length;ii++){
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter=iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map,merger,iters);}


function deepMerger(existing,value,key){
return existing&&existing.mergeDeep&&isIterable(value)?
existing.mergeDeep(value):
is(existing,value)?existing:value;}


function deepMergerWith(merger){
return function(existing,value,key){
if(existing&&existing.mergeDeepWith&&isIterable(value)){
return existing.mergeDeepWith(merger,value);}

var nextValue=merger(existing,value,key);
return is(existing,nextValue)?existing:nextValue;};}



function mergeIntoCollectionWith(collection,merger,iters){
iters=iters.filter(function(x){return x.size!==0;});
if(iters.length===0){
return collection;}

if(collection.size===0&&!collection.__ownerID&&iters.length===1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value,key){
collection.update(key,NOT_SET,function(existing)
{return existing===NOT_SET?value:merger(existing,value,key);});}:


function(value,key){
collection.set(key,value);};

for(var ii=0;ii<iters.length;ii++){
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing,keyPathIter,notSetValue,updater){
var isNotSet=existing===NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue===existingValue?existing:newValue;}

invariant(
isNotSet||existing&&existing.set,
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key,NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting,
keyPathIter,
notSetValue,
updater);

return nextUpdated===nextExisting?existing:
nextUpdated===NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key,nextUpdated);}


function popCount(x){
x=x-(x>>1&0x55555555);
x=(x&0x33333333)+(x>>2&0x33333333);
x=x+(x>>4)&0x0f0f0f0f;
x=x+(x>>8);
x=x+(x>>16);
return x&0x7f;}


function setIn(array,idx,val,canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx]=val;
return newArray;}


function spliceIn(array,idx,val,canEdit){
var newLen=array.length+1;
if(canEdit&&idx+1===newLen){
array[idx]=val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii<newLen;ii++){
if(ii===idx){
newArray[ii]=val;
after=-1;}else 
{
newArray[ii]=array[ii+after];}}


return newArray;}


function spliceOut(array,idx,canEdit){
var newLen=array.length-1;
if(canEdit&&idx===newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii<newLen;ii++){
if(ii===idx){
after=1;}

newArray[ii]=array[ii+after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE/4;
var MAX_BITMAP_INDEXED_SIZE=SIZE/2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE/4;

createClass(List,IndexedCollection);



function List(value){
var empty=emptyList();
if(value===null||value===undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size===0){
return empty;}

assertNotInfinite(size);
if(size>0&&size<SIZE){
return makeList(0,size,SHIFT,null,new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v,i){return list.set(i,v);});});}



List.of=function(){
return this(arguments);};


List.prototype.toString=function(){
return this.__toString('List [',']');};




List.prototype.get=function(index,notSetValue){
index=wrapIndex(this,index);
if(index>=0&&index<this.size){
index+=this._origin;
var node=listNodeFor(this,index);
return node&&node.array[index&MASK];}

return notSetValue;};




List.prototype.set=function(index,value){
return updateList(this,index,value);};


List.prototype.remove=function(index){
return !this.has(index)?this:
index===0?this.shift():
index===this.size-1?this.pop():
this.splice(index,1);};


List.prototype.insert=function(index,value){
return this.splice(index,0,value);};


List.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=this._origin=this._capacity=0;
this._level=SHIFT;
this._root=this._tail=null;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyList();};


List.prototype.push=function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list,0,oldSize+values.length);
for(var ii=0;ii<values.length;ii++){
list.set(oldSize+ii,values[ii]);}});};




List.prototype.pop=function(){
return setListBounds(this,0,-1);};


List.prototype.unshift=function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list,-values.length);
for(var ii=0;ii<values.length;ii++){
list.set(ii,values[ii]);}});};




List.prototype.shift=function(){
return setListBounds(this,1);};




List.prototype.merge=function(){
return mergeIntoListWith(this,undefined,arguments);};


List.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,merger,iters);};


List.prototype.mergeDeep=function(){
return mergeIntoListWith(this,deepMerger,arguments);};


List.prototype.mergeDeepWith=function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,deepMergerWith(merger),iters);};


List.prototype.setSize=function(size){
return setListBounds(this,0,size);};




List.prototype.slice=function(begin,end){
var size=this.size;
if(wholeSlice(begin,end,size)){
return this;}

return setListBounds(
this,
resolveBegin(begin,size),
resolveEnd(end,size));};



List.prototype.__iterator=function(type,reverse){
var index=0;
var values=iterateList(this,reverse);
return new Iterator(function(){
var value=values();
return value===DONE?
iteratorDone():
iteratorValue(type,index++,value);});};



List.prototype.__iterate=function(fn,reverse){
var index=0;
var values=iterateList(this,reverse);
var value;
while((value=values())!==DONE){
if(fn(value,index++,this)===false){
break;}}


return index;};


List.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
return this;}

return makeList(this._origin,this._capacity,this._level,this._root,this._tail,ownerID,this.__hash);};



function isList(maybeList){
return !!(maybeList&&maybeList[IS_LIST_SENTINEL]);}


List.isList=isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL]=true;
ListPrototype[DELETE]=ListPrototype.remove;
ListPrototype.setIn=MapPrototype.setIn;
ListPrototype.deleteIn=
ListPrototype.removeIn=MapPrototype.removeIn;
ListPrototype.update=MapPrototype.update;
ListPrototype.updateIn=MapPrototype.updateIn;
ListPrototype.mergeIn=MapPrototype.mergeIn;
ListPrototype.mergeDeepIn=MapPrototype.mergeDeepIn;
ListPrototype.withMutations=MapPrototype.withMutations;
ListPrototype.asMutable=MapPrototype.asMutable;
ListPrototype.asImmutable=MapPrototype.asImmutable;
ListPrototype.wasAltered=MapPrototype.wasAltered;



function VNode(array,ownerID){
this.array=array;
this.ownerID=ownerID;}




VNode.prototype.removeBefore=function(ownerID,level,index){
if(index===level?1<<level:0||this.array.length===0){
return this;}

var originIndex=index>>>level&MASK;
if(originIndex>=this.array.length){
return new VNode([],ownerID);}

var removingFirst=originIndex===0;
var newChild;
if(level>0){
var oldChild=this.array[originIndex];
newChild=oldChild&&oldChild.removeBefore(ownerID,level-SHIFT,index);
if(newChild===oldChild&&removingFirst){
return this;}}


if(removingFirst&&!newChild){
return this;}

var editable=editableVNode(this,ownerID);
if(!removingFirst){
for(var ii=0;ii<originIndex;ii++){
editable.array[ii]=undefined;}}


if(newChild){
editable.array[originIndex]=newChild;}

return editable;};


VNode.prototype.removeAfter=function(ownerID,level,index){
if(index===(level?1<<level:0)||this.array.length===0){
return this;}

var sizeIndex=index-1>>>level&MASK;
if(sizeIndex>=this.array.length){
return this;}


var newChild;
if(level>0){
var oldChild=this.array[sizeIndex];
newChild=oldChild&&oldChild.removeAfter(ownerID,level-SHIFT,index);
if(newChild===oldChild&&sizeIndex===this.array.length-1){
return this;}}



var editable=editableVNode(this,ownerID);
editable.array.splice(sizeIndex+1);
if(newChild){
editable.array[sizeIndex]=newChild;}

return editable;};




var DONE={};

function iterateList(list,reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root,list._level,0);

function iterateNodeOrLeaf(node,level,offset){
return level===0?
iterateLeaf(node,offset):
iterateNode(node,level,offset);}


function iterateLeaf(node,offset){
var array=offset===tailPos?tail&&tail.array:node&&node.array;
var from=offset>left?0:left-offset;
var to=right-offset;
if(to>SIZE){
to=SIZE;}

return function(){
if(from===to){
return DONE;}

var idx=reverse?--to:from++;
return array&&array[idx];};}



function iterateNode(node,level,offset){
var values;
var array=node&&node.array;
var from=offset>left?0:left-offset>>level;
var to=(right-offset>>level)+1;
if(to>SIZE){
to=SIZE;}

return function(){
do {
if(values){
var value=values();
if(value!==DONE){
return value;}

values=null;}

if(from===to){
return DONE;}

var idx=reverse?--to:from++;
values=iterateNodeOrLeaf(
array&&array[idx],level-SHIFT,offset+(idx<<level));}while(

true);};}}




function makeList(origin,capacity,level,root,tail,ownerID,hash){
var list=Object.create(ListPrototype);
list.size=capacity-origin;
list._origin=origin;
list._capacity=capacity;
list._level=level;
list._root=root;
list._tail=tail;
list.__ownerID=ownerID;
list.__hash=hash;
list.__altered=false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST||(EMPTY_LIST=makeList(0,0,SHIFT));}


function updateList(list,index,value){
index=wrapIndex(list,index);

if(index!==index){
return list;}


if(index>=list.size||index<0){
return list.withMutations(function(list){
index<0?
setListBounds(list,index).set(0,value):
setListBounds(list,0,index+1).set(index,value);});}



index+=list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index>=getTailOffset(list._capacity)){
newTail=updateVNode(newTail,list.__ownerID,0,index,value,didAlter);}else 
{
newRoot=updateVNode(newRoot,list.__ownerID,list._level,index,value,didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root=newRoot;
list._tail=newTail;
list.__hash=undefined;
list.__altered=true;
return list;}

return makeList(list._origin,list._capacity,list._level,newRoot,newTail);}


function updateVNode(node,ownerID,level,index,value,didAlter){
var idx=index>>>level&MASK;
var nodeHas=node&&idx<node.array.length;
if(!nodeHas&&value===undefined){
return node;}


var newNode;

if(level>0){
var lowerNode=node&&node.array[idx];
var newLowerNode=updateVNode(lowerNode,ownerID,level-SHIFT,index,value,didAlter);
if(newLowerNode===lowerNode){
return node;}

newNode=editableVNode(node,ownerID);
newNode.array[idx]=newLowerNode;
return newNode;}


if(nodeHas&&node.array[idx]===value){
return node;}


SetRef(didAlter);

newNode=editableVNode(node,ownerID);
if(value===undefined&&idx===newNode.array.length-1){
newNode.array.pop();}else 
{
newNode.array[idx]=value;}

return newNode;}


function editableVNode(node,ownerID){
if(ownerID&&node&&ownerID===node.ownerID){
return node;}

return new VNode(node?node.array.slice():[],ownerID);}


function listNodeFor(list,rawIndex){
if(rawIndex>=getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex<1<<list._level+SHIFT){
var node=list._root;
var level=list._level;
while(node&&level>0){
node=node.array[rawIndex>>>level&MASK];
level-=SHIFT;}

return node;}}



function setListBounds(list,begin,end){


if(begin!==undefined){
begin=begin|0;}

if(end!==undefined){
end=end|0;}

var owner=list.__ownerID||new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin+begin;
var newCapacity=end===undefined?oldCapacity:end<0?oldCapacity+end:oldOrigin+end;
if(newOrigin===oldOrigin&&newCapacity===oldCapacity){
return list;}



if(newOrigin>=newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin+offsetShift<0){
newRoot=new VNode(newRoot&&newRoot.array.length?[undefined,newRoot]:[],owner);
newLevel+=SHIFT;
offsetShift+=1<<newLevel;}

if(offsetShift){
newOrigin+=offsetShift;
oldOrigin+=offsetShift;
newCapacity+=offsetShift;
oldCapacity+=offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset>=1<<newLevel+SHIFT){
newRoot=new VNode(newRoot&&newRoot.array.length?[newRoot]:[],owner);
newLevel+=SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset<oldTailOffset?
listNodeFor(list,newCapacity-1):
newTailOffset>oldTailOffset?new VNode([],owner):oldTail;


if(oldTail&&newTailOffset>oldTailOffset&&newOrigin<oldCapacity&&oldTail.array.length){
newRoot=editableVNode(newRoot,owner);
var node=newRoot;
for(var level=newLevel;level>SHIFT;level-=SHIFT){
var idx=oldTailOffset>>>level&MASK;
node=node.array[idx]=editableVNode(node.array[idx],owner);}

node.array[oldTailOffset>>>SHIFT&MASK]=oldTail;}



if(newCapacity<oldCapacity){
newTail=newTail&&newTail.removeAfter(owner,0,newCapacity);}



if(newOrigin>=newTailOffset){
newOrigin-=newTailOffset;
newCapacity-=newTailOffset;
newLevel=SHIFT;
newRoot=null;
newTail=newTail&&newTail.removeBefore(owner,0,newOrigin);}else 


if(newOrigin>oldOrigin||newTailOffset<oldTailOffset){
offsetShift=0;


while(newRoot){
var beginIndex=newOrigin>>>newLevel&MASK;
if(beginIndex!==newTailOffset>>>newLevel&MASK){
break;}

if(beginIndex){
offsetShift+=(1<<newLevel)*beginIndex;}

newLevel-=SHIFT;
newRoot=newRoot.array[beginIndex];}



if(newRoot&&newOrigin>oldOrigin){
newRoot=newRoot.removeBefore(owner,newLevel,newOrigin-offsetShift);}

if(newRoot&&newTailOffset<oldTailOffset){
newRoot=newRoot.removeAfter(owner,newLevel,newTailOffset-offsetShift);}

if(offsetShift){
newOrigin-=offsetShift;
newCapacity-=offsetShift;}}



if(list.__ownerID){
list.size=newCapacity-newOrigin;
list._origin=newOrigin;
list._capacity=newCapacity;
list._level=newLevel;
list._root=newRoot;
list._tail=newTail;
list.__hash=undefined;
list.__altered=true;
return list;}

return makeList(newOrigin,newCapacity,newLevel,newRoot,newTail);}


function mergeIntoListWith(list,merger,iterables){
var iters=[];
var maxSize=0;
for(var ii=0;ii<iterables.length;ii++){
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size>maxSize){
maxSize=iter.size;}

if(!isIterable(value)){
iter=iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize>list.size){
list=list.setSize(maxSize);}

return mergeIntoCollectionWith(list,merger,iters);}


function getTailOffset(size){
return size<SIZE?0:size-1>>>SHIFT<<SHIFT;}


createClass(OrderedMap,Map);



function OrderedMap(value){
return value===null||value===undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



OrderedMap.of=function(){
return this(arguments);};


OrderedMap.prototype.toString=function(){
return this.__toString('OrderedMap {','}');};




OrderedMap.prototype.get=function(k,notSetValue){
var index=this._map.get(k);
return index!==undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set=function(k,v){
return updateOrderedMap(this,k,v);};


OrderedMap.prototype.remove=function(k){
return updateOrderedMap(this,k,NOT_SET);};


OrderedMap.prototype.wasAltered=function(){
return this._map.wasAltered()||this._list.wasAltered();};


OrderedMap.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry&&fn(entry[1],entry[0],this$0);},
reverse);};



OrderedMap.prototype.__iterator=function(type,reverse){
return this._list.fromEntrySeq().__iterator(type,reverse);};


OrderedMap.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
this._list=newList;
return this;}

return makeOrderedMap(newMap,newList,ownerID,this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap)&&isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap=isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL]=true;
OrderedMap.prototype[DELETE]=OrderedMap.prototype.remove;



function makeOrderedMap(map,list,ownerID,hash){
var omap=Object.create(OrderedMap.prototype);
omap.size=map?map.size:0;
omap._map=map;
omap._list=list;
omap.__ownerID=ownerID;
omap.__hash=hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP||(EMPTY_ORDERED_MAP=makeOrderedMap(emptyMap(),emptyList()));}


function updateOrderedMap(omap,k,v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i!==undefined;
var newMap;
var newList;
if(v===NOT_SET){
if(!has){
return omap;}

if(list.size>=SIZE&&list.size>=map.size*2){
newList=list.filter(function(entry,idx){return entry!==undefined&&i!==idx;});
newMap=newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID=newList.__ownerID=omap.__ownerID;}}else 

{
newMap=map.remove(k);
newList=i===list.size-1?list.pop():list.set(i,undefined);}}else 

{
if(has){
if(v===list.get(i)[1]){
return omap;}

newMap=map;
newList=list.set(i,[k,v]);}else 
{
newMap=map.set(k,list.size);
newList=list.set(list.size,[k,v]);}}


if(omap.__ownerID){
omap.size=newMap.size;
omap._map=newMap;
omap._list=newList;
omap.__hash=undefined;
return omap;}

return makeOrderedMap(newMap,newList);}


createClass(ToKeyedSequence,KeyedSeq);
function ToKeyedSequence(indexed,useKeys){
this._iter=indexed;
this._useKeys=useKeys;
this.size=indexed.size;}


ToKeyedSequence.prototype.get=function(key,notSetValue){
return this._iter.get(key,notSetValue);};


ToKeyedSequence.prototype.has=function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq=function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse=function(){var this$0=this;
var reversedSequence=reverseFactory(this,true);
if(!this._useKeys){
reversedSequence.valueSeq=function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map=function(mapper,context){var this$0=this;
var mappedSequence=mapFactory(this,mapper,context);
if(!this._useKeys){
mappedSequence.valueSeq=function(){return this$0._iter.toSeq().map(mapper,context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v,k){return fn(v,k,this$0);}:(
ii=reverse?resolveSize(this):0,
function(v){return fn(v,reverse?--ii:ii++,this$0);}),
reverse);};



ToKeyedSequence.prototype.__iterator=function(type,reverse){
if(this._useKeys){
return this._iter.__iterator(type,reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var ii=reverse?resolveSize(this):0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,reverse?--ii:ii++,step.value,step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL]=true;


createClass(ToIndexedSequence,IndexedSeq);
function ToIndexedSequence(iter){
this._iter=iter;
this.size=iter.size;}


ToIndexedSequence.prototype.includes=function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v,iterations++,this$0);},reverse);};


ToIndexedSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,iterations++,step.value,step);});};





createClass(ToSetSequence,SetSeq);
function ToSetSequence(iter){
this._iter=iter;
this.size=iter.size;}


ToSetSequence.prototype.has=function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v,v,this$0);},reverse);};


ToSetSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,step.value,step.value,step);});};





createClass(FromEntriesSequence,KeyedSeq);
function FromEntriesSequence(entries){
this._iter=entries;
this.size=entries.size;}


FromEntriesSequence.prototype.entrySeq=function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1],
indexedIterable?entry.get(0):entry[0],
this$0);}},


reverse);};


FromEntriesSequence.prototype.__iterator=function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new Iterator(function(){
while(true){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type,
indexedIterable?entry.get(0):entry[0],
indexedIterable?entry.get(1):entry[1],
step);}}});};







ToIndexedSequence.prototype.cacheResult=
ToKeyedSequence.prototype.cacheResult=
ToSetSequence.prototype.cacheResult=
FromEntriesSequence.prototype.cacheResult=
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter=iterable;
flipSequence.size=iterable.size;
flipSequence.flip=function(){return iterable;};
flipSequence.reverse=function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip=function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has=function(key){return iterable.includes(key);};
flipSequence.includes=function(key){return iterable.has(key);};
flipSequence.cacheResult=cacheResultThrough;
flipSequence.__iterateUncached=function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(k,v,this$0)!==false;},reverse);};

flipSequence.__iteratorUncached=function(type,reverse){
if(type===ITERATE_ENTRIES){
var iterator=iterable.__iterator(type,reverse);
return new Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0]=step.value[1];
step.value[1]=k;}

return step;});}


return iterable.__iterator(
type===ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES,
reverse);};


return flipSequence;}



function mapFactory(iterable,mapper,context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size=iterable.size;
mappedSequence.has=function(key){return iterable.has(key);};
mappedSequence.get=function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v===NOT_SET?
notSetValue:
mapper.call(context,v,key,iterable);};

mappedSequence.__iterateUncached=function(fn,reverse){var this$0=this;
return iterable.__iterate(
function(v,k,c){return fn(mapper.call(context,v,k,c),k,this$0)!==false;},
reverse);};


mappedSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
return new Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type,
key,
mapper.call(context,entry[1],key,iterable),
step);});};



return mappedSequence;}



function reverseFactory(iterable,useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter=iterable;
reversedSequence.size=iterable.size;
reversedSequence.reverse=function(){return iterable;};
if(iterable.flip){
reversedSequence.flip=function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse=function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get=function(key,notSetValue)
{return iterable.get(useKeys?key:-1-key,notSetValue);};
reversedSequence.has=function(key)
{return iterable.has(useKeys?key:-1-key);};
reversedSequence.includes=function(value){return iterable.includes(value);};
reversedSequence.cacheResult=cacheResultThrough;
reversedSequence.__iterate=function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(v,k,this$0);},!reverse);};

reversedSequence.__iterator=
function(type,reverse){return iterable.__iterator(type,!reverse);};
return reversedSequence;}



function filterFactory(iterable,predicate,context,useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has=function(key){
var v=iterable.get(key,NOT_SET);
return v!==NOT_SET&&!!predicate.call(context,v,key,iterable);};

filterSequence.get=function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v!==NOT_SET&&predicate.call(context,v,key,iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached=function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0);}},

reverse);
return iterations;};

filterSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterations=0;
return new Iterator(function(){
while(true){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context,value,key,iterable)){
return iteratorValue(type,useKeys?key:iterations++,value,step);}}});};




return filterSequence;}



function countByFactory(iterable,grouper,context){
var groups=Map().asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
0,
function(a){return a+1;});});


return groups.asImmutable();}



function groupByFactory(iterable,grouper,context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():Map()).asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
function(a){return a=a||[],a.push(isKeyedIter?[k,v]:v),a;});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable,coerce(arr));});}



function sliceFactory(iterable,begin,end,useKeys){
var originalSize=iterable.size;



if(begin!==undefined){
begin=begin|0;}

if(end!==undefined){
end=end|0;}


if(wholeSlice(begin,end,originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin,originalSize);
var resolvedEnd=resolveEnd(end,originalSize);




if(resolvedBegin!==resolvedBegin||resolvedEnd!==resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(),begin,end,useKeys);}






var resolvedSize=resolvedEnd-resolvedBegin;
var sliceSize;
if(resolvedSize===resolvedSize){
sliceSize=resolvedSize<0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);



sliceSeq.size=sliceSize===0?sliceSize:iterable.size&&sliceSize||undefined;

if(!useKeys&&isSeq(iterable)&&sliceSize>=0){
sliceSeq.get=function(index,notSetValue){
index=wrapIndex(this,index);
return index>=0&&index<sliceSize?
iterable.get(index+resolvedBegin,notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached=function(fn,reverse){var this$0=this;
if(sliceSize===0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k){
if(!(isSkipping&&(isSkipping=skipped++<resolvedBegin))){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0)!==false&&
iterations!==sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached=function(type,reverse){
if(sliceSize!==0&&reverse){
return this.cacheResult().__iterator(type,reverse);}


var iterator=sliceSize!==0&&iterable.__iterator(type,reverse);
var skipped=0;
var iterations=0;
return new Iterator(function(){
while(skipped++<resolvedBegin){
iterator.next();}

if(++iterations>sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys||type===ITERATE_VALUES){
return step;}else 
if(type===ITERATE_KEYS){
return iteratorValue(type,iterations-1,undefined,step);}else 
{
return iteratorValue(type,iterations-1,step.value[1],step);}});};




return sliceSeq;}



function takeWhileFactory(iterable,predicate,context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached=function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterations=0;
iterable.__iterate(function(v,k,c)
{return predicate.call(context,v,k,c)&&++iterations&&fn(v,k,this$0);});

return iterations;};

takeSequence.__iteratorUncached=function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterating=true;
return new Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context,v,k,this$0)){
iterating=false;
return iteratorDone();}

return type===ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return takeSequence;}



function skipWhileFactory(iterable,predicate,context,useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached=function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(!(isSkipping&&(isSkipping=predicate.call(context,v,k,c)))){
iterations++;
return fn(v,useKeys?k:iterations-1,this$0);}});


return iterations;};

skipSequence.__iteratorUncached=function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var skipping=true;
var iterations=0;
return new Iterator(function(){
var step,k,v;
do {
step=iterator.next();
if(step.done){
if(useKeys||type===ITERATE_VALUES){
return step;}else 
if(type===ITERATE_KEYS){
return iteratorValue(type,iterations++,undefined,step);}else 
{
return iteratorValue(type,iterations++,step.value[1],step);}}


var entry=step.value;
k=entry[0];
v=entry[1];
skipping&&(skipping=predicate.call(context,v,k,this$0));}while(
skipping);
return type===ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return skipSequence;}



function concatFactory(iterable,values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v=isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v=KeyedIterable(v);}

return v;}).
filter(function(v){return v.size!==0;});

if(iters.length===0){
return iterable;}


if(iters.length===1){
var singleton=iters[0];
if(singleton===iterable||
isKeyedIterable&&isKeyed(singleton)||
isIndexed(iterable)&&isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq=concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq=concatSeq.toSetSeq();}

concatSeq=concatSeq.flatten(true);
concatSeq.size=iters.reduce(
function(sum,seq){
if(sum!==undefined){
var size=seq.size;
if(size!==undefined){
return sum+size;}}},



0);

return concatSeq;}



function flattenFactory(iterable,depth,useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached=function(fn,reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter,currentDepth){var this$0=this;
iter.__iterate(function(v,k){
if((!depth||currentDepth<depth)&&isIterable(v)){
flatDeep(v,currentDepth+1);}else 
if(fn(v,useKeys?k:iterations++,this$0)===false){
stopped=true;}

return !stopped;},
reverse);}

flatDeep(iterable,0);
return iterations;};

flatSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(type,reverse);
var stack=[];
var iterations=0;
return new Iterator(function(){
while(iterator){
var step=iterator.next();
if(step.done!==false){
iterator=stack.pop();
continue;}

var v=step.value;
if(type===ITERATE_ENTRIES){
v=v[1];}

if((!depth||stack.length<depth)&&isIterable(v)){
stack.push(iterator);
iterator=v.__iterator(type,reverse);}else 
{
return useKeys?step:iteratorValue(type,iterations++,v,step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable,mapper,context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v,k){return coerce(mapper.call(context,v,k,iterable));}).
flatten(true);}



function interposeFactory(iterable,separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size=iterable.size&&iterable.size*2-1;
interposedSequence.__iterateUncached=function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k)
{return (!iterations||fn(separator,iterations++,this$0)!==false)&&
fn(v,iterations++,this$0)!==false;},
reverse);

return iterations;};

interposedSequence.__iteratorUncached=function(type,reverse){
var iterator=iterable.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
var step;
return new Iterator(function(){
if(!step||iterations%2){
step=iterator.next();
if(step.done){
return step;}}


return iterations%2?
iteratorValue(type,iterations++,separator):
iteratorValue(type,iterations++,step.value,step);});};


return interposedSequence;}



function sortFactory(iterable,comparator,mapper){
if(!comparator){
comparator=defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v,k){return [k,v,index++,mapper?mapper(v,k,iterable):v];}).
toArray();
entries.sort(function(a,b){return comparator(a[3],b[3])||a[2]-b[2];}).forEach(
isKeyedIterable?
function(v,i){entries[i].length=2;}:
function(v,i){entries[i]=v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable,comparator,mapper){
if(!comparator){
comparator=defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v,k){return [v,mapper(v,k,iterable)];}).
reduce(function(a,b){return maxCompare(comparator,a[1],b[1])?b:a;});
return entry&&entry[0];}else 
{
return iterable.reduce(function(a,b){return maxCompare(comparator,a,b)?b:a;});}}



function maxCompare(comparator,a,b){
var comp=comparator(b,a);


return comp===0&&b!==a&&(b===undefined||b===null||b!==b)||comp>0;}



function zipWithFactory(keyIter,zipper,iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size=new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate=function(fn,reverse){













var iterator=this.__iterator(ITERATE_VALUES,reverse);
var step;
var iterations=0;
while(!(step=iterator.next()).done){
if(fn(step.value,iterations++,this)===false){
break;}}


return iterations;};

zipSequence.__iteratorUncached=function(type,reverse){
var iterators=iters.map(function(i)
{return i=Iterable(i),getIterator(reverse?i.reverse():i);});

var iterations=0;
var isDone=false;
return new Iterator(function(){
var steps;
if(!isDone){
steps=iterators.map(function(i){return i.next();});
isDone=steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type,
iterations++,
zipper.apply(null,steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter,seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry!==Object(entry)){
throw new TypeError('Expected [K, V] tuple: '+entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size=this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a,b){
return a>b?1:a<b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: '+keyPath);}

iter=getIterator(Iterable(keyPath));}

return iter;}


createClass(Record,KeyedCollection);

function Record(defaultValues,name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized=true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype,keys);
RecordTypePrototype.size=keys.length;
RecordTypePrototype._name=name;
RecordTypePrototype._keys=keys;
RecordTypePrototype._defaultValues=defaultValues;}

this._map=Map(values);};


var RecordTypePrototype=RecordType.prototype=Object.create(RecordPrototype);
RecordTypePrototype.constructor=RecordType;

return RecordType;}


Record.prototype.toString=function(){
return this.__toString(recordName(this)+' {','}');};




Record.prototype.has=function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get=function(k,notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k,defaultVal):defaultVal;};




Record.prototype.clear=function(){
if(this.__ownerID){
this._map&&this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty||(RecordType._empty=makeRecord(this,emptyMap()));};


Record.prototype.set=function(k,v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "'+k+'" on '+recordName(this));}

var newMap=this._map&&this._map.set(k,v);
if(this.__ownerID||newMap===this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.remove=function(k){
if(!this.has(k)){
return this;}

var newMap=this._map&&this._map.remove(k);
if(this.__ownerID||newMap===this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.wasAltered=function(){
return this._map.wasAltered();};


Record.prototype.__iterator=function(type,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterator(type,reverse);};


Record.prototype.__iterate=function(fn,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterate(fn,reverse);};


Record.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map&&this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
return this;}

return makeRecord(this,newMap,ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE]=RecordPrototype.remove;
RecordPrototype.deleteIn=
RecordPrototype.removeIn=MapPrototype.removeIn;
RecordPrototype.merge=MapPrototype.merge;
RecordPrototype.mergeWith=MapPrototype.mergeWith;
RecordPrototype.mergeIn=MapPrototype.mergeIn;
RecordPrototype.mergeDeep=MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith=MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn=MapPrototype.mergeDeepIn;
RecordPrototype.setIn=MapPrototype.setIn;
RecordPrototype.update=MapPrototype.update;
RecordPrototype.updateIn=MapPrototype.updateIn;
RecordPrototype.withMutations=MapPrototype.withMutations;
RecordPrototype.asMutable=MapPrototype.asMutable;
RecordPrototype.asImmutable=MapPrototype.asImmutable;


function makeRecord(likeRecord,map,ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map=map;
record.__ownerID=ownerID;
return record;}


function recordName(record){
return record._name||record.constructor.name||'Record';}


function setProps(prototype,names){
try{
names.forEach(setProp.bind(undefined,prototype));}
catch(error){}}




function setProp(prototype,name){
Object.defineProperty(prototype,name,{
get:function(){
return this.get(name);},

set:function(value){
invariant(this.__ownerID,'Cannot set on an immutable record.');
this.set(name,value);}});}




createClass(Set,SetCollection);



function Set(value){
return value===null||value===undefined?emptySet():
isSet(value)&&!isOrdered(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



Set.of=function(){
return this(arguments);};


Set.fromKeys=function(value){
return this(KeyedIterable(value).keySeq());};


Set.prototype.toString=function(){
return this.__toString('Set {','}');};




Set.prototype.has=function(value){
return this._map.has(value);};




Set.prototype.add=function(value){
return updateSet(this,this._map.set(value,true));};


Set.prototype.remove=function(value){
return updateSet(this,this._map.remove(value));};


Set.prototype.clear=function(){
return updateSet(this,this._map.clear());};




Set.prototype.union=function(){var iters=SLICE$0.call(arguments,0);
iters=iters.filter(function(x){return x.size!==0;});
if(iters.length===0){
return this;}

if(this.size===0&&!this.__ownerID&&iters.length===1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0;ii<iters.length;ii++){
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




Set.prototype.intersect=function(){var iters=SLICE$0.call(arguments,0);
if(iters.length===0){
return this;}

iters=iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





Set.prototype.subtract=function(){var iters=SLICE$0.call(arguments,0);
if(iters.length===0){
return this;}

iters=iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





Set.prototype.merge=function(){
return this.union.apply(this,arguments);};


Set.prototype.mergeWith=function(merger){var iters=SLICE$0.call(arguments,1);
return this.union.apply(this,iters);};


Set.prototype.sort=function(comparator){

return OrderedSet(sortFactory(this,comparator));};


Set.prototype.sortBy=function(mapper,comparator){

return OrderedSet(sortFactory(this,comparator,mapper));};


Set.prototype.wasAltered=function(){
return this._map.wasAltered();};


Set.prototype.__iterate=function(fn,reverse){var this$0=this;
return this._map.__iterate(function(_,k){return fn(k,k,this$0);},reverse);};


Set.prototype.__iterator=function(type,reverse){
return this._map.map(function(_,k){return k;}).__iterator(type,reverse);};


Set.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID=ownerID;
this._map=newMap;
return this;}

return this.__make(newMap,ownerID);};



function isSet(maybeSet){
return !!(maybeSet&&maybeSet[IS_SET_SENTINEL]);}


Set.isSet=isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=Set.prototype;
SetPrototype[IS_SET_SENTINEL]=true;
SetPrototype[DELETE]=SetPrototype.remove;
SetPrototype.mergeDeep=SetPrototype.merge;
SetPrototype.mergeDeepWith=SetPrototype.mergeWith;
SetPrototype.withMutations=MapPrototype.withMutations;
SetPrototype.asMutable=MapPrototype.asMutable;
SetPrototype.asImmutable=MapPrototype.asImmutable;

SetPrototype.__empty=emptySet;
SetPrototype.__make=makeSet;

function updateSet(set,newMap){
if(set.__ownerID){
set.size=newMap.size;
set._map=newMap;
return set;}

return newMap===set._map?set:
newMap.size===0?set.__empty():
set.__make(newMap);}


function makeSet(map,ownerID){
var set=Object.create(SetPrototype);
set.size=map?map.size:0;
set._map=map;
set.__ownerID=ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET||(EMPTY_SET=makeSet(emptyMap()));}


createClass(OrderedSet,Set);



function OrderedSet(value){
return value===null||value===undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of=function(){
return this(arguments);};


OrderedSet.fromKeys=function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString=function(){
return this.__toString('OrderedSet {','}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet)&&isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet=isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL]=true;

OrderedSetPrototype.__empty=emptyOrderedSet;
OrderedSetPrototype.__make=makeOrderedSet;

function makeOrderedSet(map,ownerID){
var set=Object.create(OrderedSetPrototype);
set.size=map?map.size:0;
set._map=map;
set.__ownerID=ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET||(EMPTY_ORDERED_SET=makeOrderedSet(emptyOrderedMap()));}


createClass(Stack,IndexedCollection);



function Stack(value){
return value===null||value===undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of=function(){
return this(arguments);};


Stack.prototype.toString=function(){
return this.__toString('Stack [',']');};




Stack.prototype.get=function(index,notSetValue){
var head=this._head;
index=wrapIndex(this,index);
while(head&&index--){
head=head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek=function(){
return this._head&&this._head.value;};




Stack.prototype.push=function(){
if(arguments.length===0){
return this;}

var newSize=this.size+arguments.length;
var head=this._head;
for(var ii=arguments.length-1;ii>=0;ii--){
head={
value:arguments[ii],
next:head};}


if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pushAll=function(iter){
iter=IndexedIterable(iter);
if(iter.size===0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head={
value:value,
next:head};});


if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pop=function(){
return this.slice(1);};


Stack.prototype.unshift=function(){
return this.push.apply(this,arguments);};


Stack.prototype.unshiftAll=function(iter){
return this.pushAll(iter);};


Stack.prototype.shift=function(){
return this.pop.apply(this,arguments);};


Stack.prototype.clear=function(){
if(this.size===0){
return this;}

if(this.__ownerID){
this.size=0;
this._head=undefined;
this.__hash=undefined;
this.__altered=true;
return this;}

return emptyStack();};


Stack.prototype.slice=function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

var resolvedBegin=resolveBegin(begin,this.size);
var resolvedEnd=resolveEnd(end,this.size);
if(resolvedEnd!==this.size){

return IndexedCollection.prototype.slice.call(this,begin,end);}

var newSize=this.size-resolvedBegin;
var head=this._head;
while(resolvedBegin--){
head=head.next;}

if(this.__ownerID){
this.size=newSize;
this._head=head;
this.__hash=undefined;
this.__altered=true;
return this;}

return makeStack(newSize,head);};




Stack.prototype.__ensureOwner=function(ownerID){
if(ownerID===this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID=ownerID;
this.__altered=false;
return this;}

return makeStack(this.size,this._head,ownerID,this.__hash);};




Stack.prototype.__iterate=function(fn,reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node){
if(fn(node.value,iterations++,this)===false){
break;}

node=node.next;}

return iterations;};


Stack.prototype.__iterator=function(type,reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new Iterator(function(){
if(node){
var value=node.value;
node=node.next;
return iteratorValue(type,iterations++,value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack&&maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack=isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL]=true;
StackPrototype.withMutations=MapPrototype.withMutations;
StackPrototype.asMutable=MapPrototype.asMutable;
StackPrototype.asImmutable=MapPrototype.asImmutable;
StackPrototype.wasAltered=MapPrototype.wasAltered;


function makeStack(size,head,ownerID,hash){
var map=Object.create(StackPrototype);
map.size=size;
map._head=head;
map.__ownerID=ownerID;
map.__hash=hash;
map.__altered=false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK||(EMPTY_STACK=makeStack(0));}





function mixin(ctor,methods){
var keyCopier=function(key){ctor.prototype[key]=methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols&&
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator=Iterator;

mixin(Iterable,{



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size||0);
this.valueSeq().__iterate(function(v,i){array[i]=v;});
return array;},


toIndexedSeq:function(){
return new ToIndexedSequence(this);},


toJS:function(){
return this.toSeq().map(
function(value){return value&&typeof value.toJS==='function'?value.toJS():value;}).
__toJS();},


toJSON:function(){
return this.toSeq().map(
function(value){return value&&typeof value.toJSON==='function'?value.toJSON():value;}).
__toJS();},


toKeyedSeq:function(){
return new ToKeyedSequence(this,true);},


toMap:function(){

return Map(this.toKeyedSeq());},


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v,k){object[k]=v;});
return object;},


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());},


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);},


toSet:function(){

return Set(isKeyed(this)?this.valueSeq():this);},


toSetSeq:function(){
return new ToSetSequence(this);},


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();},


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);},


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);},





toString:function(){
return '[Iterable]';},


__toString:function(head,tail){
if(this.size===0){
return head+tail;}

return head+' '+this.toSeq().map(this.__toStringMapper).join(', ')+' '+tail;},





concat:function(){var values=SLICE$0.call(arguments,0);
return reify(this,concatFactory(this,values));},


includes:function(searchValue){
return this.some(function(value){return is(value,searchValue);});},


entries:function(){
return this.__iterator(ITERATE_ENTRIES);},


every:function(predicate,context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v,k,c){
if(!predicate.call(context,v,k,c)){
returnValue=false;
return false;}});


return returnValue;},


filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,true));},


find:function(predicate,context,notSetValue){
var entry=this.findEntry(predicate,context);
return entry?entry[1]:notSetValue;},


findEntry:function(predicate,context){
var found;
this.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
found=[k,v];
return false;}});


return found;},


findLastEntry:function(predicate,context){
return this.toSeq().reverse().findEntry(predicate,context);},


forEach:function(sideEffect,context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);},


join:function(separator){
assertNotInfinite(this.size);
separator=separator!==undefined?''+separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst=false:joined+=separator;
joined+=v!==null&&v!==undefined?v.toString():'';});

return joined;},


keys:function(){
return this.__iterator(ITERATE_KEYS);},


map:function(mapper,context){
return reify(this,mapFactory(this,mapper,context));},


reduce:function(reducer,initialReduction,context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length<2){
useFirst=true;}else 
{
reduction=initialReduction;}

this.__iterate(function(v,k,c){
if(useFirst){
useFirst=false;
reduction=v;}else 
{
reduction=reducer.call(context,reduction,v,k,c);}});


return reduction;},


reduceRight:function(reducer,initialReduction,context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed,arguments);},


reverse:function(){
return reify(this,reverseFactory(this,true));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,true));},


some:function(predicate,context){
return !this.every(not(predicate),context);},


sort:function(comparator){
return reify(this,sortFactory(this,comparator));},


values:function(){
return this.__iterator(ITERATE_VALUES);},





butLast:function(){
return this.slice(0,-1);},


isEmpty:function(){
return this.size!==undefined?this.size===0:!this.some(function(){return true;});},


count:function(predicate,context){
return ensureSize(
predicate?this.toSeq().filter(predicate,context):this);},



countBy:function(grouper,context){
return countByFactory(this,grouper,context);},


equals:function(other){
return deepEqual(this,other);},


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq=function(){return iterable.toSeq();};
return entriesSequence;},


filterNot:function(predicate,context){
return this.filter(not(predicate),context);},


findLast:function(predicate,context,notSetValue){
return this.toKeyedSeq().reverse().find(predicate,context,notSetValue);},


first:function(){
return this.find(returnTrue);},


flatMap:function(mapper,context){
return reify(this,flatMapFactory(this,mapper,context));},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,true));},


fromEntrySeq:function(){
return new FromEntriesSequence(this);},


get:function(searchKey,notSetValue){
return this.find(function(_,key){return is(key,searchKey);},undefined,notSetValue);},


getIn:function(searchKeyPath,notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step=iter.next()).done){
var key=step.value;
nested=nested&&nested.get?nested.get(key,NOT_SET):NOT_SET;
if(nested===NOT_SET){
return notSetValue;}}


return nested;},


groupBy:function(grouper,context){
return groupByFactory(this,grouper,context);},


has:function(searchKey){
return this.get(searchKey,NOT_SET)!==NOT_SET;},


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath,NOT_SET)!==NOT_SET;},


isSubset:function(iter){
iter=typeof iter.includes==='function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});},


isSuperset:function(iter){
iter=typeof iter.isSubset==='function'?iter:Iterable(iter);
return iter.isSubset(this);},


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();},


last:function(){
return this.toSeq().reverse().first();},


max:function(comparator){
return maxFactory(this,comparator);},


maxBy:function(mapper,comparator){
return maxFactory(this,comparator,mapper);},


min:function(comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator);},


minBy:function(mapper,comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator,mapper);},


rest:function(){
return this.slice(1);},


skip:function(amount){
return this.slice(Math.max(0,amount));},


skipLast:function(amount){
return reify(this,this.toSeq().reverse().skip(amount).reverse());},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,true));},


skipUntil:function(predicate,context){
return this.skipWhile(not(predicate),context);},


sortBy:function(mapper,comparator){
return reify(this,sortFactory(this,comparator,mapper));},


take:function(amount){
return this.slice(0,Math.max(0,amount));},


takeLast:function(amount){
return reify(this,this.toSeq().reverse().take(amount).reverse());},


takeWhile:function(predicate,context){
return reify(this,takeWhileFactory(this,predicate,context));},


takeUntil:function(predicate,context){
return this.takeWhile(not(predicate),context);},


valueSeq:function(){
return this.toIndexedSeq();},





hashCode:function(){
return this.__hash||(this.__hash=hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL]=true;
IterablePrototype[ITERATOR_SYMBOL]=IterablePrototype.values;
IterablePrototype.__toJS=IterablePrototype.toArray;
IterablePrototype.__toStringMapper=quoteString;
IterablePrototype.inspect=
IterablePrototype.toSource=function(){return this.toString();};
IterablePrototype.chain=IterablePrototype.flatMap;
IterablePrototype.contains=IterablePrototype.includes;


(function(){
try{
Object.defineProperty(IterablePrototype,'length',{
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error){
stack=error.stack;}

if(stack.indexOf('_wrapObject')===-1){
console&&console.warn&&console.warn(
'iterable.length has been deprecated, '+
'use iterable.size or iterable.count(). '+
'This warning will become a silent error in a future version. '+
stack);

return this.size;}}}});}




catch(e){}})();




mixin(KeyedIterable,{



flip:function(){
return reify(this,flipFactory(this));},


findKey:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry&&entry[0];},


findLastKey:function(predicate,context){
return this.toSeq().reverse().findKey(predicate,context);},


keyOf:function(searchValue){
return this.findKey(function(value){return is(value,searchValue);});},


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value,searchValue);});},


mapEntries:function(mapper,context){var this$0=this;
var iterations=0;
return reify(this,
this.toSeq().map(
function(v,k){return mapper.call(context,[k,v],iterations++,this$0);}).
fromEntrySeq());},



mapKeys:function(mapper,context){var this$0=this;
return reify(this,
this.toSeq().flip().map(
function(k,v){return mapper.call(context,k,v,this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL]=true;
KeyedIterablePrototype[ITERATOR_SYMBOL]=IterablePrototype.entries;
KeyedIterablePrototype.__toJS=IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper=function(v,k){return JSON.stringify(k)+': '+quoteString(v);};



mixin(IndexedIterable,{



toKeyedSeq:function(){
return new ToKeyedSequence(this,false);},





filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,false));},


findIndex:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry?entry[0]:-1;},


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key===undefined?-1:key;},


lastIndexOf:function(searchValue){
var key=this.toKeyedSeq().reverse().keyOf(searchValue);
return key===undefined?-1:key;},





reverse:function(){
return reify(this,reverseFactory(this,false));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,false));},


splice:function(index,removeNum){
var numArgs=arguments.length;
removeNum=Math.max(removeNum|0,0);
if(numArgs===0||numArgs===2&&!removeNum){
return this;}




index=resolveBegin(index,index<0?this.count():this.size);
var spliced=this.slice(0,index);
return reify(
this,
numArgs===1?
spliced:
spliced.concat(arrCopy(arguments,2),this.slice(index+removeNum)));},






findLastIndex:function(predicate,context){
var key=this.toKeyedSeq().findLastKey(predicate,context);
return key===undefined?-1:key;},


first:function(){
return this.get(0);},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,false));},


get:function(index,notSetValue){
index=wrapIndex(this,index);
return index<0||this.size===Infinity||
this.size!==undefined&&index>this.size?
notSetValue:
this.find(function(_,key){return key===index;},undefined,notSetValue);},


has:function(index){
index=wrapIndex(this,index);
return index>=0&&(this.size!==undefined?
this.size===Infinity||index<this.size:
this.indexOf(index)!==-1);},



interpose:function(separator){
return reify(this,interposeFactory(this,separator));},


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(),IndexedSeq.of,iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size=zipped.size*iterables.length;}

return reify(this,interleaved);},


last:function(){
return this.get(-1);},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,false));},


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this,zipWithFactory(this,defaultZipper,iterables));},


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0]=this;
return reify(this,zipWithFactory(this,zipper,iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL]=true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL]=true;



mixin(SetIterable,{



get:function(value,notSetValue){
return this.has(value)?value:notSetValue;},


includes:function(value){
return this.has(value);},





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has=IterablePrototype.includes;




mixin(KeyedSeq,KeyedIterable.prototype);
mixin(IndexedSeq,IndexedIterable.prototype);
mixin(SetSeq,SetIterable.prototype);

mixin(KeyedCollection,KeyedIterable.prototype);
mixin(IndexedCollection,IndexedIterable.prototype);
mixin(SetCollection,SetIterable.prototype);




function keyMapper(v,k){
return k;}


function entryMapper(v,k){
return [k,v];}


function not(predicate){
return function(){
return !predicate.apply(this,arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this,arguments);};}



function quoteString(value){
return typeof value==='string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a,b){
return a<b?1:a>b?-1:0;}


function hashIterable(iterable){
if(iterable.size===Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v,k){h=31*h+hashMerge(hash(v),hash(k))|0;}:
function(v,k){h=h+hashMerge(hash(v),hash(k))|0;}:
ordered?
function(v){h=31*h+hash(v)|0;}:
function(v){h=h+hash(v)|0;});

return murmurHashOfSize(size,h);}


function murmurHashOfSize(size,h){
h=imul(h,0xCC9E2D51);
h=imul(h<<15|h>>>-15,0x1B873593);
h=imul(h<<13|h>>>-13,5);
h=(h+0xE6546B64|0)^size;
h=imul(h^h>>>16,0x85EBCA6B);
h=imul(h^h>>>13,0xC2B2AE35);
h=smi(h^h>>>16);
return h;}


function hashMerge(a,b){
return a^b+0x9E3779B9+(a<<6)+(a>>2)|0;}


var Immutable={

Iterable:Iterable,

Seq:Seq,
Collection:Collection,
Map:Map,
OrderedMap:OrderedMap,
List:List,
Stack:Stack,
Set:Set,
OrderedSet:OrderedSet,

Record:Record,
Range:Range,
Repeat:Repeat,

is:is,
fromJS:fromJS};



return Immutable;});
});
__d('react-native-tab-navigator/Badge.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);var _Layout=require('react-native-tab-navigator/Layout.js');var _Layout2=babelHelpers.interopRequireDefault(_Layout);var 



StyleSheet=_reactNative2.default.StyleSheet;var 
Text=_reactNative2.default.Text;var 




Badge=function(_React$Component){babelHelpers.inherits(Badge,_React$Component);


function Badge(props,context){babelHelpers.classCallCheck(this,Badge);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Badge).call(this,
props,context));_this.




state={
computedSize:null};_this._handleLayout=_this._handleLayout.bind(_this);return _this;}babelHelpers.createClass(Badge,[{key:'render',value:function render()


{var 
computedSize=this.state.computedSize;
var style={};
if(!computedSize){
style.opacity=0;}else 
{
style.width=Math.max(computedSize.height,computedSize.width);}


return (
_reactNative2.default.createElement(Text,babelHelpers.extends({},
this.props,{
numberOfLines:1,
onLayout:this._handleLayout,
style:[styles.container,this.props.style,style]}),
this.props.children));}},{key:'_handleLayout',value:function _handleLayout(




event){var _event$nativeEvent$la=
event.nativeEvent.layout;var width=_event$nativeEvent$la.width;var height=_event$nativeEvent$la.height;var 
computedSize=this.state.computedSize;
if(computedSize&&computedSize.height===height&&
computedSize.width===width){
return;}


this.setState({
computedSize:{width:width,height:height}});


if(this.props.onLayout){
this.props.onLayout(event);}}}]);return Badge;}(_reactNative2.default.Component);Badge.propTypes=Text.propTypes;exports.default=Badge;




var styles=StyleSheet.create({
container:{
fontSize:12,
color:'#fff',
backgroundColor:'rgb(0, 122, 255)',
lineHeight:15,
textAlign:'center',
borderWidth:1+_Layout2.default.pixel,
borderColor:'#fefefe',
borderRadius:17/2,
overflow:'hidden'}});
});
__d('react-native-tab-navigator/Layout.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reactNative=require('react-native/Libraries/react-native/react-native.js');exports.default=



{
pixel:1/_reactNative.PixelRatio.get(),
tabBarHeight:49};
});
__d('react-native-tab-navigator/StaticContainer.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);var 





StaticContainer=function(_React$Component){babelHelpers.inherits(StaticContainer,_React$Component);function StaticContainer(){babelHelpers.classCallCheck(this,StaticContainer);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(StaticContainer).apply(this,arguments));}babelHelpers.createClass(StaticContainer,[{key:'shouldComponentUpdate',value:function shouldComponentUpdate(




nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:function render()


{var 
children=this.props.children;
return children?_reactNative2.default.Children.only(children):null;}}]);return StaticContainer;}(_reactNative2.default.Component);StaticContainer.propTypes={shouldUpdate:_reactNative.PropTypes.bool};exports.default=StaticContainer;
});
__d('react-native-tab-navigator/Tab.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);var _Layout=require('react-native-tab-navigator/Layout.js');var _Layout2=babelHelpers.interopRequireDefault(_Layout);var 











Tab=function(_React$Component){babelHelpers.inherits(Tab,_React$Component);









function Tab(props,context){babelHelpers.classCallCheck(this,Tab);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Tab).call(this,
props,context));

_this._handlePress=_this._handlePress.bind(_this);return _this;}babelHelpers.createClass(Tab,[{key:'render',value:function render()


{var _props=
this.props;var title=_props.title;var badge=_props.badge;
var icon=_reactNative2.default.Children.only(this.props.children);

if(title){
title=
_reactNative2.default.createElement(_reactNative.Text,{
numberOfLines:1,
allowFontScaling:!!this.props.allowFontScaling,
style:[styles.title,this.props.titleStyle]},
title);}



if(badge){
badge=_reactNative2.default.cloneElement(badge,{
style:[styles.badge,badge.props.style]});}



var tabStyle=[styles.container,title?null:styles.untitledContainer];
return (
_reactNative2.default.createElement(_reactNative.TouchableOpacity,{
activeOpacity:this.props.hidesTabTouch?1.0:0.8,
onPress:this._handlePress,
style:tabStyle},
_reactNative2.default.createElement(_reactNative.View,null,
icon,
badge),

title));}},{key:'_handlePress',value:function _handlePress(




event){
if(this.props.onPress){
this.props.onPress(event);}}}]);return Tab;}(_reactNative2.default.Component);Tab.propTypes={title:_reactNative.PropTypes.string,titleStyle:_reactNative.Text.propTypes.style,badge:_reactNative.PropTypes.element,onPress:_reactNative.PropTypes.func,hidesTabTouch:_reactNative.PropTypes.bool,allowFontScaling:_reactNative.PropTypes.bool};exports.default=Tab;




var styles=_reactNative.StyleSheet.create({
badge:{
position:'absolute',
top:-6,
right:-10},

container:{
flex:1,
flexDirection:'column',
justifyContent:'flex-end',
alignItems:'center'},

untitledContainer:{
paddingBottom:13},

title:{
color:'#929292',
fontSize:10,
textAlign:'center',
alignSelf:'stretch',
marginTop:4,
marginBottom:1+_Layout2.default.pixel}});
});
__d('react-native-tab-navigator/TabBar.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);var _Layout=require('react-native-tab-navigator/Layout.js');var _Layout2=babelHelpers.interopRequireDefault(_Layout);var 









TabBar=function(_React$Component){babelHelpers.inherits(TabBar,_React$Component);function TabBar(){babelHelpers.classCallCheck(this,TabBar);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(TabBar).apply(this,arguments));}babelHelpers.createClass(TabBar,[{key:'render',value:function render()





{
return (
_reactNative2.default.createElement(_reactNative.View,babelHelpers.extends({},this.props,{style:[styles.container,this.props.style]}),
this.props.children,
_reactNative2.default.createElement(_reactNative.View,{style:[styles.shadow,this.props.shadowStyle]})));}}]);return TabBar;}(_reactNative2.default.Component);TabBar.propTypes=babelHelpers.extends({},_reactNative.View.propTypes,{shadowStyle:_reactNative.View.propTypes.style});exports.default=TabBar;





var styles=_reactNative.StyleSheet.create({
container:{
backgroundColor:'#f8f8f8',
flexDirection:'row',
justifyContent:'space-around',
height:_Layout2.default.tabBarHeight,
position:'absolute',
bottom:0,
left:0,
right:0},

shadow:{
backgroundColor:'rgba(0, 0, 0, 0.25)',
height:_Layout2.default.pixel,
position:'absolute',
left:0,
right:0,
top:_reactNative.Platform.OS==='android'?0:-_Layout2.default.pixel}});
});
__d('react-native-tab-navigator/TabNavigatorItem.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);var 







TabNavigatorItem=function(_React$Component){babelHelpers.inherits(TabNavigatorItem,_React$Component);function TabNavigatorItem(){babelHelpers.classCallCheck(this,TabNavigatorItem);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(TabNavigatorItem).apply(this,arguments));}babelHelpers.createClass(TabNavigatorItem,[{key:'render',value:function render()

















{
var child=_reactNative2.default.Children.only(this.props.children);
return _reactNative2.default.cloneElement(child,{
style:[child.props.style,this.props.style]});}}]);return TabNavigatorItem;}(_reactNative2.default.Component);TabNavigatorItem.propTypes={renderIcon:_reactNative.PropTypes.func.isRequired,renderSelectedIcon:_reactNative.PropTypes.func,badgeText:_reactNative.PropTypes.oneOfType([_reactNative.PropTypes.string,_reactNative.PropTypes.number]),renderBadge:_reactNative.PropTypes.func,title:_reactNative.PropTypes.string,titleStyle:_reactNative.Text.propTypes.style,selectedTitleStyle:_reactNative.Text.propTypes.style,selected:_reactNative.PropTypes.bool,onPress:_reactNative.PropTypes.func,allowFontScaling:_reactNative.PropTypes.bool};TabNavigatorItem.defaultProps={renderIcon:function(){return _reactNative2.default.createElement(_reactNative.View,null);}};exports.default=TabNavigatorItem;
});
__d('sofTokyo/app/components/user/Badge.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');var 


Text=



React.Text;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;

var Dimensions=require('Dimensions');
var windowSize=Dimensions.get("window");
var ParallaxView=require('react-native-parallax-view/index.js');

var styles=StyleSheet.create({

container:{
backgroundColor:'#FFFFFF'},


headerSection:{
height:windowSize.height*0.2,
width:windowSize.width},

name:{
alignSelf:'center',
fontSize:21,
marginTop:10,
marginBottom:5,
color:'black'},

handle:{
alignSelf:'center',
fontSize:16,
color:'white'},


badge:{
borderRadius:40,
width:80,
height:80,
marginTop:windowSize.height*0.025,
left:windowSize.width/2-40,
borderWidth:6,
borderColor:"#f7f7f7"}});var 



Badge=function(_React$Component){babelHelpers.inherits(Badge,_React$Component);
function Badge(props){babelHelpers.classCallCheck(this,Badge);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Badge).call(this,
props));}babelHelpers.createClass(Badge,[{key:'render',value:function render()

{
var parsePhotoUrl=function(photoUrl){
if(photoUrl.indexOf("http")==-1){
photoUrl="http:"+photoUrl;}


return photoUrl;};


var _photo=this.props.data&&this.props.data.avatar?parsePhotoUrl(this.props.data.avatar):"http://www.gravatar.com/avatar/00000000000000000000000000000000?d=mm&f=y";
return (
React.createElement(ParallaxView,{styles:styles.headerSection,
backgroundSource:{uri:null},
windowHeight:windowSize.height*0.2,
blur:'dark',
header:React.createElement(Image,{style:styles.badge,source:{uri:_photo}})},
React.createElement(View,{style:styles.container},
React.createElement(Text,{style:styles.name},' ',this.props.data.displayname,' '))));}}]);return Badge;}(React.Component);






Badge.stateProps={
data:React.PropTypes.object};


module.exports=Badge;
});
__d('react-native-parallax-view/index.js',function(global, require, module, exports) {  module.exports=require('react-native-parallax-view/lib/ParallaxView.js');
});
__d('react-native-parallax-view/lib/ParallaxView.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Dimensions=




React.Dimensions;var StyleSheet=React.StyleSheet;var View=React.View;var ScrollView=React.ScrollView;var Animated=React.Animated;




var ScrollableMixin=require('react-native-scrollable-mixin/ScrollableMixin.js');
var screen=Dimensions.get('window');
var ScrollViewPropTypes=ScrollView.propTypes;

var ParallaxView=React.createClass({displayName:'ParallaxView',
mixins:[ScrollableMixin],

propTypes:babelHelpers.extends({},
ScrollViewPropTypes,{
windowHeight:React.PropTypes.number,
backgroundSource:React.PropTypes.object,
header:React.PropTypes.node,
blur:React.PropTypes.string,
contentInset:React.PropTypes.object}),


getDefaultProps:function(){
return {
windowHeight:300,
contentInset:{
top:-20*screen.scale}};},




getInitialState:function(){
return {
scrollY:new Animated.Value(0)};},







getScrollResponder:function(){
return this._scrollView.getScrollResponder();},


setNativeProps:function(props){
this._scrollView.setNativeProps(props);},


renderBackground:function(){var _props=
this.props;var windowHeight=_props.windowHeight;var backgroundSource=_props.backgroundSource;var blur=_props.blur;var 
scrollY=this.state.scrollY;
if(!windowHeight||!backgroundSource){
return null;}

return (
React.createElement(Animated.Image,{
style:[styles.background,{
height:windowHeight,
transform:[{
translateY:scrollY.interpolate({
inputRange:[-windowHeight,0,windowHeight],
outputRange:[windowHeight/2,0,-windowHeight/3]})},

{
scale:scrollY.interpolate({
inputRange:[-windowHeight,0,windowHeight],
outputRange:[2,1,1]})}]}],



source:backgroundSource}));},








renderHeader:function(){var _props2=
this.props;var windowHeight=_props2.windowHeight;var backgroundSource=_props2.backgroundSource;var 
scrollY=this.state.scrollY;
if(!windowHeight||!backgroundSource){
return null;}

return (
React.createElement(Animated.View,{style:{
position:'relative',
height:windowHeight,
opacity:scrollY.interpolate({
inputRange:[-windowHeight,0,windowHeight/1.2],
outputRange:[1,1,0]})}},


this.props.header));},




render:function(){var _this=this;var _props3=
this.props;var style=_props3.style;var props=babelHelpers.objectWithoutProperties(_props3,['style']);
return (
React.createElement(View,{style:[styles.container,style]},
this.renderBackground(),
React.createElement(ScrollView,babelHelpers.extends({
ref:function(component){_this._scrollView=component;}},
props,{
style:styles.scrollView,
onScroll:Animated.event(
[{nativeEvent:{contentOffset:{y:this.state.scrollY}}}]),

scrollEventThrottle:16}),
this.renderHeader(),
React.createElement(View,{style:styles.content},
this.props.children))));}});







var styles=StyleSheet.create({
container:{
flex:1},

scrollView:{
backgroundColor:'transparent'},

background:{
position:'absolute',
backgroundColor:'#2e2f31',
width:screen.width,
resizeMode:'cover'},

blur:{
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
backgroundColor:'transparent'},

content:{
shadowColor:'#222',
shadowOpacity:0.3,
shadowRadius:2,
backgroundColor:'#fff',
flex:1,
flexDirection:'column'}});



module.exports=ParallaxView;
});
__d('react-native-scrollable-mixin/ScrollableMixin.js',function(global, require, module, exports) {  var ScrollableMixin={
getInnerViewNode:function(){
return this.getScrollResponder().getInnerViewNode();},


scrollTo:function(destY,destX){
this.getScrollResponder().scrollTo(destY,destX);},


scrollWithoutAnimationTo:function(destY,destX){
this.getScrollResponder().scrollWithoutAnimationTo(destY,destX);}};



module.exports=ScrollableMixin;
});
__d('sofTokyo/app/pages/Search.js',function(global, require, module, exports) {  var _apslReactNativeButton=require('apsl-react-native-button/Button.js');var _apslReactNativeButton2=babelHelpers.interopRequireDefault(_apslReactNativeButton);



var React=require('react-native/Libraries/react-native/react-native.js');
var searchApi=require('sofTokyo/app/utils/api/SearchApi.js');
var searchStream=require('sofTokyo/app/services/Streams.js').getStream("Search");
var I18n=require('sofTokyo/app/i18n.js').getTranslations();
var t=require('tcomb-form-native/index.js');var 



View=





React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TextInput=React.TextInput;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicator=React.ActivityIndicator;


var styles={
Search:{
flex:1,
padding:30,
flexDirection:'column',
justifyContent:'center'},

title:{
marginBottom:20,
fontSize:25,
textAlign:'center',
color:'#000'},

searchInput:{
height:50,
padding:4,
marginRight:5,
fontSize:23,
borderWidth:1,
borderColor:'white',
borderRadius:8,
color:'black'},

buttonText:{
fontSize:18,
color:'#111',
alignSelf:'center'},

button:{
height:45,
flexDirection:'row',
backgroundColor:'white',
borderColor:'grey',
borderWidth:1,
borderRadius:8,
marginBottom:10,
marginTop:10,
alignSelf:'stretch',
justifyContent:'center'}};




var SearchForm=t.struct({
text:t.maybe(t.String)});


var Form=t.form.Form;

var Search=React.createClass({displayName:'Search',

getInitialState:function(){
return {
isLoading:false,
error:false};},



handleSubmit:function(){

var params=this.refs.form.getValue();
searchApi.products(params);
searchStream.subscribe(function(results){
var NavigationManager=require('sofTokyo/app/services/NavigationManager.js').getStream();
NavigationManager.onNext({path:'searchResults',params:{data:results.data}});});},



render:function(){
return (
React.createElement(View,{style:styles.Search},
React.createElement(Form,{
ref:'form',
type:SearchForm}),

React.createElement(_apslReactNativeButton2.default,{style:styles.button,textStyle:styles.loginText,
onPress:this.handleSubmit},
I18n.t('search'))));}});






module.exports=Search;
});
__d('sofTokyo/app/utils/api/SearchApi.js',function(global, require, module, exports) {  var 



apiConsts=require("sofTokyo/app/constants/api.js").apiConsts;
var ErrorSubject=require("sofTokyo/app/services/Streams.js").getStream("Errors");
var SearchSubject=require("sofTokyo/app/services/Streams.js").getStream("Search");

var api={
products:function _callee(params,page){var 

response;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return regeneratorRuntime.awrap(fetch(apiConsts.apiEndpoint+'products/search/'+params.text+'/'+(page||1)));case 3:response=_context.sent;
SearchSubject.onNext({type:'product',data:JSON.parse(response._bodyInit)});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context["catch"](0);

console.warn(_context.t0);case 10:case "end":return _context.stop();}}},null,this,[[0,7]]);}};




module.exports=api;
});
__d('sofTokyo/app/pages/SearchResults.js',function(global, require, module, exports) {  var 


React=require('react-native/Libraries/react-native/react-native.js');
var PostElement=require('sofTokyo/app/components/posts/PostElement.js');
var GridView=require('react-native-grid-view/index.js');
var Results=React.createClass({displayName:'Results',
render:function(){
return (
React.createElement(GridView,{
items:this.props.data['posts'],
itemsPerRow:2,
renderItem:function(rowData){return React.createElement(PostElement,{key:rowData.id,postData:rowData});}}));}});




module.exports=Results;
});
__d('sofTokyo/app/components/actions/ToggleMenu.js',function(global, require, module, exports) {  var 



React=require("react-native/Libraries/react-native/react-native.js");
var Icon=require('FontAwesome');
var SidebarSubject=require("sofTokyo/app/services/Streams.js").getStream("Sidebar");var 


StyleSheet=

React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;

var styles=StyleSheet.create({
icon:{
width:25,
marginTop:5,
marginRight:8}});


var ToggleMenuIcon=React.createClass({displayName:"ToggleMenuIcon",
tap:function(){
SidebarSubject.onNext('open');},

render:function(){
return (
React.createElement(TouchableHighlight,{onPress:this.tap,underlayColor:"transparent"},
React.createElement(Icon,{name:"bars",color:"#000",style:styles.icon,size:30})));}});





module.exports=ToggleMenuIcon;
});
__d('sofTokyo/app/components/navigation/Navigation.d.js',function(global, require, module, exports) {  var 




footer=require('sofTokyo/app/components/navigation/FooterNav.js');
var sidePanel=require('sofTokyo/app/components/navigation/SitePanel.js');
var back=require('sofTokyo/app/components/navigation/BackButton.js');

module.exports={footer:footer,sidePanel:sidePanel,back:back};
});
__d('sofTokyo/app/components/navigation/FooterNav.js',function(global, require, module, exports) {  var 



React=require('react-native/Libraries/react-native/react-native.js');
var Icon=require('EvilIcons');
var FaIcon=require('FontAwesome');
var storage=require("sofTokyo/app/services/Storage.js").getInstance();

var I18nService=require('sofTokyo/app/i18n.js');

I18nService.set('ja-JP',{
'home':'ホーム',
"new":"NEW",
"news":"お知らせ",
"myPage":"マイページ",
search:"検索"});


var I18n=I18nService.getTranslations();var 


Text=




React.Text;var View=React.View;var ListView=React.ListView;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;

var styles=StyleSheet.create({
container:{
backgroundColor:'#FFF'},


buttonContentContainer:{
flex:1,
flexDirection:'column',
flexWrap:'wrap',
justifyContent:'center'},


icon:{
alignItems:'center',
flex:1},


list:{
flexDirection:'row',
flexWrap:'wrap',
justifyContent:'center'},

item:{
margin:10,
width:100,
height:100},

buttonContentContainer:{
marginLeft:10}});var 




FooterButton=function(_React$Component){babelHelpers.inherits(FooterButton,_React$Component);function FooterButton(){babelHelpers.classCallCheck(this,FooterButton);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(FooterButton).apply(this,arguments));}babelHelpers.createClass(FooterButton,[{key:'render',value:function render()

{
return (
React.createElement(TouchableHighlight,{onPress:this.props.data.action},
React.createElement(View,{style:styles.buttonContentContainer},
React.createElement(Text,null,
this.props.data.itemLabel))));}}]);return FooterButton;}(React.Component);







FooterButton.propTypes={
data:React.PropTypes.object,
navigator:React.PropTypes.object};var 


FooterNav=function(_React$Component2){babelHelpers.inherits(FooterNav,_React$Component2);
function FooterNav(props){babelHelpers.classCallCheck(this,FooterNav);var _this2=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(FooterNav).call(this,
props));

_this2.state={
showMenu:true};



_this2.NavigationSubject=require("sofTokyo/app/services/NavigationManager.js").getStream();
_this2.NavigationSubject.subscribe(function(route){
if(route.path=='login'||route.path=='register'){
_this2.setState({
showMenu:false});}else 

{
_this2.setState({
showMenu:true});}});





_this2.ds=new ListView.DataSource({rowHasChanged:function(row1,row2){return row1!==row2;}});
_this2.props={
options:[
{
itemLabel:React.createElement(FaIcon,{name:'home',size:33}),
action:function(){
_this2.NavigationSubject.onNext({path:'feed'});}},


{
itemLabel:React.createElement(Icon,{name:'search',size:35}),
action:function(){
console.warn('HEre');
_this2.NavigationSubject.onNext({path:'search'});}},


{
itemLabel:React.createElement(Icon,{name:'star',size:35}),
action:function(){
_this2.NavigationSubject.onNext({path:'schools'});}},



{
itemLabel:React.createElement(Icon,{name:'bell',size:35}),
action:function(){
_this2.NavigationSubject.onNext({path:'news'});}},


{
itemLabel:React.createElement(Icon,{name:'trophy',size:35}),
action:function(){
_this2.NavigationSubject.onNext({path:'best'});}},




{
itemLabel:React.createElement(Icon,{name:'user',size:35}),
action:function(){
storage.load({
key:'UserId'}).
then(function(ret){
_this2.NavigationSubject.onNext({'path':'profile',id:'me'});}).
catch(function(err){
_this2.NavigationSubject.onNext({'path':'login'});});}}]};






_this2.list=_this2.ds.cloneWithRows(_this2.props.options);return _this2;}babelHelpers.createClass(FooterNav,[{key:'render',value:function render()


{var _this3=this;

var _menu=this.state.showMenu?
React.createElement(ListView,{contentContainerStyle:styles.list,
dataSource:this.list,
renderRow:function(data){return React.createElement(FooterButton,{data:data,navigator:_this3.props.navigator});}}):

null;

return (
React.createElement(View,{style:styles.container},
_menu));}}]);return FooterNav;}(React.Component);







module.exports=FooterNav;
});
__d('sofTokyo/app/components/navigation/BackButton.js',function(global, require, module, exports) {  var 




React=require('react-native/Libraries/react-native/react-native.js');var 


StyleSheet=
React.StyleSheet;



var Icon=require('FontAwesome');
var I18nService=require('sofTokyo/app/i18n.js');
I18nService.set('ja-JP',{
back:'戻る'});

var I18n=I18nService.getTranslations();var 

TouchableHighlight=


React.TouchableHighlight;var Text=React.Text;var View=React.View;


var BackButton=React.createClass({displayName:'BackButton',

goBack:function(){

var NavigationSubject=require("sofTokyo/app/services/NavigationManager.js").getStream();
NavigationSubject.onNext({path:'back',navigator:this.props.navigator});},

render:function(){
console.warn(Object.keys(this.props));

return (
React.createElement(TouchableHighlight,{onPress:this.goBack,underlayColor:'transparent'},
React.createElement(View,null,
React.createElement(Icon,{name:'arrow-left'},React.createElement(Text,null,I18n.t('back'))))));}});






module.exports=BackButton;
});
__d('react-native-drawer/index.js',function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 
PanResponder=React.PanResponder;var View=React.View;var StyleSheet=React.StyleSheet;var Dimensions=React.Dimensions;var PropTypes=React.PropTypes;
var deviceScreen=Dimensions.get('window');
var tween=require('react-native-drawer/Tweener.js');

var drawer=React.createClass({displayName:'drawer',

_left:0,
_prevLeft:0,
_offsetOpen:0,
_offsetClosed:0,
_open:false,
_panning:false,
_tweenPending:false,
_lastPress:0,
_panStartTime:0,
_syncAfterUpdate:false,

statics:{
tweenPresets:{
parallax:function(ratio){var side=arguments.length<=1||arguments[1]===undefined?'left':arguments[1];
var drawer={};
drawer[side]=-150*(1-ratio);
return {drawer:drawer};}}},




propTypes:{
type:React.PropTypes.string,
closedDrawerOffset:React.PropTypes.number,
openDrawerOffset:React.PropTypes.number,
openDrawerThreshold:React.PropTypes.number,
relativeDrag:React.PropTypes.bool,
panStartCompensation:React.PropTypes.bool,
panOpenMask:React.PropTypes.number,
panCloseMask:React.PropTypes.number,
captureGestures:React.PropTypes.bool,
negotiatePan:React.PropTypes.bool,
initializeOpen:React.PropTypes.bool,
tweenHandler:React.PropTypes.func,
tweenDuration:React.PropTypes.number,
tweenEasing:React.PropTypes.string,
disabled:React.PropTypes.bool,
acceptDoubleTap:React.PropTypes.bool,
acceptTap:React.PropTypes.bool,
acceptPan:React.PropTypes.bool,
tapToClose:React.PropTypes.bool,
styles:React.PropTypes.object,
onOpen:React.PropTypes.func,
onOpenStart:React.PropTypes.func,
onClose:React.PropTypes.func,
onCloseStart:React.PropTypes.func,
side:React.PropTypes.oneOf(['left','right'])},


getDefaultProps:function(){
return {
type:'displace',
closedDrawerOffset:0,
openDrawerOffset:0,
openDrawerThreshold:.25,
relativeDrag:true,
panStartCompensation:true,
panOpenMask:.25,
panCloseMask:.25,
captureGestures:false,
negotiatePan:false,
initializeOpen:false,
tweenHandler:null,
tweenDuration:250,
tweenEasing:'linear',
disabled:false,
acceptDoubleTap:false,
acceptTap:false,
acceptPan:true,
tapToClose:false,
styles:{},
onOpen:function(){},
onClose:function(){},
side:'left'};},



childContextTypes:{
drawer:PropTypes.any},


getChildContext:function(){
return {
drawer:this};},



getInitialState:function(){
return {viewport:deviceScreen};},


setViewport:function(e){
var viewport=e.nativeEvent.layout;
var oldViewport=this.state.viewport;
if(viewport.width===oldViewport.width&&viewport.height===oldViewport.height){
return;}

this.resync(viewport);},


resync:function(viewport,props){
if(viewport)this._syncAfterUpdate=true;
var viewport=viewport||this.state.viewport;
var props=props||this.props;
this._offsetClosed=props.closedDrawerOffset%1===0?props.closedDrawerOffset:props.closedDrawerOffset*viewport.width;
this._offsetOpen=props.openDrawerOffset%1===0?props.openDrawerOffset:props.openDrawerOffset*viewport.width;
this.setState({viewport:viewport});},


propsWhomRequireUpdate:[
'closedDrawerOffset',
'openDrawerOffset',
'type'],


requiresResync:function(nextProps){
for(var i=0;i<this.propsWhomRequireUpdate.length;i++){
var key=this.propsWhomRequireUpdate[i];
if(this.props[key]!==nextProps[key]){return true;}}},



componentWillReceiveProps:function(nextProps){
if(this.requiresResync(nextProps)){
this.resync(null,nextProps);}},



initialize:function(props){
var fullWidth=this.state.viewport.width;
this._offsetClosed=props.closedDrawerOffset%1===0?props.closedDrawerOffset:props.closedDrawerOffset*fullWidth;
this._offsetOpen=props.openDrawerOffset%1===0?props.openDrawerOffset:props.openDrawerOffset*fullWidth;
this._prevLeft=this._left;

var styles={
container:{
flex:1,
justifyContent:'center',
alignItems:'center'}};


styles.main=babelHelpers.extends({
position:'absolute',
top:0,
height:this.state.viewport.height},
{borderWidth:0},this.props.styles.main);
styles.drawer=babelHelpers.extends({
position:'absolute',
top:0,
height:this.state.viewport.height},
{borderWidth:0},this.props.styles.drawer);

if(props.initializeOpen===true){
this._open=true;
this._left=fullWidth-this._offsetOpen;
styles.main[this.props.side]=0;
styles.drawer[this.props.side]=0;
if(props.type==='static')styles.main[this.props.side]=fullWidth-this._offsetOpen;
if(props.type==='displace')styles.main[this.props.side]=fullWidth-this._offsetOpen;}else 
{
this._open=false;
this._left=this._offsetClosed;
styles.main[this.props.side]=this._offsetClosed;
if(props.type==='static')styles.drawer[this.props.side]=0;
if(props.type==='overlay')styles.drawer[this.props.side]=this._offsetClosed+this._offsetOpen-fullWidth;
if(props.type==='displace')styles.drawer[this.props.side]=-fullWidth+this._offsetClosed+this._offsetOpen;}


if(this.refs.main){
this.refs.drawer.setNativeProps({style:{left:styles.drawer.left}});
this.refs.main.setNativeProps({style:{left:styles.main.left}});}else 
{
this.stylesheet=StyleSheet.create(styles);
this.responder=PanResponder.create({
onStartShouldSetPanResponder:this.handleStartShouldSetPanResponder,
onStartShouldSetPanResponderCapture:this.handleStartShouldSetPanResponderCapture,
onMoveShouldSetPanResponder:this.handleMoveShouldSetPanResponder,
onMoveShouldSetPanResponderCapture:this.handleMoveShouldSetPanResponderCapture,
onPanResponderMove:this.handlePanResponderMove,
onPanResponderRelease:this.handlePanResponderEnd});}



this.resync(null,props);},


componentWillMount:function(){
this.initialize(this.props);},


componentDidUpdate:function(){
if(this._syncAfterUpdate){
this._syncAfterUpdate=false;
this._open?this.open():this.close();}},



updatePosition:function(){
var mainProps={};
var drawerProps={};

var ratio=(this._left-this._offsetClosed)/(this.getOpenLeft()-this._offsetClosed);

switch(this.props.type){
case 'overlay':
drawerProps[this.props.side]=-this.state.viewport.width+this._offsetOpen+this._left;
mainProps[this.props.side]=this._offsetClosed;
break;
case 'static':
mainProps[this.props.side]=this._left;
drawerProps[this.props.side]=0;
break;
case 'displace':
mainProps[this.props.side]=this._left;
drawerProps[this.props.side]=-this.state.viewport.width+this._left+this._offsetOpen;
break;}


if(this.props.tweenHandler){
var propsFrag=this.props.tweenHandler(ratio,this.props.side);
mainProps=babelHelpers.extends(mainProps,propsFrag.main);
drawerProps=babelHelpers.extends(drawerProps,propsFrag.drawer);}

this.refs.drawer.setNativeProps({style:drawerProps});
this.refs.main.setNativeProps({style:mainProps});},


shouldOpenDrawer:function(dx){
if(this._open){
return dx<this.state.viewport.width*this.props.openDrawerThreshold;}else 

{
return dx>this.state.viewport.width*this.props.openDrawerThreshold;}},



handleStartShouldSetPanResponderCapture:function(e,gestureState){
if(this.props.captureGestures)return this.handleStartShouldSetPanResponder(e,gestureState);
return false;},


handleStartShouldSetPanResponder:function(e,gestureState){
if(this.props.negotiatePan)return false;
this._panStartTime=Date.now();
if(!this.testPanResponderMask(e,gestureState)){
return false;}

return true;},


handleMoveShouldSetPanResponderCapture:function(e,gestureState){
if(this.props.captureGestures&&this.props.negotiatePan)return this.handleMoveShouldSetPanResponder(e,gestureState);
return false;},


handleMoveShouldSetPanResponder:function(e,gestureState){
if(!this.props.negotiatePan||this.props.disabled)return false;
var swipeToLeft=gestureState.dx<0?true:false;
var swipeToRight=gestureState.dx>0?true:false;
var swipeUpDown=Math.abs(gestureState.dy)>=Math.abs(gestureState.dx)?true:false;
var swipeInCloseDirection=this.props.side=='left'?swipeToLeft:swipeToRight;
if(swipeUpDown||this._open&&!swipeInCloseDirection||!this._open&&swipeInCloseDirection)return false;
return true;},


processTapGestures:function(){
if(this.props.acceptTap)this._open?this.close():this.open();
if(this.props.tapToClose&&this._open)this.close();
if(this.props.acceptDoubleTap){
var now=new Date().getTime();
if(now-this._lastPress<500){
this._open?this.close():this.open();}

this._lastPress=now;}},



testPanResponderMask:function(e,gestureState){
if(this.props.disabled){return false;}
var x0=e.nativeEvent.pageX;

var deltaOpen=this.props.side==='left'?deviceScreen.width-x0:x0;
var deltaClose=this.props.side==='left'?x0:deviceScreen.width-x0;

var whenClosedMask=this.props.panOpenMask%1===0&&this.props.panOpenMask>1?this.props.panOpenMask:deviceScreen.width*this.props.panOpenMask;
var whenOpenMask=this.props.panCloseMask%1===0&&this.props.panCloseMask>1?this.props.panCloseMask:deviceScreen.width*this.props.panCloseMask;
if(this._open&&deltaOpen>whenOpenMask)return false;
if(!this._open&&deltaClose>whenClosedMask)return false;
return true;},


handlePanResponderMove:function(e,gestureState){
if(!this.props.acceptPan){
return false;}



var dx=gestureState.dx;

var dx=gestureState.dx;

if(this._open^dx<0^this.props.side==='right'){return false;}

var absDx=Math.abs(dx);
var moveX=gestureState.moveX;
var relMoveX=this.props.side==='left'?
this._open?-this.state.viewport.width+moveX:moveX:
this._open?-moveX:this.state.viewport.width-moveX;
var delta=relMoveX-dx;
var factor=absDx/Math.abs(relMoveX);
var adjustedDx=dx+delta*factor;
var left=this.props.panStartCompensation?this._prevLeft+adjustedDx:this._prevLeft+dx;
left=Math.min(left,this.getOpenLeft());
left=Math.max(left,this.getClosedLeft());
this._left=left;
this.updatePosition();
this._panning=true;},


open:function(){var _this=this;
this.props.onOpenStart&&this.props.onOpenStart();
tween({
start:this._left,
end:this.getOpenLeft(),
duration:this.props.tweenDuration,
easingType:this.props.tweenEasing,
onFrame:function(tweenValue){
_this._left=tweenValue;
_this.updatePosition();},

onEnd:function(){
_this._open=true;
_this._prevLeft=_this._left;
if(_this.props.type==='overlay')_this.refs.mainOverlay.setNativeProps({style:{height:_this.state.viewport.height}});
_this.props.onOpen();}});},




close:function(){var _this2=this;
this.props.onCloseStart&&this.props.onCloseStart();
tween({
start:this._left,
end:this.getClosedLeft(),
easingType:this.props.tweenEasing,
duration:this.props.tweenDuration,
onFrame:function(tweenValue){
_this2._left=tweenValue;
_this2.updatePosition();},

onEnd:function(){
_this2._open=false;
_this2._prevLeft=_this2._left;
if(_this2.props.type==='overlay')_this2.refs.mainOverlay.setNativeProps({style:{height:0}});
_this2.props.onClose();}});},




toggle:function(){
this._open?this.close():this.open();},


handlePanResponderEnd:function(e,gestureState){

if(gestureState.dx<100&&Date.now()-this._panStartTime<500){
this._panning=false;
this.processTapGestures();
return;}


var absRelMoveX=this.props.side==='left'?
this._open?this.state.viewport.width-gestureState.moveX:gestureState.moveX:
this._open?gestureState.moveX:this.state.viewport.width-gestureState.moveX;
var calcPos=this.props.relativeDrag?Math.abs(gestureState.dx):absRelMoveX;

this.shouldOpenDrawer(calcPos)?this.open():this.close();

this.updatePosition();
this._prevLeft=this._left;
this._panning=false;},


getMainView:function(){
return (
React.createElement(View,babelHelpers.extends({
key:'main',
style:[this.stylesheet.main,{width:this.getMainWidth(),height:this.state.viewport.height}],
ref:'main'},
this.responder.panHandlers),
this.props.children,
this.props.type==='overlay'?React.createElement(View,{ref:'mainOverlay',style:[this.stylesheet.main,{width:this.getMainWidth(),height:0,backgroundColor:'transparent'}]}):null));},




getDrawerView:function(){
return (
React.createElement(View,babelHelpers.extends({
key:'drawer',
style:[this.stylesheet.drawer,{width:this.getDrawerWidth(),height:this.state.viewport.height}],
ref:'drawer'},
this.responder.panHandlers),
this.props.content));},




render:function(){
var first=this.props.type==='overlay'?this.getMainView():this.getDrawerView();
var second=this.props.type==='overlay'?this.getDrawerView():this.getMainView();

return (
React.createElement(View,{style:this.stylesheet.container,key:'drawerContainer',onLayout:this.setViewport},
first,
second));},




getOpenLeft:function(){
return this.state.viewport.width-this._offsetOpen;},


getClosedLeft:function(){
return this._offsetClosed;},


getMainWidth:function(){
return this.state.viewport.width-this._offsetClosed;},


getDrawerWidth:function(){
return this.state.viewport.width-this._offsetOpen;}});




module.exports=drawer;
});
__d('react-native-drawer/Tweener.js',function(global, require, module, exports) {  var easingTypes=require('tween-functions/index.js');

module.exports=function(config){
return new Tween(config);};


function Tween(config){
this._rafLoop=this._rafLoop.bind(this);
this.terminate=this.terminate.bind(this);

this._t0=Date.now();
this._config=config;
this._rafLoop();}


Tween.prototype._rafLoop=function(){
if(this._break){return;}var _config=

this._config;var duration=_config.duration;var start=_config.start;var end=_config.end;var easingType=_config.easingType;
var now=Date.now();
var elapsed=now-this._t0;

if(elapsed>=duration){
this._config.onFrame(end);
this._config.onEnd();
return;}


var tweenVal=easingTypes[easingType](elapsed,start,end,duration);
this._config.onFrame(tweenVal);

requestAnimationFrame(this._rafLoop);};


Tween.prototype.terminate=function(){
this._break=true;};
});
__d('tween-functions/index.js',function(global, require, module, exports) {  'use strict';


var tweenFunctions={
linear:function(t,b,_c,d){
var c=_c-b;
return c*t/d+b;},

easeInQuad:function(t,b,_c,d){
var c=_c-b;
return c*(t/=d)*t+b;},

easeOutQuad:function(t,b,_c,d){
var c=_c-b;
return -c*(t/=d)*(t-2)+b;},

easeInOutQuad:function(t,b,_c,d){
var c=_c-b;
if((t/=d/2)<1){
return c/2*t*t+b;}else 
{
return -c/2*(--t*(t-2)-1)+b;}},


easeInCubic:function(t,b,_c,d){
var c=_c-b;
return c*(t/=d)*t*t+b;},

easeOutCubic:function(t,b,_c,d){
var c=_c-b;
return c*((t=t/d-1)*t*t+1)+b;},

easeInOutCubic:function(t,b,_c,d){
var c=_c-b;
if((t/=d/2)<1){
return c/2*t*t*t+b;}else 
{
return c/2*((t-=2)*t*t+2)+b;}},


easeInQuart:function(t,b,_c,d){
var c=_c-b;
return c*(t/=d)*t*t*t+b;},

easeOutQuart:function(t,b,_c,d){
var c=_c-b;
return -c*((t=t/d-1)*t*t*t-1)+b;},

easeInOutQuart:function(t,b,_c,d){
var c=_c-b;
if((t/=d/2)<1){
return c/2*t*t*t*t+b;}else 
{
return -c/2*((t-=2)*t*t*t-2)+b;}},


easeInQuint:function(t,b,_c,d){
var c=_c-b;
return c*(t/=d)*t*t*t*t+b;},

easeOutQuint:function(t,b,_c,d){
var c=_c-b;
return c*((t=t/d-1)*t*t*t*t+1)+b;},

easeInOutQuint:function(t,b,_c,d){
var c=_c-b;
if((t/=d/2)<1){
return c/2*t*t*t*t*t+b;}else 
{
return c/2*((t-=2)*t*t*t*t+2)+b;}},


easeInSine:function(t,b,_c,d){
var c=_c-b;
return -c*Math.cos(t/d*(Math.PI/2))+c+b;},

easeOutSine:function(t,b,_c,d){
var c=_c-b;
return c*Math.sin(t/d*(Math.PI/2))+b;},

easeInOutSine:function(t,b,_c,d){
var c=_c-b;
return -c/2*(Math.cos(Math.PI*t/d)-1)+b;},

easeInExpo:function(t,b,_c,d){
var c=_c-b;
return t==0?b:c*Math.pow(2,10*(t/d-1))+b;},

easeOutExpo:function(t,b,_c,d){
var c=_c-b;
return t==d?b+c:c*(-Math.pow(2,-10*t/d)+1)+b;},

easeInOutExpo:function(t,b,_c,d){
var c=_c-b;
if(t===0){
return b;}

if(t===d){
return b+c;}

if((t/=d/2)<1){
return c/2*Math.pow(2,10*(t-1))+b;}else 
{
return c/2*(-Math.pow(2,-10*--t)+2)+b;}},


easeInCirc:function(t,b,_c,d){
var c=_c-b;
return -c*(Math.sqrt(1-(t/=d)*t)-1)+b;},

easeOutCirc:function(t,b,_c,d){
var c=_c-b;
return c*Math.sqrt(1-(t=t/d-1)*t)+b;},

easeInOutCirc:function(t,b,_c,d){
var c=_c-b;
if((t/=d/2)<1){
return -c/2*(Math.sqrt(1-t*t)-1)+b;}else 
{
return c/2*(Math.sqrt(1-(t-=2)*t)+1)+b;}},


easeInElastic:function(t,b,_c,d){
var c=_c-b;
var a,p,s;
s=1.70158;
p=0;
a=c;
if(t===0){
return b;}else 
if((t/=d)===1){
return b+c;}

if(!p){
p=d*0.3;}

if(a<Math.abs(c)){
a=c;
s=p/4;}else 
{
s=p/(2*Math.PI)*Math.asin(c/a);}

return -(a*Math.pow(2,10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p))+b;},

easeOutElastic:function(t,b,_c,d){
var c=_c-b;
var a,p,s;
s=1.70158;
p=0;
a=c;
if(t===0){
return b;}else 
if((t/=d)===1){
return b+c;}

if(!p){
p=d*0.3;}

if(a<Math.abs(c)){
a=c;
s=p/4;}else 
{
s=p/(2*Math.PI)*Math.asin(c/a);}

return a*Math.pow(2,-10*t)*Math.sin((t*d-s)*(2*Math.PI)/p)+c+b;},

easeInOutElastic:function(t,b,_c,d){
var c=_c-b;
var a,p,s;
s=1.70158;
p=0;
a=c;
if(t===0){
return b;}else 
if((t/=d/2)===2){
return b+c;}

if(!p){
p=d*(0.3*1.5);}

if(a<Math.abs(c)){
a=c;
s=p/4;}else 
{
s=p/(2*Math.PI)*Math.asin(c/a);}

if(t<1){
return -0.5*(a*Math.pow(2,10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p))+b;}else 
{
return a*Math.pow(2,-10*(t-=1))*Math.sin((t*d-s)*(2*Math.PI)/p)*0.5+c+b;}},


easeInBack:function(t,b,_c,d,s){
var c=_c-b;
if(s===void 0){
s=1.70158;}

return c*(t/=d)*t*((s+1)*t-s)+b;},

easeOutBack:function(t,b,_c,d,s){
var c=_c-b;
if(s===void 0){
s=1.70158;}

return c*((t=t/d-1)*t*((s+1)*t+s)+1)+b;},

easeInOutBack:function(t,b,_c,d,s){
var c=_c-b;
if(s===void 0){
s=1.70158;}

if((t/=d/2)<1){
return c/2*(t*t*(((s*=1.525)+1)*t-s))+b;}else 
{
return c/2*((t-=2)*t*(((s*=1.525)+1)*t+s)+2)+b;}},


easeInBounce:function(t,b,_c,d){
var c=_c-b;
var v;
v=tweenFunctions.easeOutBounce(d-t,0,c,d);
return c-v+b;},

easeOutBounce:function(t,b,_c,d){
var c=_c-b;
if((t/=d)<1/2.75){
return c*(7.5625*t*t)+b;}else 
if(t<2/2.75){
return c*(7.5625*(t-=1.5/2.75)*t+0.75)+b;}else 
if(t<2.5/2.75){
return c*(7.5625*(t-=2.25/2.75)*t+0.9375)+b;}else 
{
return c*(7.5625*(t-=2.625/2.75)*t+0.984375)+b;}},


easeInOutBounce:function(t,b,_c,d){
var c=_c-b;
var v;
if(t<d/2){
v=tweenFunctions.easeInBounce(t*2,0,c,d);
return v*0.5+b;}else 
{
v=tweenFunctions.easeOutBounce(t*2-d,0,c,d);
return v*0.5+c*0.5+b;}}};




module.exports=tweenFunctions;
});
__d('gb-native-router/index.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var _require=
require('fbemitter/index.js');var EventEmitter=_require.EventEmitter;

var NavBarContainer=require('gb-native-router/components/NavBarContainer.js');var 


StyleSheet=




React.StyleSheet;var Navigator=React.Navigator;var StatusBarIOS=React.StatusBarIOS;var View=React.View;var Platform=React.Platform;var 

Router=function(_React$Component){babelHelpers.inherits(Router,_React$Component);
function Router(props){babelHelpers.classCallCheck(this,Router);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Router).call(this,
props));
_this.state={
route:{
name:null,
index:null}};


_this.emitter=new EventEmitter();return _this;}babelHelpers.createClass(Router,[{key:'onWillFocus',value:function onWillFocus(


route){
this.setState({route:route});
this.emitter.emit('willFocus',route.name);}},{key:'onDidFocus',value:function onDidFocus(


route){
this.emitter.emit('didFocus',route.name);}},{key:'onBack',value:function onBack(


navigator){
if(this.state.route.index>0){
navigator.pop();}}},{key:'onForward',value:function onForward(



route,navigator){
route.index=this.state.route.index+1||1;
navigator.push(route);}},{key:'setRightProps',value:function setRightProps(


props){
this.setState({rightProps:props});}},{key:'setLeftProps',value:function setLeftProps(


props){
this.setState({leftProps:props});}},{key:'setTitleProps',value:function setTitleProps(


props){
this.setState({titleProps:props});}},{key:'customAction',value:function customAction(


opts){
this.props.customAction(opts);}},{key:'configureScene',value:function configureScene(


route){
return route.sceneConfig||Navigator.SceneConfigs.FloatFromRight;}},{key:'renderScene',value:function renderScene(


route,navigator){

var goForward=function(route){
route.index=this.state.route.index+1||1;
navigator.push(route);}.
bind(this);

var replaceRoute=function(route){
route.index=this.state.route.index||0;
navigator.replace(route);}.
bind(this);

var resetToRoute=function(route){
route.index=0;
navigator.resetTo(route);}.
bind(this);

var goBackwards=function(){
this.onBack(navigator);}.
bind(this);

var goToFirstRoute=function(){
navigator.popToTop();};


var setRightProps=function(props){
this.setState({rightProps:props});}.
bind(this);

var setLeftProps=function(props){
this.setState({leftProps:props});}.
bind(this);

var setTitleProps=function(props){
this.setState({titleProps:props});}.
bind(this);

var customAction=function(opts){
this.customAction(opts);}.
bind(this);

var Content=route.component;


var extraStyling={};
if(this.props.hideNavigationBar){
extraStyling.marginTop=0;}


var margin;
if(route.trans){
margin=0;}else 
if(this.props.hideNavigationBar||route.hideNavigationBar){
margin=this.props.noStatusBar?0:20;}else 
{
margin=64;}


return (
React.createElement(View,{
style:[styles.container,this.props.bgStyle,extraStyling,{marginTop:margin}]},
React.createElement(Content,babelHelpers.extends({
name:route.name,
index:route.index,
data:route.data,
toRoute:goForward,
toBack:goBackwards,
routeEmitter:this.emitter,
replaceRoute:replaceRoute,
resetToRoute:resetToRoute,
reset:goToFirstRoute,
setRightProps:setRightProps,
setLeftProps:setLeftProps,
setTitleProps:setTitleProps,
customAction:customAction},
route.passProps))));}},{key:'render',value:function render()






{
var navigationBar;

if(Platform.OS==='ios'){
if(this.props.statusBarColor==='black'){
StatusBarIOS.setStyle(0);}else 
{
StatusBarIOS.setStyle(1);}}else 

if(Platform.OS==='android'){}



if(!this.props.hideNavigationBar){
navigationBar=
React.createElement(NavBarContainer,{
style:this.props.headerStyle,
navigator:navigator,
currentRoute:this.state.route,
backButtonComponent:this.props.backButtonComponent,
rightCorner:this.props.rightCorner,
titleStyle:this.props.titleStyle,
borderBottomWidth:this.props.borderBottomWidth,
borderColor:this.props.borderColor,
toRoute:this.onForward.bind(this),
toBack:this.onBack.bind(this),
leftProps:this.state.leftProps,
rightProps:this.state.rightProps,
titleProps:this.state.titleProps,
customAction:this.customAction.bind(this)});}



return (
React.createElement(Navigator,{
ref:'navigator',
initialRoute:this.props.firstRoute,
navigationBar:navigationBar,
renderScene:this.renderScene.bind(this),
onDidFocus:this.onDidFocus.bind(this),
onWillFocus:this.onWillFocus.bind(this),
configureScene:this.configureScene}));}}]);return Router;}(React.Component);





var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'#FFFFFF'}});



module.exports=Router;
});
__d('fbemitter/index.js',function(global, require, module, exports) {  var 








fbemitter={
EventEmitter:require('BaseEventEmitter')};


module.exports=fbemitter;
});
__d('BaseEventEmitter',function(global, require, module, exports) {  'use strict';













function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

var EmitterSubscription=require('EmitterSubscription');
var EventSubscriptionVendor=require('EventSubscriptionVendor');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');















var BaseEventEmitter=function(){




function BaseEventEmitter(){
_classCallCheck(this,BaseEventEmitter);

this._subscriber=new EventSubscriptionVendor();
this._currentSubscription=null;}

















BaseEventEmitter.prototype.addListener=function addListener(eventType,listener,context){
return this._subscriber.addSubscription(eventType,new EmitterSubscription(this._subscriber,listener,context));};













BaseEventEmitter.prototype.once=function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});};











BaseEventEmitter.prototype.removeAllListeners=function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);};
























BaseEventEmitter.prototype.removeCurrentListener=function removeCurrentListener(){
!!!this._currentSubscription?process.env.NODE_ENV!=='production'?invariant(false,'Not in an emitting cycle; there is no current subscription'):invariant(false):undefined;
this._subscriber.removeSubscription(this._currentSubscription);};










BaseEventEmitter.prototype.listeners=function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?subscriptions.filter(emptyFunction.thatReturnsTrue).map(function(subscription){
return subscription.listener;}):
[];};

















BaseEventEmitter.prototype.emit=function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii<keys.length;ii++){
var key=keys[ii];
var subscription=subscriptions[key];

if(subscription){
this._currentSubscription=subscription;
this.__emitToSubscription.apply(this,[subscription].concat(Array.prototype.slice.call(arguments)));}}


this._currentSubscription=null;}};













BaseEventEmitter.prototype.__emitToSubscription=function __emitToSubscription(subscription,eventType){
var args=Array.prototype.slice.call(arguments,2);
subscription.listener.apply(subscription.context,args);};


return BaseEventEmitter;}();


module.exports=BaseEventEmitter;
});
__d('EmitterSubscription',function(global, require, module, exports) {  'use strict';













function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}

var EventSubscription=require('EventSubscription');





var EmitterSubscription=function(_EventSubscription){
_inherits(EmitterSubscription,_EventSubscription);










function EmitterSubscription(subscriber,listener,context){
_classCallCheck(this,EmitterSubscription);

_EventSubscription.call(this,subscriber);
this.listener=listener;
this.context=context;}


return EmitterSubscription;}(
EventSubscription);

module.exports=EmitterSubscription;
});
__d('EventSubscription',function(global, require, module, exports) {  'use strict';


















function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

var EventSubscription=function(){






function EventSubscription(subscriber){
_classCallCheck(this,EventSubscription);

this.subscriber=subscriber;}






EventSubscription.prototype.remove=function remove(){
if(this.subscriber){
this.subscriber.removeSubscription(this);
this.subscriber=null;}};



return EventSubscription;}();


module.exports=EventSubscription;
});
__d('EventSubscriptionVendor',function(global, require, module, exports) {  'use strict';













function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

var invariant=require('invariant');






var EventSubscriptionVendor=function(){
function EventSubscriptionVendor(){
_classCallCheck(this,EventSubscriptionVendor);

this._subscriptionsForType={};
this._currentSubscription=null;}









EventSubscriptionVendor.prototype.addSubscription=function addSubscription(eventType,subscription){
!(subscription.subscriber===this)?process.env.NODE_ENV!=='production'?invariant(false,'The subscriber of the subscription is incorrectly set.'):invariant(false):undefined;
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType]=[];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType=eventType;
subscription.key=key;
return subscription;};









EventSubscriptionVendor.prototype.removeAllSubscriptions=function removeAllSubscriptions(eventType){
if(eventType===undefined){
this._subscriptionsForType={};}else 
{
delete this._subscriptionsForType[eventType];}};










EventSubscriptionVendor.prototype.removeSubscription=function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}};
















EventSubscriptionVendor.prototype.getSubscriptionsForType=function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];};


return EventSubscriptionVendor;}();


module.exports=EventSubscriptionVendor;
});
__d('invariant',function(global, require, module, exports) {  'use strict';























function invariant(condition,format,a,b,c,d,e,f){
if(process.env.NODE_ENV!=='production'){
if(format===undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format===undefined){
error=new Error('Minified exception occurred; use the non-minified dev environment '+'for the full error message and additional helpful warnings.');}else 
{
var args=[a,b,c,d,e,f];
var argIndex=0;
error=new Error(format.replace(/%s/g,function(){
return args[argIndex++];}));

error.name='Invariant Violation';}


error.framesToPop=1;
throw error;}}



module.exports=invariant;
});
__d('emptyFunction',function(global, require, module, exports) {  "use strict";












function makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns=makeEmptyFunction;
emptyFunction.thatReturnsFalse=makeEmptyFunction(false);
emptyFunction.thatReturnsTrue=makeEmptyFunction(true);
emptyFunction.thatReturnsNull=makeEmptyFunction(null);
emptyFunction.thatReturnsThis=function(){
return this;};

emptyFunction.thatReturnsArgument=function(arg){
return arg;};


module.exports=emptyFunction;
});
__d('gb-native-router/components/NavBarContainer.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');

var NavBarContent=require('gb-native-router/components/NavBarContent.js');var 


StyleSheet=

React.StyleSheet;var View=React.View;

var NavBarContainer=React.createClass({displayName:'NavBarContainer',

getInitialState:function(){
return {
backButtonOpacity:0,
previousRoute:{}};},



componentWillReceiveProps:function(newProps){
if(this.props&&this.props.currentRoute.index!==newProps.currentRoute.index){
this.setState({
previousRoute:this.props.currentRoute});}},




goBack:function(){
this.props.toBack(this.props.navigator);},


goForward:function(route){
this.props.toRoute(route,this.props.navigator);},


customAction:function(opts){
this.props.customAction(opts);},



render:function(){
var trans,
navbarStyle,
navbarContent;

if(this.props.currentRoute.trans){
trans={backgroundColor:'transparent'};}else 
{
trans={};}


if(this.props.currentRoute.hideNavigationBar){
navbarStyle=styles.navbarContainerHidden;}else 
{
navbarStyle=styles.navbarContainer;}


if(this.props.currentRoute.trans){
navbarContent=
React.createElement(NavBarContent,{
route:this.state.previousRoute,
backButtonComponent:this.props.backButtonComponent,
rightCorner:this.props.rightCorner,
titleStyle:this.props.titleStyle,
willDisappear:'true'});}else 

if(this.props.currentRoute.hideNavigationBar){
navbarContent=
React.createElement(NavBarContent,{
route:this.props.currentRoute,
backButtonComponent:this.props.backButtonComponent,
rightCorner:this.props.rightCorner,
titleStyle:this.props.titleStyle,
borderBottomWidth:this.props.borderBottomWidth,
borderColor:this.props.borderColor,
goBack:this.goBack,
goForward:this.goForward,
leftProps:this.props.leftProps,
rightProps:this.props.rightProps,
titleProps:this.props.titleProps,
customAction:this.customAction});}else 


{
navbarContent=
React.createElement(NavBarContent,{
route:this.props.currentRoute,
backButtonComponent:this.props.backButtonComponent,
rightCorner:this.props.rightCorner,
titleStyle:this.props.titleStyle,
borderBottomWidth:this.props.borderBottomWidth,
borderColor:this.props.borderColor,
goBack:this.goBack,
goForward:this.goForward,
leftProps:this.props.leftProps,
rightProps:this.props.rightProps,
titleProps:this.props.titleProps,
customAction:this.customAction});}




return (
React.createElement(View,{style:[navbarStyle,this.props.style,trans]},
navbarContent));}});





var styles=StyleSheet.create({
navbarContainer:{
position:'absolute',
top:0,
left:0,
right:0,
height:64},

navbarContainerHidden:{
position:'absolute',
top:-64,
left:0,
right:0,
height:64}});



module.exports=NavBarContainer;
});
__d('gb-native-router/components/NavBarContent.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var NavButton=require('gb-native-router/components/NavButton.js');var 


StyleSheet=




React.StyleSheet;var Text=React.Text;var View=React.View;var Animated=React.Animated;var Easing=React.Easing;

var NavBarContent=React.createClass({displayName:'NavBarContent',

getInitialState:function(){
return {
opacity:this.props.willDisappear?new Animated.Value(1):new Animated.Value(0)};},



componentWillReceiveProps:function(newProps){var _this=this;
if(newProps.route!==this.props.route){
this.state.opacity.setValue(this.props.willDisappear?1:0);

setTimeout(function(){
Animated.timing(
_this.state.opacity,
{
fromValue:_this.props.willDisappear?1:0,
toValue:_this.props.willDisappear?0:1,
duration:300,
easing:Easing.easeOutQuad}).

start();},
0);}},



goBack:function(){
if(!this.props.willDisappear){
this.props.goBack();}},



goForward:function(route){
this.props.goForward(route);},


customAction:function(opts){
this.props.customAction(opts);},


render:function(){
var transitionStyle={
opacity:this.state.opacity},

leftCorner,
LeftCorner,
rightCorner,
RightCorner,
titleComponent,
leftCornerContent,
rightCornerContent,
titleContent,
TitleComponent,
trans,
width,
color;






if(this.props.route.leftCorner){
LeftCorner=this.props.route.leftCorner;
leftCornerContent=React.createElement(LeftCorner,babelHelpers.extends({toRoute:this.goForward,customAction:this.customAction},this.props.leftProps,this.props.route.leftCornerProps));}else 
if(this.props.route.index>0){
leftCornerContent=React.createElement(NavButton,{onPress:this.goBack,backButtonComponent:this.props.backButtonComponent});}


leftCorner=
React.createElement(View,{style:[styles.corner,styles.alignLeft]},
leftCornerContent);







if(this.props.route.rightCorner||this.props.rightCorner){
RightCorner=this.props.route.rightCorner||this.props.rightCorner;
rightCornerContent=React.createElement(RightCorner,babelHelpers.extends({toRoute:this.goForward,customAction:this.customAction},this.props.rightProps,this.props.route.rightCornerProps));}


rightCorner=
React.createElement(View,{style:[styles.corner,styles.alignRight]},
rightCornerContent);








if(this.props.route.titleComponent){
TitleComponent=this.props.route.titleComponent;
titleContent=React.createElement(TitleComponent,this.props.titleProps);}else 
{
titleContent=
React.createElement(Text,{style:[styles.navbarText,this.props.titleStyle],numberOfLines:1},
this.props.route.name);}




titleComponent=
React.createElement(View,{style:{flex:3}},
titleContent);



if(this.props.route.trans===true)
trans={backgroundColor:'transparent',borderBottomWidth:0};else 

trans={};

width=this.props.borderBottomWidth?this.props.borderBottomWidth:0;
color=this.props.borderColor?this.props.borderColor:null;

return (
React.createElement(Animated.View,{style:[styles.navbar,transitionStyle,this.props.route.headerStyle,{borderBottomWidth:width,borderColor:color},trans]},
leftCorner,
titleComponent,
rightCorner));}});






var styles=StyleSheet.create({
navbar:{
position:'absolute',
top:0,
left:0,
right:0,
height:64,
justifyContent:'center',
alignItems:'center',
flexDirection:'row',
paddingTop:13},

navbarText:{
color:'white',
fontSize:17,
margin:10,
marginTop:14,
fontWeight:'600',
textAlign:'center',
alignItems:'center'},

corner:{
flex:1,
justifyContent:'center'},


alignLeft:{
alignItems:'flex-start'},

alignRight:{
alignItems:'flex-end'},

buttonTextLeft:{
marginLeft:10},

buttonTextRight:{
marginRight:10}});




module.exports=NavBarContent;
});
__d('gb-native-router/components/NavButton.js',function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


StyleSheet=



React.StyleSheet;var Text=React.Text;var View=React.View;var TouchableHighlight=React.TouchableHighlight;


var NavButton=React.createClass({displayName:'NavButton',

onPress:function(){
this.props.onPress();},


render:function(){
var backButton,
BackButton;

if(this.props.backButtonComponent){
BackButton=this.props.backButtonComponent;
backButton=React.createElement(View,null,React.createElement(BackButton,null));}else 
{
backButton=React.createElement(Text,{style:styles.navbarText},'Back');}


return (
React.createElement(TouchableHighlight,{onPress:this.onPress,underlayColor:'transparent'},
backButton));}});






var styles=StyleSheet.create({
navbarText:{
color:'white',
fontSize:16,
margin:10,
fontWeight:'600',
textAlign:'center',
alignItems:'center'}});




module.exports=NavButton;
});
;require("InitializeJavaScriptAppEngine");
;require("sofTokyo/index.ios.js");
__SSTOKENSTRING = "@generated SignedSource<<b1641261eef13002b96ab9032a4deb94>>";
